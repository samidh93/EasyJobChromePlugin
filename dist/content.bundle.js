var B=Object.defineProperty,F=Object.defineProperties;var U=Object.getOwnPropertyDescriptors;var D=Object.getOwnPropertySymbols;var J=Object.prototype.hasOwnProperty,Q=Object.prototype.propertyIsEnumerable;var O=(s,e,t)=>e in s?B(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,L=(s,e)=>{for(var t in e||(e={}))J.call(e,t)&&O(s,t,e[t]);if(D)for(var t of D(e))Q.call(e,t)&&O(s,t,e[t]);return s},S=(s,e)=>F(s,U(e));var A=class{static async wait(e=1e3){await new Promise(t=>setTimeout(t,e))}static debugLog(e){console.log("[".concat(this.constructor.name,"] ").concat(e))}static errorLog(e,t){console.error("[".concat(this.constructor.name,"] ").concat(e,":"),t)}},f=A;var E=class extends f{static async getTotalJobsSearchCount(e){try{await this.wait();let t=e.querySelector(".jobs-search-results-list__subtitle");if(t){let r=t.textContent.trim(),o=parseInt(r.split(" ")[0].replace(/,/g,"").replace(/\./g,"").replace(/\+/g,""));return this.debugLog("Total jobs found: ".concat(o)),o}else return this.debugLog("No results found"),0}catch(t){return this.errorLog("Error fetching total jobs count",t),0}}static async getAvailablePages(e,t){try{await this.wait();let r=e.querySelector('ul[class*="jobs-search-pagination__pages"]');if(!r)return this.debugLog("Pagination list not found."),0;let o=r.querySelectorAll("li");if(o.length===0)return this.debugLog("No pagination items found."),0;let n=o[o.length-1];this.debugLog("Last page: ".concat(n));let i=Math.ceil(t/25);return this.debugLog("Total pages available: ".concat(i)),i}catch(r){return this.errorLog("Error fetching available pages",r),0}}static async getListOfJobsOnPage(e){try{await this.wait();let t=e.querySelector(".scaffold-layout__list");if(!t)return this.debugLog("Jobs container not found."),[];let r=t.querySelectorAll("li[class*='scaffold-layout__list-item']");return this.debugLog("Found ".concat(r.length," jobs on this page.")),Array.from(r)}catch(t){return this.errorLog("Error fetching list of jobs",t),[]}}static async goToNextPage(){try{await this.wait();let e=document.querySelector('button[aria-label="View next page"]')||document.querySelector("button.jobs-search-pagination__button--next")||document.querySelector('button[aria-label="Next"]');return e&&!e.disabled?(this.debugLog("Found next page button, clicking..."),e.click(),this.debugLog("Clicked next page button"),await this.wait(3e3),!0?(this.debugLog("Successfully navigated to next page"),!0):(this.debugLog("Jobs failed to load on next page"),!1)):(this.debugLog("Next page button not found or disabled - likely on last page"),!1)}catch(e){return this.errorLog("Error navigating to next page",e),!1}}static async isOnLastPage(){try{let e=document.querySelector('button[aria-label="View next page"]')||document.querySelector("button.jobs-search-pagination__button--next");return!e||e.disabled}catch(e){return this.errorLog("Error checking if on last page",e),!0}}},y=E;var k=class extends f{static async getJobClickableElement(e){try{await this.wait();let t=e.querySelector("a");return t||(this.debugLog("Could not find clickable element for job"),null)}catch(t){return this.errorLog("Error fetching clickable element",t),null}}static async scrollDownToLoadNextJob(e){try{await this.wait(),e.scrollIntoView({behavior:"smooth",block:"center"}),this.debugLog("Scrolled down to load next job")}catch(t){this.errorLog("Error scrolling down to load next job",t)}}static async clickOnJob(e){try{e.click(),this.debugLog("Clicked on job element")}catch(t){this.debugLog("Could not click on job element",t)}}static async isEasyButtonAvailable(){try{return document.querySelector(".jobs-s-apply button")?(this.debugLog("found easy apply button"),!0):(this.debugLog("easy apply button not found"),!1)}catch(e){return console.error("easy apply button not found error",e),!1}}static async clickEasyApply(){try{let e=document.querySelector(".jobs-s-apply button");if(e)return e.click(),this.debugLog("Clicked on easy apply button"),!0;throw new Error("Easy apply button not found")}catch(e){throw this.errorLog("Error clicking on easy apply button",e),e}}},w=k;var v=class extends f{static async getJobId(){try{let e=new URLSearchParams(window.location.search).get("currentJobId");return e?(this.debugLog("Found job ID: ".concat(e)),e):(this.debugLog("Job ID not found in URL"),null)}catch(e){return this.errorLog("Error getting job ID",e),null}}static async getJobTitle(){try{let e=document.querySelector(".job-details-jobs-unified-top-card__job-title h1");if(e){let t=e.textContent.trim();return this.debugLog("Found job title: ".concat(t)),t}return this.debugLog("Job title not found"),null}catch(e){return this.errorLog("Error getting job title",e),null}}static async getCompanyName(){try{let e=document.querySelector(".job-details-jobs-unified-top-card__company-name a");if(e){let t=e.textContent.trim();return this.debugLog("Found company name: ".concat(t)),t}return this.debugLog("Company name not found"),null}catch(e){return this.errorLog("Error getting company name",e),null}}static async getLocation(){try{let e=document.querySelector(".job-details-jobs-unified-top-card__tertiary-description-container .tvm__text");if(e){let t=e.textContent.trim();return this.debugLog("Found location: ".concat(t)),t}return this.debugLog("Location not found"),null}catch(e){return this.errorLog("Error getting location",e),null}}static async getJobType(){try{let e=document.querySelectorAll("button.job-details-preferences-and-skills .job-details-preferences-and-skills__pill");if(e.length>1){let r=e[1].querySelectorAll("span");if(r.length>0){let o=r[0].querySelectorAll("span");if(o.length>0){let n=o[0].textContent.trim();if(n)return this.debugLog("Found jobType type: ".concat(n)),n}}}return this.debugLog("jobType type not found"),null}catch(e){return this.errorLog("Error getting jobType type",e),null}}static async getRemoteType(){try{let e=document.querySelectorAll("button.job-details-preferences-and-skills .job-details-preferences-and-skills__pill");if(e.length>0){let r=e[0].querySelectorAll("span");if(r.length>0){let o=r[0].querySelectorAll("span");if(o.length>0){let n=o[0].textContent.trim();if(n)return this.debugLog("Found remote type: ".concat(n)),n}}}return this.debugLog("Remote type not found"),null}catch(e){return this.errorLog("Error getting remote type",e),null}}static async getJobDescription(){try{let e=document.querySelector(".jobs-description__content");if(e){let t=e.textContent.trim();return this.debugLog("Found job description"),t}return this.debugLog("Job description not found"),null}catch(e){return this.errorLog("Error getting job description",e),null}}static async getApplicantCount(){try{let e=document.querySelectorAll(".job-details-jobs-unified-top-card__tertiary-description-container .tvm__text"),t=e.length>0?e[e.length-1]:null;if(t){let r=t.textContent.trim();return this.debugLog("Found applicant count: ".concat(r)),r}return this.debugLog("Applicant count not found"),null}catch(e){return this.errorLog("Error getting applicant count",e),null}}static async getPostedDate(){try{let e=document.querySelectorAll(".job-details-jobs-unified-top-card__tertiary-description-container .tvm__text")[2];if(e){let t=e.textContent.trim();return this.debugLog("Found posted date: ".concat(t)),t}return this.debugLog("posted date not found"),null}catch(e){return this.errorLog("Error getting applicant count",e),null}}static async getAllJobInfo(){try{let e={jobId:await this.getJobId(),title:await this.getJobTitle(),company:await this.getCompanyName(),location:await this.getLocation(),jobType:await this.getJobType(),remoteType:await this.getRemoteType(),description:await this.getJobDescription(),applicantCount:await this.getApplicantCount(),postedDate:await this.getPostedDate()};return this.debugLog("Retrieved all job information"),e}catch(e){return this.errorLog("Error getting all job information",e),null}}},x=v;var C=class{constructor(){this.currentSettings=null,this.defaultModel="qwen2.5:3b",this.settingsLoadPromise=null}async loadAISettings(e){try{console.log("AISettingsManager: Loading AI settings for user:",e);let t=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/users/".concat(e,"/ai-settings/default")});return t&&t.success?(this.currentSettings=t.ai_settings,console.log("AISettingsManager: Successfully loaded AI settings:",this.currentSettings),this.currentSettings):(console.warn("AISettingsManager: No AI settings found, using default"),this.getDefaultSettings())}catch(t){return console.error("AISettingsManager: Error loading AI settings:",t),this.getDefaultSettings()}}getDefaultSettings(){return{provider:"ollama",model:this.defaultModel,apiKey:null,baseUrl:"http://localhost:11434",is_default:!0}}getCurrentSettings(){return this.currentSettings||this.getDefaultSettings()}setSettings(e){this.currentSettings=e,console.log("AISettingsManager: Settings updated:",e)}getModel(){return this.getCurrentSettings().model||this.defaultModel}getProvider(){return this.getCurrentSettings().provider||"ollama"}async testConnection(){try{let e=this.getProvider();return e==="ollama"?await chrome.runtime.sendMessage({action:"testOllama"}):this.getCurrentSettings().apiKey?{success:!0,message:"".concat(e," settings validated")}:{success:!1,error:"API key required for ".concat(e)}}catch(e){return console.error("AISettingsManager: Error testing connection:",e),{success:!1,error:e.message}}}async callAI(e){try{let t=this.getProvider();if(t==="ollama"){let r=this.getModel(),o=S(L({},e),{model:r}),n=await chrome.runtime.sendMessage({action:"callOllama",endpoint:"generate",data:o});if(n.success===!1)throw new Error(n.error||"Unknown error from Ollama API");return n.data}else throw new Error("Provider ".concat(t," not yet implemented"))}catch(t){throw console.error("AISettingsManager: Error calling AI API:",t),t}}async callAIWithStop(e,t=null){try{let r=this.getProvider();if(r==="ollama"){let o=this.getModel(),n=S(L({},e),{model:o});return new Promise((i,u)=>{let d=null;t&&(d=setInterval(async()=>{try{let c=!1;typeof t=="function"?c=await t():t&&t.value!==void 0?c=t.value:c=!!t,c&&(console.log("Stop requested during AI API call"),d&&clearInterval(d),i({stopped:!0}))}catch(c){console.error("Error in stop check:",c)}},500)),chrome.runtime.sendMessage({action:"callOllama",endpoint:"generate",data:n},c=>{d&&clearInterval(d),chrome.runtime.lastError?u(new Error(chrome.runtime.lastError.message)):c.success===!1?u(new Error(c.error||"Unknown error from Ollama API")):i(c.data)})})}else throw new Error("Provider ".concat(r," not yet implemented"))}catch(r){throw console.error("AISettingsManager: Error calling AI API with stop:",r),r}}async loadAvailableModels(){try{let e=this.getProvider();if(e==="ollama"){let t=await chrome.runtime.sendMessage({action:"ollamaRequest",method:"GET",url:"/api/tags"});if(t&&t.success)return t.models.map(r=>r.name);throw new Error((t==null?void 0:t.error)||"Failed to load Ollama models")}else throw new Error("Provider ".concat(e," not yet implemented"))}catch(e){throw console.error("AISettingsManager: Error loading models:",e),e}}clear(){this.currentSettings=null,this.settingsLoadPromise=null}},N=C;var T=class{constructor(e=null){this.userId=e,this.user_data=null,this.formatted_text=null,this.aiSettingsManager=new N,this.settingsLoadPromise=null,e&&(this.settingsLoadPromise=this.aiSettingsManager.loadAISettings(e))}async setUserId(e){this.userId=e,e&&(this.settingsLoadPromise=this.aiSettingsManager.loadAISettings(e),await this.settingsLoadPromise)}async ensureSettingsLoaded(){this.settingsLoadPromise&&(await this.settingsLoadPromise,this.settingsLoadPromise=null)}setModel(e){if(e&&typeof e=="string"){let t=this.aiSettingsManager.getCurrentSettings(),r=S(L({},t),{model:e});this.aiSettingsManager.setSettings(r),console.log("AIQuestionAnswerer: Model overridden to: ".concat(e))}}async setUserContext(e,t=null){try{if(typeof e=="object"&&e!==null)this.user_data=e,this.formatted_text=t||this.formatUserDataAsText(),console.log("User context set with structured data");else if(typeof e=="string")this.user_data=null,this.formatted_text=e,console.log("User context set with formatted text only");else throw new Error("Invalid user data format");return console.log("User context set successfully"),{success:!0}}catch(r){return console.error("Error in setUserContext:",r),{success:!1,error:r.message}}}async answerQuestion(e,t=null,r=null){var o;try{await this.ensureSettingsLoaded(),console.log("Answering question:",e),console.log("Using AI model:",this.aiSettingsManager.getModel()),console.log("Options:",t);let n=this.getDirectAnswer(e);if(n){if(console.log("Found direct answer:",n),t&&Array.isArray(t)&&t.length>0){let c=this.matchToOption(n,t);return console.log("Matched direct answer to option:",c),{success:!0,answer:c}}return{success:!0,answer:n}}if(r){let c=!1;if(typeof r=="function"?c=await r():r&&r.value!==void 0?c=r.value:c=!!r,c)return console.log("Stop requested before AI processing"),{success:!1,stopped:!0}}let i=this.buildEnhancedPrompt(e,t),u=await this.aiSettingsManager.callAIWithStop({prompt:i,stream:!1},r);if(u&&u.stopped)return{success:!1,stopped:!0};let d=((o=u==null?void 0:u.response)==null?void 0:o.trim())||"";if(this.isYearsOfExperienceQuestion(e)&&/^\d+$/.test(d)){let c=parseInt(d);c<5&&(d="5",console.log("Enforced minimum 5 years for experience question, was: ".concat(c)))}return t&&Array.isArray(t)&&t.length>0&&(d=this.matchToOption(d,t)),console.log("Final answer:",d),{success:!0,answer:d||"Information not available"}}catch(n){return console.error("Error in answerQuestion:",n),{success:!0,answer:t&&Array.isArray(t)&&t.length>0?t.length>1?t[1]:t[0]:"Information not available"}}}getDirectAnswer(e){var o;if(!((o=this.user_data)!=null&&o.personal_information))return null;let t=this.user_data.personal_information,r=e.toLowerCase();return r.includes("email")||r.includes("e-mail")?t.email||null:r.includes("phone")||r.includes("mobile")||r.includes("telefon")?(t.phone_prefix?"".concat(t.phone_prefix).concat(t.phone):t.phone)||null:r.includes("first name")||r.includes("vorname")?t.name||null:r.includes("last name")||r.includes("surname")||r.includes("nachname")?t.surname||null:r.includes("country")&&!r.includes("code")?t.country||null:this.isNoticePeriodOrStartDateQuestion(e)?r.includes("notice period")||r.includes("k\xFCndigungsfrist")||r.includes("kuendigungsfrist")?r.includes("monate")||r.includes("deutsch")?"2 Monate":"2 months":this.calculateDateTwoMonthsFromNow():null}buildEnhancedPrompt(e,t){let r=this.formatUserDataAsText(),o='You are a job applicant filling out a job application form. Answer questions based on your resume information in first person (as "I" not "he/she").\n\nMY RESUME:\n'.concat(r,"\n\nQUESTION: ").concat(e,'\n\nIMPORTANT GENERAL RULES:\n- Answer as the job applicant (use "I", "my", "me" - NOT "he", "she", "Sami", or third person)\n- Be concise and direct\n- Only provide the specific information requested\n- Do not mention your name unless explicitly asked');if(this.isDecimalNumberQuestion(e)&&(o+='\n\nIMPORTANT RULES FOR DECIMAL NUMBERS:\n- If asked for a decimal number, provide ONLY a decimal number (e.g., "3.5", "2.0", "1.2")\n- Do NOT include explanations, descriptions, or additional text\n- The number should be greater than 0.0 as requested\n- Example: "3.0" not "3.0 years" or explanations'),this.isYearsOfExperienceQuestion(e)&&(o+='\n\nIMPORTANT RULES FOR YEARS OF EXPERIENCE:\n- If asked for years of experience, provide ONLY a number between 5-99\n- MINIMUM is always 5 years - never return 0, 1, 2, 3, or 4\n- Do NOT include words like "years", "Jahre", or descriptions\n- For skill levels: Beginner=5, Intermediate=7, Advanced=10+ years\n- Calculate based on work experience and skill level\n- If no specific experience found, default to 5 years minimum\n- If unclear or no data, always answer at least 5 years to maximize job prospects\n- Example: "5" not "5 years" or "5 Jahre"\n- Better to overestimate than underestimate for better interview chances'),this.isDegreeQuestion(e)&&(o+='\n\nIMPORTANT RULES FOR DEGREE QUESTIONS:\n- Check education section carefully for exact degree matches\n- "Bachelor" = "Bachelor of Engineering" or "Bachelor of Science"\n- "Master" = "Master of Engineering" or "Master of Science"\n- Answer "Ja" for German forms, "Yes" for English forms\n- If degree is found, answer positively\n- Look for exact degree names in education section'),this.isSkillLevelQuestion(e)&&(o+="\n\nIMPORTANT RULES FOR SKILL LEVEL QUESTIONS:\n- Check the skills section for exact skill matches\n- Look for the skill name and its level (Beginner/Intermediate/Advanced)\n- Be precise about the level mentioned in the resume\n- Do not guess or estimate levels"),this.isNoticePeriodOrStartDateQuestion(e)){let n=this.calculateDateTwoMonthsFromNow();o+='\n\nIMPORTANT RULES FOR NOTICE PERIOD AND START DATE:\n- For notice period questions, answer "2 months" or "2 Monate"\n- For starting date questions, provide the exact date: '.concat(n,'\n- Use the format DD.MM.YYYY for German forms (e.g., "15.03.2024")\n- Use the format MM/DD/YYYY for English forms (e.g., "03/15/2024")\n- Current calculated start date (2 months from today): ').concat(n,"\n- Be consistent with the date format expected by the form")}if(t&&Array.isArray(t)&&t.length>0){let n=t.map(i=>'"'.concat(i,'"')).join(", ");o+="\n\nAvailable Options: [".concat(n,"]\n\nIMPORTANT: You MUST choose EXACTLY ONE option from the list above. Your answer should match one of the options EXACTLY as written.")}return o+="\n\nANSWER:",o}isDecimalNumberQuestion(e){let t=e.toLowerCase();return t.includes("decimal")||t.includes("dezimal")||t.includes("gr\xF6\xDFer als 0.0")||t.includes("greater than 0.0")||t.includes("decimal zahl")||t.includes("decimal number")}isYearsOfExperienceQuestion(e){let t=e.toLowerCase();return t.includes("jahre")||t.includes("years")||t.includes("experience")||t.includes("erfahrung")||t.includes("how many")||t.includes("wie viele")}isDegreeQuestion(e){let t=e.toLowerCase();return t.includes("bachelor")||t.includes("master")||t.includes("degree")||t.includes("abschluss")||t.includes("bildung")||t.includes("education")}isSkillLevelQuestion(e){let t=e.toLowerCase();return t.includes("level")||t.includes("niveau")||t.includes("skill")||t.includes("f\xE4higkeit")||t.includes("experience with")||t.includes("erfahrung mit")}isNoticePeriodOrStartDateQuestion(e){let t=e.toLowerCase();return t.includes("notice period")||t.includes("starting date")||t.includes("start date")||t.includes("startdatum")||t.includes("beginn")||t.includes("beginnen")||t.includes("k\xFCndigungsfrist")||t.includes("kuendigungsfrist")||t.includes("verf\xFCgbar")||t.includes("verfuegbar")||t.includes("available")||t.includes("wann k\xF6nnen sie")||t.includes("when can you")||t.includes("earliest start")||t.includes("fr\xFChester beginn")||t.includes("fruehester beginn")}calculateDateTwoMonthsFromNow(){let e=new Date;e.setMonth(e.getMonth()+2);let t=String(e.getDate()).padStart(2,"0"),r=String(e.getMonth()+1).padStart(2,"0"),o=e.getFullYear();return"".concat(t,".").concat(r,".").concat(o)}formatUserDataAsText(){return this.formatted_text?this.formatted_text:this.user_data?typeof this.user_data=="string"?this.user_data:this.formatObject(this.user_data,0):"No user data available."}formatObject(e,t=0){let r="  ".repeat(t),o="";if(typeof e=="object"&&e!==null)if(Array.isArray(e))for(let n of e)typeof n=="object"&&n!==null?o+="".concat(r,"- ").concat(this.formatObject(n,t+1)):o+="".concat(r,"- ").concat(n,"\n");else for(let[n,i]of Object.entries(e)){let u=n.toUpperCase().replace(/_/g," ");o+="".concat(r).concat(u,":\n"),typeof i=="object"&&i!==null?o+=this.formatObject(i,t+1):o+="".concat(r,"  ").concat(i,"\n")}else o+="".concat(r).concat(e,"\n");return o}matchToOption(e,t){if(!e||!t||t.length===0)return(t==null?void 0:t.length)>0?t[0]:"Not available";if(this.isDecimalNumberQuestion(e)||/^\d+\.\d+$/.test(e.trim())){let r=e.match(/\d+\.\d+/);if(r){let o=r[0];for(let n of t)if(n.includes(o))return n;return o}}if(this.isYearsOfExperienceQuestion(e)||/^\d+$/.test(e.trim())){let r=e.match(/\d+/);if(r){let o=parseInt(r[0]);this.isYearsOfExperienceQuestion(e)&&o<5&&(o=5);let n=o.toString();for(let i of t)if(i.includes(n))return i;return n}}if(this.isNoticePeriodOrStartDateQuestion(e)){if(e.toLowerCase().includes("2 months")||e.toLowerCase().includes("2 monate")){for(let o of t)if(o.toLowerCase().includes("2 months")||o.toLowerCase().includes("2 monate")||o.toLowerCase().includes("2 month"))return o;return e}let r=e.match(/\d{1,2}[.\/-]\d{1,2}[.\/-]\d{4}/);if(r){let o=r[0];for(let n of t)if(n.includes(o))return n;return o}}for(let r of t)if(r.toLowerCase()===e.toLowerCase())return r;for(let r of t)if(r.toLowerCase().includes(e.toLowerCase())||e.toLowerCase().includes(r.toLowerCase()))return r;if(e.toLowerCase().includes("germany")||e.toLowerCase().includes("deutsch")){for(let r of t)if(r.toLowerCase().includes("deutsch")||r.toLowerCase().includes("germany")||r.includes("+49"))return r}return t.length>1?t[1]:t[0]}async testConnection(){try{return await this.ensureSettingsLoaded(),(await this.aiSettingsManager.testConnection()).success}catch(e){return console.error("Error testing AI connection:",e),!1}}getAISettings(){return this.aiSettingsManager.getCurrentSettings()}clear(){this.user_data=null,this.formatted_text=null,this.aiSettingsManager.clear(),this.settingsLoadPromise=null}},I=T;var q=class extends f{static async closeForm(e=!1){var t,r;try{let o=document.querySelector('button[aria-label="Dismiss"]');if(o||(o=document.querySelector('button[aria-label="Close"]')||document.querySelector('button[aria-label="Cancel"]')||document.querySelector("button[data-test-modal-close-btn]")),o){if(o.click(),await this.wait(),e){let n=document.querySelector('button[data-control-name="save_application_btn"]');n&&(n.click(),this.debugLog("Closed form and saved application"))}else{let n=document.querySelector('button[data-control-name="discard_application_confirm_btn"]')||document.querySelector("button[data-test-dialog-secondary-btn]");n&&(n.click(),this.debugLog("Closed form and discarded application"))}await this.wait()}}catch(o){this.errorLog("Error closing form",o);try{let n=document.querySelectorAll("button");for(let i of n)(i.textContent.toLowerCase().includes("close")||i.textContent.toLowerCase().includes("cancel")||(t=i.getAttribute("aria-label"))!=null&&t.toLowerCase().includes("close")||(r=i.getAttribute("aria-label"))!=null&&r.toLowerCase().includes("dismiss"))&&(i.click(),await this.wait(500))}catch(n){this.errorLog("Failed final attempt to close form",n)}}}static async clickNextPage(){try{await this.wait();let e=document.querySelector('button[aria-label="Continue to next step"]');e&&(e.click(),this.debugLog("Clicked on next page button"))}catch(e){this.errorLog("Error clicking on next page button",e)}}static async clickPreviousPage(){try{await this.wait();let e=document.querySelector('button[aria-label="Back to previous step"]');e&&(e.click(),this.debugLog("Clicked on previous page button"))}catch(e){this.errorLog("Error clicking on previous page button",e)}}static async clickReviewApplication(){try{await this.wait();let e=document.querySelector('button[aria-label="Review your application"]');e&&(e.click(),this.debugLog("Clicked on review button"))}catch(e){this.errorLog("Error clicking on review button",e)}}static async clickSubmitApplication(){try{await this.wait();let e=document.querySelector('button[aria-label="Submit application"]');e&&(e.click(),this.debugLog("Clicked on submit button"))}catch(e){this.errorLog("Error clicking on submit button",e)}}static async clickDoneAfterSubmit(){try{let e=document.querySelector('button[aria-label="Done"]');e||(e=document.querySelector("button.artdeco-button span.artdeco-button__text"),this.debugLog("Found done button",e)),e?(e.click(),this.debugLog("Clicked on Done button")):this.debugLog("Done button not found")}catch(e){this.errorLog("Error clicking on Done button",e)}}static async clickDismissAfterSubmit(){try{let e=document.querySelector('button[aria-label="Dismiss"]');if(e||(e=document.querySelector("button[data-test-modal-close-btn]")),!e){let t=document.querySelectorAll("button.artdeco-button--circle.artdeco-modal__dismiss");for(let r of t)if(r.querySelector('svg use[href="#close-medium"]')){e=r;break}}e?(e.click(),this.debugLog("Clicked on Dismiss button")):this.debugLog("Dismiss button not found")}catch(e){this.errorLog("Error clicking on Dismiss button",e)}}static async findReviewButton(){try{return document.querySelector('button[aria-label="Review your application"]')}catch(e){return this.errorLog("Error finding review button",e),null}}static async findNextButton(){try{return document.querySelector('button[aria-label="Continue to next step"]')}catch(e){return this.errorLog("Error finding next button",e),null}}static async findSubmitButton(){try{return document.querySelector('button[aria-label="Submit application"]')}catch(e){return this.errorLog("Error finding submit button",e),null}}static async findDoneButton(){try{let e=document.querySelector('button[aria-label="Done"]');if(!e){let t=document.querySelectorAll("button.artdeco-button");for(let r of t){let o=r.querySelector("span.artdeco-button__text");if(o&&o.textContent.trim()==="Done"){e=r;break}}}return e}catch(e){return this.errorLog("Error finding done button",e),null}}static async processForm(e){try{this.debugLog("Starting form processing");let t=setTimeout(async()=>{this.debugLog("Form processing timeout reached")},3*60*1e3),r=!1,o=!1;for(;!o;){if(typeof e=="function"?o=await e():e&&e.value!==void 0?o=e.value:o=!!e,o){this.debugLog("Stop requested during form processing");break}try{if(await this.findReviewButton()){this.debugLog("Found review button");let c=setTimeout(()=>{this.debugLog("Review processing timeout reached"),e.value=!0},1*60*1e3);if(document.querySelectorAll("div.fb-dash-form-element").length>0&&!r){this.debugLog("Found questions on current page, processing before review");let b=await this.processFormQuestions(e);if(b.stopped){this.debugLog("Form questions processing stopped by user");break}b.success||this.debugLog("Form questions processing failed"),r=!0,this.debugLog("Current page form questions processed, will not reprocess")}else r?this.debugLog("Skipping redundant form processing for current page"):this.debugLog("No form questions found on current page");if(await this.clickReviewApplication(),await this.wait(2e3),typeof e=="function"?o=await e():e&&e.value!==void 0?o=e.value:o=!!e,o){this.debugLog("Stop requested after clicking review");break}if(document.querySelectorAll("div.fb-dash-form-element").length>0){this.debugLog("Found questions on review page");let b=await this.processFormQuestions(e);if(b.stopped){this.debugLog("Review questions processing stopped by user");break}b.success||this.debugLog("Review questions processing failed")}else this.debugLog("No questions found on review page");await this.clickSubmitApplication(),await this.wait(2e3),await this.clickDismissAfterSubmit(),this.debugLog("Clicked submit button after review"),clearTimeout(c);break}if(document.querySelectorAll("div.fb-dash-form-element").length>0&&!r){this.debugLog("Found form questions, processing...");let c=await this.processFormQuestions(e);if(c.stopped){this.debugLog("Form questions processing stopped by user");break}c.success||this.debugLog("Form questions processing failed"),r=!0,this.debugLog("Form questions processed")}if(await this.findNextButton()){if(this.debugLog("Found next button, moving to next page"),await this.clickNextPage(),await this.wait(2e3),typeof e=="function"?o=await e():e&&e.value!==void 0?o=e.value:o=!!e,o){this.debugLog("Stop requested after navigation");break}r=!1;continue}if(await this.findSubmitButton()){if(this.debugLog("Found submit button, submitting application"),typeof e=="function"?o=await e():e&&e.value!==void 0?o=e.value:o=!!e,o){this.debugLog("Stop requested before final submit");break}await this.clickSubmitApplication(),await this.wait(2e3),await this.clickDismissAfterSubmit();break}this.debugLog("No navigation buttons found, waiting..."),await this.wait(1e3)}catch(n){this.errorLog("Error in form processing loop",n),await this.wait(2e3)}}return clearTimeout(t),this.debugLog("Form processing completed"),!0}catch(t){return this.errorLog("Error processing form",t),!1}}static async shouldSkipQuestion(e){let t=e.toLowerCase();if(this.shouldSkipQuestionDirect(t))return!0;try{return await this.shouldSkipQuestionWithTranslation(e)}catch(r){return this.debugLog('Translation check failed for "'.concat(e,'": ').concat(r.message)),!1}}static shouldSkipQuestionDirect(e){return!!(e.includes("email")||e.includes("e-mail")||["phone","mobile","cell","telephone","telefon","handynummer","mobilnummer","tel\xE9fono","m\xF3vil","celular","t\xE9l\xE9phone","portable","mobile","telefono","cellulare","mobile"].some(n=>e.includes(n))||["country code","area code","phone prefix","calling code","landsvorwahl","vorwahl","l\xE4ndercode","c\xF3digo de pa\xEDs","c\xF3digo de \xE1rea","prefijo","indicatif pays","indicatif","pr\xE9fixe","prefisso","codice paese"].some(n=>e.includes(n))||["contact information","contact details","kontaktinformation","kontaktdaten","informaci\xF3n de contacto","datos de contacto","coordonn\xE9es","informations de contact","informazioni di contatto","dati di contatto"].some(n=>e.includes(n)))}static async shouldSkipQuestionWithTranslation(e){try{let t=null;window.currentAiSettings&&window.currentAiSettings.model&&(t=window.currentAiSettings.model);let r=new I(null);t&&r.setModel(t);let o='Translate this text to English. Only return the English translation, nothing else:\n\n"'.concat(e,'"\n\nEnglish translation:'),n=await r.aiSettingsManager.callAI({prompt:o,stream:!1});if(!n||!n.response)return!1;let i=n.response.trim().toLowerCase();return this.debugLog('Translated "'.concat(e,'" to: "').concat(i,'"')),this.shouldSkipQuestionDirect(i)}catch(t){return this.debugLog("Translation failed: ".concat(t.message)),!1}}static async processFormQuestions(e=null){try{this.debugLog("Processing form questions");let t=document.querySelectorAll("div.fb-dash-form-element");this.debugLog("Found ".concat(t.length," form elements"));for(let r of t){if(e){let o=!1;if(typeof e=="function"?o=await e():e&&e.value!==void 0?o=e.value:o=!!e,o)return this.debugLog("Stop requested during form questions processing"),{stopped:!0}}try{let o=r.querySelector("legend span.fb-dash-form-element__label span")||r.querySelector("label");if(!o){this.debugLog("No label found for form element");continue}let n=o.textContent.trim();if(n=n.replace(/(.+?)\1/,"$1"),this.debugLog("Processing question: ".concat(n)),await this.shouldSkipQuestion(n)){this.debugLog("Skipping prefilled question: ".concat(n));continue}let i=r.querySelector("input, textarea, select");if(!i){this.debugLog("No input field found for question");continue}let u=[];switch(i.tagName.toLowerCase()){case"input":i.type==="radio"&&r.querySelectorAll('input[type="radio"]').forEach(p=>{let l=r.querySelector('label[for="'.concat(p.id,'"]'));l&&u.push(l.textContent.trim())});break;case"select":u=Array.from(i.options).map(c=>c.text.trim());break}u.length>0&&this.debugLog('Available options for "'.concat(n,'":'));let d=await this.answerQuestion(n,u,i,r,e);if(d.stopped)return this.debugLog("Form questions processing stopped by user"),{stopped:!0};d.success||this.debugLog("Failed to answer question: ".concat(n))}catch(o){this.errorLog("Error processing form element: ".concat(o.message),o)}}return this.debugLog("Completed processing form questions"),{success:!0}}catch(t){return this.errorLog("Error in processFormQuestions",t),{success:!1}}}static async answerQuestion(e,t=[],r,o,n=null){try{let i=null;window.currentAiSettings&&window.currentAiSettings.model&&(i=window.currentAiSettings.model,this.debugLog("Using AI model from current settings: ".concat(i)));let u=null;try{let l=await chrome.storage.local.get(["currentUser"]);l.currentUser&&l.currentUser.id&&(u=l.currentUser.id,this.debugLog("Using user ID: ".concat(u)))}catch(l){this.errorLog("Error getting current user:",l)}let d=new I(u);i&&d.setModel(i),this.debugLog("Answering question: ".concat(e)),this.debugLog("Available options:",t);try{let l=await chrome.storage.local.get(["userResumeData","userResumeText","userResumeType"]);l&&(l.userResumeData||l.userResumeText)?(this.debugLog("Found user resume data in storage"),l.userResumeData?(await d.setUserContext(l.userResumeData,l.userResumeText),this.debugLog("Set structured user context in AI instance")):(await d.setUserContext(l.userResumeText),this.debugLog("Set text user context in AI instance"))):this.debugLog("No user resume found in storage")}catch(l){this.errorLog("Error loading user resume from storage:",l)}let c=await d.answerQuestion(e,t,n);if(c.stopped)return this.debugLog("Question answering stopped by user"),{stopped:!0};if(!c.success||!c.answer)return this.debugLog("No answer generated for question"),{success:!1};let p=c.answer;switch(this.debugLog("AI Answer: ".concat(p)),r.tagName.toLowerCase()){case"input":switch(r.type){case"text":case"tel":case"email":r.value=p,r.dispatchEvent(new Event("input",{bubbles:!0}));break;case"radio":let l=o.querySelectorAll('input[type="radio"]');for(let b of l){let _=o.querySelector('label[for="'.concat(b.id,'"]'));if(_&&_.textContent.trim()===p){b.click(),this.debugLog("Selected radio option: ".concat(p));break}}break;case"checkbox":r.checked=!0,r.dispatchEvent(new Event("change",{bubbles:!0}));break}break;case"textarea":r.value=p,r.dispatchEvent(new Event("input",{bubbles:!0}));break;case"select":for(let l=0;l<r.options.length;l++)if(r.options[l].text.trim()===p){r.selectedIndex=l,r.dispatchEvent(new Event("change",{bubbles:!0})),this.debugLog("Selected option: ".concat(p));break}break}return await this.wait(500),{success:!0}}catch(i){return this.errorLog('Error answering question "'.concat(e,'"'),i),{success:!1}}}},P=q;function a(s,e=null){let t=new Date().toISOString().split("T")[1],r="[EasyJob Debug ".concat(t,"] ").concat(s);e?console.log(r,e):console.log(r)}function g(s,e="info"){a("Status Update: ".concat(e," - ").concat(s)),chrome.runtime.sendMessage({type:"STATUS_UPDATE",text:s,status:e})}async function h(s){if(!s)return a("Auto-apply process stopped by user (local check)"),g("Auto-apply process stopped","info"),chrome.runtime.sendMessage({type:"PROCESS_COMPLETE"}),!0;try{let e=await chrome.runtime.sendMessage({action:"getAutoApplyState"});if(e&&e.success&&!e.isRunning)return a("Auto-apply process stopped by user (background check)"),g("Auto-apply process stopped","info"),chrome.runtime.sendMessage({type:"PROCESS_COMPLETE"}),!0}catch(e){a("Failed to check background state, using local state",e)}return!1}chrome.runtime.onMessage.addListener((s,e,t)=>{if(s.action==="START_AUTO_APPLY")return startAutoApplyProcess().then(()=>{t({success:!0})}).catch(r=>{console.error("Error in auto-apply process:",r),t({success:!1,error:r.message})}),!0});var M=class extends f{static async processJobPage(e,t,r,o){this.debugLog("Processing page ".concat(e,"/").concat(t)),g("Processing page ".concat(e," of ").concat(t),"info");let n=await y.getListOfJobsOnPage(r);a("Found ".concat(n.length," jobs on page ").concat(e));for(let i of n){if(await h(o))return this.debugLog("Stop requested during job processing - breaking job loop"),!1;if(await $.processJob(i,o),await h(o))return this.debugLog("Stop requested after job processing - breaking job loop"),!1}if(e<t)if(a("Finished processing page ".concat(e,", navigating to next page...")),g("Moving to page ".concat(e+1," of ").concat(t,"..."),"info"),await y.goToNextPage())a("Successfully navigated to page ".concat(e+1));else return a("Failed to navigate to next page or reached last page"),await y.isOnLastPage()?(a("Confirmed: reached the last page"),g("Reached the last page of results","info")):(a("Navigation failed but not on last page - stopping process"),g("Failed to navigate to next page - stopping","error")),!1;else a("Finished processing last page (".concat(e,"/").concat(t,")"));return!0}},$=class extends f{static async processJob(e,t){try{let r=await w.getJobClickableElement(e);if(await w.clickOnJob(r),a("Clicked on job"),await w.scrollDownToLoadNextJob(e),a("Scrolled to job"),await h(t))return;let o=await w.isEasyButtonAvailable();if(a("Is Easy Apply button available:",o),!o){a("Job already applied. Skipping..."),g("Job already applied. Skipping...","info");return}let n=await x.getAllJobInfo();if(a("Job info:",n),await chrome.storage.local.set({currentJob:n}),await w.clickEasyApply(),a("Attempted to click Easy Apply"),await new Promise(u=>setTimeout(u,2e3)),await h(t)){this.debugLog("Stop requested before form processing");return}let i=async()=>await h(t);await P.processForm(i),a("Processed application form"),await chrome.storage.local.remove("currentJob"),a("Removed current job from storage")}catch(r){console.error("Error processing job:",r),a("Error processing job:",{error:r.message,stack:r.stack}),g("Error processing job. Continuing to next one...","error")}}},j=M;var m=!1;async function R(){try{if(a("Starting auto-apply process"),a("Current URL:",window.location.href),await h(m))return;let s=document.querySelector(".scaffold-layout.jobs-search-two-pane__layout");if(a("Search element found:",!!s),!s){a("Available elements on page:",{body:document.body.innerHTML.substring(0,500)+"...",possibleSelectors:{scaffold:document.querySelector(".scaffold-layout"),jobsSearch:document.querySelector(".jobs-search-two-pane__layout"),anyJobsRelated:document.querySelectorAll('[class*="jobs-"]')}}),g("Could not find jobs list. Please make sure you are on LinkedIn jobs page.","error");return}a("Getting total jobs count");let e=await y.getTotalJobsSearchCount(s);a("Total jobs found:",e),g("Found ".concat(e," jobs to process"),"info"),a("Getting available pages");let t=await y.getAvailablePages(s,e);a("Total pages found:",t);for(let r=1;r<=t;r++){if(await h(m))return;if(await j.processJobPage(r,t,s,m)===!1){a("Page processing failed or reached end, stopping at page ".concat(r));break}}await h(m)||(a("Auto-apply process completed"),g("Auto-apply process completed!","success"),chrome.runtime.sendMessage({type:"PROCESS_COMPLETE"}))}catch(s){console.error("Error in auto-apply process:",s),a("Fatal error in auto-apply process:",{error:s.message,stack:s.stack}),g("Error in auto-apply process","error")}}chrome.runtime.onMessage.addListener((s,e,t)=>(a("Received message in content script:",s),s.action==="startAutoApply"?m?t({success:!1,message:"Auto apply already running"}):(m=!0,a("Starting auto-apply process with user data:",s.userData),a("AI settings:",s.aiSettings),window.currentUserData=s.userData,window.currentAiSettings=s.aiSettings,R(),t({success:!0,message:"Auto apply started"})):s.action==="stopAutoApply"?(a("Stopping auto-apply process"),m=!1,t({success:!0,message:"Auto apply stopped"})):s.action==="GET_STATE"?(a("Getting current state"),t({isRunning:m})):s.action==="START_AUTO_APPLY"?m?t({success:!1,message:"Auto apply already running"}):(m=!0,a("Starting auto-apply process (legacy format)"),R(),t({success:!0,message:"Auto apply started"})):s.action==="STOP_AUTO_APPLY"?(a("Stopping auto-apply process (legacy format)"),m=!1,t({success:!0,message:"Auto apply stopped"})):t({success:!1,message:"Unknown action"}),!0));
