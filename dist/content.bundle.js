var Q=Object.defineProperty,G=Object.defineProperties;var Y=Object.getOwnPropertyDescriptors;var U=Object.getOwnPropertySymbols;var K=Object.prototype.hasOwnProperty,W=Object.prototype.propertyIsEnumerable;var j=(c,e,t)=>e in c?Q(c,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):c[e]=t,A=(c,e)=>{for(var t in e||(e={}))K.call(e,t)&&j(c,t,e[t]);if(U)for(var t of U(e))W.call(e,t)&&j(c,t,e[t]);return c},k=(c,e)=>G(c,Y(e));var v=class{static async wait(e=1e3){await new Promise(t=>setTimeout(t,e))}static debugLog(e){console.log("[".concat(this.constructor.name,"] ").concat(e))}static errorLog(e,t){console.error("[".concat(this.constructor.name,"] ").concat(e,":"),t)}},f=v;var T=class extends f{static async getTotalJobsSearchCount(e){try{await this.wait();let t=e.querySelector(".jobs-search-results-list__subtitle");if(t){let o=t.textContent.trim(),r=parseInt(o.split(" ")[0].replace(/,/g,"").replace(/\./g,"").replace(/\+/g,""));return this.debugLog("Total jobs found: ".concat(r)),r}else return this.debugLog("No results found"),0}catch(t){return this.errorLog("Error fetching total jobs count",t),0}}static async getAvailablePages(e,t){try{await this.wait();let o=e.querySelector('ul[class*="jobs-search-pagination__pages"]');if(!o)return this.debugLog("Pagination list not found."),0;let r=o.querySelectorAll("li");if(r.length===0)return this.debugLog("No pagination items found."),0;let n=r[r.length-1];this.debugLog("Last page: ".concat(n));let s=Math.ceil(t/25);return this.debugLog("Total pages available: ".concat(s)),s}catch(o){return this.errorLog("Error fetching available pages",o),0}}static async getListOfJobsOnPage(e){try{await this.wait();let t=e.querySelector(".scaffold-layout__list");if(!t)return this.debugLog("Jobs container not found."),[];let o=t.querySelectorAll("li[class*='scaffold-layout__list-item']");return this.debugLog("Found ".concat(o.length," jobs on this page.")),Array.from(o)}catch(t){return this.errorLog("Error fetching list of jobs",t),[]}}static async goToNextPage(){try{await this.wait();let e=document.querySelector('button[aria-label="View next page"]')||document.querySelector("button.jobs-search-pagination__button--next")||document.querySelector('button[aria-label="Next"]');return e&&!e.disabled?(this.debugLog("Found next page button, clicking..."),e.click(),this.debugLog("Clicked next page button"),await this.wait(3e3),!0?(this.debugLog("Successfully navigated to next page"),!0):(this.debugLog("Jobs failed to load on next page"),!1)):(this.debugLog("Next page button not found or disabled - likely on last page"),!1)}catch(e){return this.errorLog("Error navigating to next page",e),!1}}static async isOnLastPage(){try{let e=document.querySelector('button[aria-label="View next page"]')||document.querySelector("button.jobs-search-pagination__button--next");return!e||e.disabled}catch(e){return this.errorLog("Error checking if on last page",e),!0}}},E=T;var C=class extends f{static async getJobClickableElement(e){try{await this.wait();let t=e.querySelector("a");return t||(this.debugLog("Could not find clickable element for job"),null)}catch(t){return this.errorLog("Error fetching clickable element",t),null}}static async scrollDownToLoadNextJob(e){try{await this.wait(),e.scrollIntoView({behavior:"smooth",block:"center"}),this.debugLog("Scrolled down to load next job")}catch(t){this.errorLog("Error scrolling down to load next job",t)}}static async clickOnJob(e){try{e.click(),this.debugLog("Clicked on job element")}catch(t){this.debugLog("Could not click on job element",t)}}static async isEasyButtonAvailable(){try{return document.querySelector(".jobs-s-apply button")?(this.debugLog("found easy apply button"),!0):(this.debugLog("easy apply button not found"),!1)}catch(e){return console.error("easy apply button not found error",e),!1}}static async clickEasyApply(){try{let e=document.querySelector(".jobs-s-apply button");if(e)return e.click(),this.debugLog("Clicked on easy apply button"),!0;throw new Error("Easy apply button not found")}catch(e){throw this.errorLog("Error clicking on easy apply button",e),e}}},S=C;var x=class extends f{static async getJobId(){try{let e=new URLSearchParams(window.location.search).get("currentJobId");return e?(this.debugLog("Found job ID: ".concat(e)),e):(this.debugLog("Job ID not found in URL"),null)}catch(e){return this.errorLog("Error getting job ID",e),null}}static async getJobTitle(){try{let e=document.querySelector(".job-details-jobs-unified-top-card__job-title h1");if(e){let t=e.textContent.trim();return this.debugLog("Found job title: ".concat(t)),t}return this.debugLog("Job title not found"),null}catch(e){return this.errorLog("Error getting job title",e),null}}static async getCompanyName(){try{let e=document.querySelector(".job-details-jobs-unified-top-card__company-name a");if(e){let t=e.textContent.trim();return this.debugLog("Found company name: ".concat(t)),t}return this.debugLog("Company name not found"),null}catch(e){return this.errorLog("Error getting company name",e),null}}static async getLocation(){try{let e=document.querySelector(".job-details-jobs-unified-top-card__tertiary-description-container .tvm__text");if(e){let t=e.textContent.trim();return this.debugLog("Found location: ".concat(t)),t}return this.debugLog("Location not found"),null}catch(e){return this.errorLog("Error getting location",e),null}}static async getJobType(){try{let e=document.querySelectorAll("button.job-details-preferences-and-skills .job-details-preferences-and-skills__pill");if(e.length>1){let o=e[1].querySelectorAll("span");if(o.length>0){let r=o[0].querySelectorAll("span");if(r.length>0){let n=r[0].textContent.trim();if(n)return this.debugLog("Found jobType type: ".concat(n)),n}}}return this.debugLog("jobType type not found"),null}catch(e){return this.errorLog("Error getting jobType type",e),null}}static async getRemoteType(){try{let e=document.querySelectorAll("button.job-details-preferences-and-skills .job-details-preferences-and-skills__pill");if(e.length>0){let o=e[0].querySelectorAll("span");if(o.length>0){let r=o[0].querySelectorAll("span");if(r.length>0){let n=r[0].textContent.trim();if(n)return this.debugLog("Found remote type: ".concat(n)),n}}}return this.debugLog("Remote type not found"),null}catch(e){return this.errorLog("Error getting remote type",e),null}}static async getJobDescription(){try{let e=document.querySelector(".jobs-description__content");if(e){let t=e.textContent.trim();return this.debugLog("Found job description"),t}return this.debugLog("Job description not found"),null}catch(e){return this.errorLog("Error getting job description",e),null}}static async getApplicantCount(){try{let e=document.querySelectorAll(".job-details-jobs-unified-top-card__tertiary-description-container .tvm__text"),t=e.length>0?e[e.length-1]:null;if(t){let o=t.textContent.trim();return this.debugLog("Found applicant count: ".concat(o)),o}return this.debugLog("Applicant count not found"),null}catch(e){return this.errorLog("Error getting applicant count",e),null}}static async getPostedDate(){try{let e=document.querySelectorAll(".job-details-jobs-unified-top-card__tertiary-description-container .tvm__text")[2];if(e){let t=e.textContent.trim();return this.debugLog("Found posted date: ".concat(t)),t}return this.debugLog("posted date not found"),null}catch(e){return this.errorLog("Error getting applicant count",e),null}}static async getAllJobInfo(){try{let e={jobId:await this.getJobId(),title:await this.getJobTitle(),company:await this.getCompanyName(),location:await this.getLocation(),jobType:await this.getJobType(),remoteType:await this.getRemoteType(),description:await this.getJobDescription(),applicantCount:await this.getApplicantCount(),postedDate:await this.getPostedDate()};return this.debugLog("Retrieved all job information"),e}catch(e){return this.errorLog("Error getting all job information",e),null}}},P=x;var _=class{constructor(){this.currentSettings=null,this.defaultModel="qwen2.5:3b",this.settingsLoadPromise=null}async loadAISettings(e){try{if(console.log("AISettingsManager: Loading AI settings for user:",e),console.log("AISettingsManager: User ID type:",typeof e),console.log("AISettingsManager: User ID length:",e?e.length:"null"),!e||typeof e!="string"||e.length!==36)return console.error("AISettingsManager: Invalid user ID provided:",e),console.log("AISettingsManager: Returning default settings (ollama)"),this.getDefaultSettings();console.log("AISettingsManager: Making API request to load settings...");let t=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/users/".concat(e,"/ai-settings/default")});return console.log("AISettingsManager: API response received:",t),t&&t.success?(this.currentSettings=t.ai_settings,console.log("AISettingsManager: Successfully loaded AI settings:",this.currentSettings),console.log("AISettingsManager: Provider:",this.currentSettings.ai_provider),console.log("AISettingsManager: Model:",this.currentSettings.ai_model),this.currentSettings):(console.warn("AISettingsManager: No AI settings found, using default"),console.log("AISettingsManager: Response was:",t),this.getDefaultSettings())}catch(t){return console.error("AISettingsManager: Error loading AI settings:",t),this.getDefaultSettings()}}getDefaultSettings(){return{provider:"ollama",model:this.defaultModel,apiKey:null,baseUrl:"http://localhost:11434",is_default:!0}}getCurrentSettings(){return this.currentSettings||this.getDefaultSettings()}setSettings(e){this.currentSettings=e,console.log("AISettingsManager: Settings updated:",e)}getModel(){let e=this.getCurrentSettings();return e.ai_model||e.model||this.defaultModel}getProvider(){let e=this.getCurrentSettings();return e.ai_provider||e.provider||"ollama"}async getDecryptedApiKey(){let e=this.getCurrentSettings();if(e.apiKey&&e.apiKey!=="encrypted")return e.apiKey;if(e.api_key_encrypted&&e.id)try{let t=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/ai-settings/".concat(e.id,"/encrypted-key")});if(t&&t.success&&t.api_key_encrypted){let o=await chrome.runtime.sendMessage({action:"apiRequest",method:"POST",url:"/ai-settings/decrypt-api-key",data:{encryptedApiKey:t.api_key_encrypted}});if(o&&o.success)return e.apiKey=o.decryptedApiKey,o.decryptedApiKey}}catch(t){throw console.error("AISettingsManager: Error fetching/decrypting API key:",t),new Error("Failed to retrieve API key")}return null}async testConnection(){try{let e=this.getProvider();return e==="ollama"?await chrome.runtime.sendMessage({action:"testOllama"}):e==="openai"?await chrome.runtime.sendMessage({action:"testOpenAI"}):this.getCurrentSettings().apiKey?{success:!0,message:"".concat(e," settings validated")}:{success:!1,error:"API key required for ".concat(e)}}catch(e){return console.error("AISettingsManager: Error testing connection:",e),{success:!1,error:e.message}}}async callAI(e){var t,o,r;try{let n=this.getProvider(),s=this.getModel();console.log("=== AI API CALL DEBUG ==="),console.log("Provider:",n),console.log("Model:",s),console.log("Request Data:",{prompt:e.prompt,messages:e.messages,max_tokens:e.max_tokens,temperature:e.temperature,stream:e.stream});let i=0;if(e.prompt?(i=this.estimateTokens(e.prompt),console.log("Input tokens (prompt):",i)):e.messages&&(i=this.estimateTokensFromMessages(e.messages),console.log("Input tokens (messages):",i)),n==="ollama"){let d=k(A({},e),{model:s});console.log("Sending Ollama request:",d);let l=await chrome.runtime.sendMessage({action:"callOllama",endpoint:"generate",data:d});if(l.success===!1)throw new Error(l.error||"Unknown error from Ollama API");let p=this.estimateTokens(l.data.response||"");return console.log("Output tokens:",p),console.log("Total tokens:",i+p),console.log("=== END AI API CALL DEBUG ==="),l.data}else if(n==="openai"){let d=await this.getDecryptedApiKey();if(!d)throw new Error("OpenAI API key is required");let l=k(A({},e),{model:s,apiKey:d});console.log("Sending OpenAI request:",k(A({},l),{apiKey:"[REDACTED]"}));let p=await chrome.runtime.sendMessage({action:"callOpenAI",data:l});if(p.success===!1)throw new Error(p.error||"Unknown error from OpenAI API");let b=((t=p.data.usage)==null?void 0:t.completion_tokens)||0,m=((o=p.data.usage)==null?void 0:o.total_tokens)||0;return console.log("OpenAI Token Usage:",{prompt_tokens:((r=p.data.usage)==null?void 0:r.prompt_tokens)||0,completion_tokens:b,total_tokens:m}),console.log("=== END AI API CALL DEBUG ==="),p.data}else throw new Error("Provider ".concat(n," not yet implemented"))}catch(n){throw console.error("AISettingsManager: Error calling AI API:",n),n}}async callAIWithStop(e,t=null){try{let o=this.getProvider();if(o==="ollama"){let r=this.getModel(),n=k(A({},e),{model:r});return new Promise((s,i)=>{let d=null;t&&(d=setInterval(async()=>{try{let l=!1;typeof t=="function"?l=await t():t&&t.value!==void 0?l=t.value:l=!!t,l&&(console.log("Stop requested during AI API call"),d&&clearInterval(d),s({stopped:!0}))}catch(l){console.error("Error in stop check:",l)}},500)),chrome.runtime.sendMessage({action:"callOllama",endpoint:"generate",data:n},l=>{d&&clearInterval(d),chrome.runtime.lastError?i(new Error(chrome.runtime.lastError.message)):l.success===!1?i(new Error(l.error||"Unknown error from Ollama API")):s(l.data)})})}else if(o==="openai"){let r=this.getModel(),n=await this.getDecryptedApiKey();if(!n)throw new Error("OpenAI API key is required");return new Promise((s,i)=>{let d=null;t&&(d=setInterval(async()=>{try{let l=!1;typeof t=="function"?l=await t():t&&t.value!==void 0?l=t.value:l=!!t,l&&(console.log("Stop requested during OpenAI API call"),d&&clearInterval(d),s({stopped:!0}))}catch(l){console.error("Error in stop check:",l)}},500)),chrome.runtime.sendMessage({action:"callOpenAI",data:k(A({},e),{model:r,apiKey:n})},l=>{d&&clearInterval(d),chrome.runtime.lastError?i(new Error(chrome.runtime.lastError.message)):l.success===!1?i(new Error(l.error||"Unknown error from OpenAI API")):s(l.data)})})}else throw new Error("Provider ".concat(o," not yet implemented"))}catch(o){throw console.error("AISettingsManager: Error calling AI API with stop:",o),o}}async loadAvailableModels(){try{let e=this.getProvider();if(e==="ollama"){let t=await chrome.runtime.sendMessage({action:"ollamaRequest",method:"GET",url:"/api/tags"});if(t&&t.success)return t.models.map(o=>o.name);throw new Error((t==null?void 0:t.error)||"Failed to load Ollama models")}else throw new Error("Provider ".concat(e," not yet implemented"))}catch(e){throw console.error("AISettingsManager: Error loading models:",e),e}}estimateTokens(e){if(!e)return 0;let t=e.length;return Math.ceil(t/4)}estimateTokensFromMessages(e){if(!e||!Array.isArray(e))return 0;let t=0;for(let o of e)o.content&&(t+=this.estimateTokens(o.content)),t+=4;return t}getTokenAnalysis(e){let t={inputTokens:0,estimatedOutputTokens:0,maxTokens:e.max_tokens||1e3,provider:this.getProvider(),model:this.getModel()};return e.prompt?t.inputTokens=this.estimateTokens(e.prompt):e.messages&&(t.inputTokens=this.estimateTokensFromMessages(e.messages)),t.estimatedOutputTokens=Math.min(t.maxTokens,100),t}clear(){this.currentSettings=null,this.settingsLoadPromise=null}},F=_;var q=class{constructor(e=null){this.userId=e,this.user_data=null,this.formatted_text=null,this.aiSettingsManager=new F,this.settingsLoadPromise=null,e&&(this.settingsLoadPromise=this.aiSettingsManager.loadAISettings(e))}async setUserId(e){this.userId=e,e&&(this.settingsLoadPromise=this.aiSettingsManager.loadAISettings(e),await this.settingsLoadPromise)}async ensureSettingsLoaded(){this.settingsLoadPromise&&(await this.settingsLoadPromise,this.settingsLoadPromise=null)}setModel(e){if(e&&typeof e=="string"){let t=this.aiSettingsManager.getCurrentSettings(),o=k(A({},t),{model:e});this.aiSettingsManager.setSettings(o),console.log("AIQuestionAnswerer: Model overridden to: ".concat(e))}}async setUserContext(e,t=null){try{if(typeof e=="object"&&e!==null)this.user_data=e,this.formatted_text=t||this.formatUserDataAsText(),console.log("User context set with structured data");else if(typeof e=="string")this.user_data=null,this.formatted_text=e,console.log("User context set with formatted text only");else throw new Error("Invalid user data format");return console.log("User context set successfully"),{success:!0}}catch(o){return console.error("Error in setUserContext:",o),{success:!1,error:o.message}}}async answerQuestion(e,t=null,o=null,r=null){var n,s,i;try{await this.ensureSettingsLoaded(),console.log("=== AI QUESTION ANSWERING DEBUG ==="),console.log("Question:",e),console.log("Using AI model:",this.aiSettingsManager.getModel()),console.log("Options:",t),console.log("Resume ID:",r);let d=null;if(r)try{let u=this.detectQuestionType(e);console.log("Detected question type:",u);let L=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/resumes/".concat(r,"/relevant-data?questionType=").concat(u)});L&&L.success?(d=L.relevantData,console.log("Retrieved relevant data from database:",d)):console.log("No structured data found, falling back to user context")}catch(u){console.error("Error retrieving structured data:",u)}let l=this.getDirectAnswer(e,d);if(l){if(console.log("Found direct answer:",l),t&&Array.isArray(t)&&t.length>0){let u=this.matchToOption(l,t);return console.log("Matched direct answer to option:",u),console.log("=== END AI QUESTION ANSWERING DEBUG ==="),{success:!0,answer:u}}return console.log("=== END AI QUESTION ANSWERING DEBUG ==="),{success:!0,answer:l}}if(o){let u=!1;if(typeof o=="function"?u=await o():o&&o.value!==void 0?u=o.value:u=!!o,u)return console.log("Stop requested before AI processing"),console.log("=== END AI QUESTION ANSWERING DEBUG ==="),{success:!1,stopped:!0}}let p=this.buildEnhancedPrompt(e,t);console.log("=== FULL PROMPT BEING SENT ==="),console.log(p),console.log("=== END FULL PROMPT ===");let b=this.aiSettingsManager.getTokenAnalysis({prompt:p});console.log("Token Analysis:",b);let m=await this.aiSettingsManager.callAIWithStop({prompt:p,stream:!1},o);if(m&&m.stopped)return console.log("=== END AI QUESTION ANSWERING DEBUG ==="),{success:!1,stopped:!0};let a="";if(m!=null&&m.response?a=m.response.trim():(i=(s=(n=m==null?void 0:m.choices)==null?void 0:n[0])==null?void 0:s.message)!=null&&i.content?a=m.choices[0].message.content.trim():(console.warn("Unexpected AI response format:",m),a=""),console.log("Raw AI response:",a),this.isYearsOfExperienceQuestion(e)&&/^\d+$/.test(a)){let u=parseInt(a);u<5&&(a="5",console.log("Enforced minimum 5 years for experience question, was: ".concat(u)))}return t&&Array.isArray(t)&&t.length>0&&(a=this.matchToOption(a,t)),console.log("Final answer:",a),console.log("=== END AI QUESTION ANSWERING DEBUG ==="),{success:!0,answer:a||"Information not available"}}catch(d){return console.error("Error in answerQuestion:",d),console.log("=== END AI QUESTION ANSWERING DEBUG ==="),{success:!0,answer:t&&Array.isArray(t)&&t.length>0?t.length>1?t[1]:t[0]:"Information not available"}}}detectQuestionType(e){let t=e.toLowerCase();return t.includes("level of")||t.includes("proficiency in")||t.includes("fluent in")?"language_level":t.includes("skill")||t.includes("experience")||t.includes("years")||t.includes("technology")||t.includes("programming")||t.includes("language")||t.includes("c++")||t.includes("python")||t.includes("java")?"skills":t.includes("education")||t.includes("degree")||t.includes("study")||t.includes("university")||t.includes("college")?"education":t.includes("language")||t.includes("speak")||t.includes("fluent")?"languages":t.includes("certification")||t.includes("certified")?"certifications":t.includes("name")||t.includes("email")||t.includes("phone")||t.includes("contact")||t.includes("location")?"personal":t.includes("visa")||t.includes("sponsorship")||t.includes("work permit")?"visa":t.includes("salary")||t.includes("compensation")||t.includes("pay")||t.includes("expectation")?"salary":t.includes("notice")||t.includes("period")||t.includes("availability")||t.includes("start date")?"notice":"general"}getDirectAnswer(e,t=null){var n;if(t){let s=e.toLowerCase();if(t.languages&&(s.includes("level of")||s.includes("proficiency"))){for(let i of["german","english","french","arabic","spanish"])if(s.includes(i)){let d=t.languages.find(l=>{var p;return((p=l.language)==null?void 0:p.toLowerCase())===i});if(d)return d.proficiency||"Unknown"}}if(t.personal_info){if(s.includes("email")||s.includes("e-mail"))return t.personal_info.email||null;if(s.includes("phone")||s.includes("telephone")||s.includes("mobile"))return t.personal_info.phone||null;if(s.includes("name"))return t.personal_info.name||null;if(s.includes("location")||s.includes("address"))return t.personal_info.location||null;if(s.includes("citizenship"))return t.personal_info.citizenship||null;if(s.includes("visa")||s.includes("sponsorship"))return t.personal_info.visa_required||null;if(s.includes("salary")||s.includes("compensation")||s.includes("pay"))return t.personal_info.salary||null}}if(!((n=this.user_data)!=null&&n.personal_information))return null;let o=this.user_data.personal_information,r=e.toLowerCase();return r.includes("email")||r.includes("e-mail")?o.email||null:r.includes("phone")||r.includes("mobile")||r.includes("telefon")?(o.phone_prefix?"".concat(o.phone_prefix).concat(o.phone):o.phone)||null:r.includes("first name")||r.includes("vorname")?o.name||null:r.includes("last name")||r.includes("surname")||r.includes("nachname")?o.surname||null:r.includes("country")&&!r.includes("code")?o.country||null:this.isNoticePeriodOrStartDateQuestion(e)?r.includes("notice period")||r.includes("k\xFCndigungsfrist")||r.includes("kuendigungsfrist")?r.includes("monate")||r.includes("deutsch")?"2 Monate":"2 months":this.calculateDateTwoMonthsFromNow():null}buildEnhancedPrompt(e,t){let o=this.formatUserDataAsText(),r='You are a job applicant filling out a job application form. Answer questions based on your resume information in first person (as "I" not "he/she").\n\nMY RESUME:\n'.concat(o,"\n\nQUESTION: ").concat(e,'\n\nIMPORTANT GENERAL RULES:\n- Answer as the job applicant (use "I", "my", "me" - NOT "he", "she", "Sami", or third person)\n- Be concise and direct\n- Only provide the specific information requested\n- Do not mention your name unless explicitly asked');if(this.isDecimalNumberQuestion(e)&&(r+='\n\nIMPORTANT RULES FOR DECIMAL NUMBERS:\n- If asked for a decimal number, provide ONLY a decimal number (e.g., "3.5", "2.0", "1.2")\n- Do NOT include explanations, descriptions, or additional text\n- The number should be greater than 0.0 as requested\n- Example: "3.0" not "3.0 years" or explanations'),this.isYearsOfExperienceQuestion(e)&&(r+='\n\nIMPORTANT RULES FOR YEARS OF EXPERIENCE:\n- If asked for years of experience, provide ONLY a number between 5-99\n- MINIMUM is always 5 years - never return 0, 1, 2, 3, or 4\n- Do NOT include words like "years", "Jahre", or descriptions\n- For skill levels: Beginner=5, Intermediate=7, Advanced=10+ years\n- Calculate based on work experience and skill level\n- If no specific experience found, default to 5 years minimum\n- If unclear or no data, always answer at least 5 years to maximize job prospects\n- Example: "5" not "5 years" or "5 Jahre"\n- Better to overestimate than underestimate for better interview chances'),this.isDegreeQuestion(e)&&(r+='\n\nIMPORTANT RULES FOR DEGREE QUESTIONS:\n- Check education section carefully for exact degree matches\n- "Bachelor" = "Bachelor of Engineering" or "Bachelor of Science"\n- "Master" = "Master of Engineering" or "Master of Science"\n- Answer "Ja" for German forms, "Yes" for English forms\n- If degree is found, answer positively\n- Look for exact degree names in education section'),this.isSkillLevelQuestion(e)&&(r+="\n\nIMPORTANT RULES FOR SKILL LEVEL QUESTIONS:\n- Check the skills section for exact skill matches\n- Look for the skill name and its level (Beginner/Intermediate/Advanced)\n- Be precise about the level mentioned in the resume\n- Do not guess or estimate levels"),this.isNoticePeriodOrStartDateQuestion(e)){let n=this.calculateDateTwoMonthsFromNow();r+='\n\nIMPORTANT RULES FOR NOTICE PERIOD AND START DATE:\n- For notice period questions, answer "2 months" or "2 Monate"\n- For starting date questions, provide the exact date: '.concat(n,'\n- Use the format DD.MM.YYYY for German forms (e.g., "15.03.2024")\n- Use the format MM/DD/YYYY for English forms (e.g., "03/15/2024")\n- Current calculated start date (2 months from today): ').concat(n,"\n- Be consistent with the date format expected by the form")}if(t&&Array.isArray(t)&&t.length>0){let n=t.map(s=>'"'.concat(s,'"')).join(", ");r+="\n\nAvailable Options: [".concat(n,"]\n\nIMPORTANT: You MUST choose EXACTLY ONE option from the list above. Your answer should match one of the options EXACTLY as written.")}return r+="\n\nANSWER:",r}isDecimalNumberQuestion(e){let t=e.toLowerCase();return t.includes("decimal")||t.includes("dezimal")||t.includes("gr\xF6\xDFer als 0.0")||t.includes("greater than 0.0")||t.includes("decimal zahl")||t.includes("decimal number")}isYearsOfExperienceQuestion(e){let t=e.toLowerCase();return t.includes("jahre")||t.includes("years")||t.includes("experience")||t.includes("erfahrung")||t.includes("how many")||t.includes("wie viele")}isDegreeQuestion(e){let t=e.toLowerCase();return t.includes("bachelor")||t.includes("master")||t.includes("degree")||t.includes("abschluss")||t.includes("bildung")||t.includes("education")}isSkillLevelQuestion(e){let t=e.toLowerCase();return t.includes("level")||t.includes("niveau")||t.includes("skill")||t.includes("f\xE4higkeit")||t.includes("experience with")||t.includes("erfahrung mit")}isNoticePeriodOrStartDateQuestion(e){let t=e.toLowerCase();return t.includes("notice period")||t.includes("starting date")||t.includes("start date")||t.includes("startdatum")||t.includes("beginn")||t.includes("beginnen")||t.includes("k\xFCndigungsfrist")||t.includes("kuendigungsfrist")||t.includes("verf\xFCgbar")||t.includes("verfuegbar")||t.includes("available")||t.includes("wann k\xF6nnen sie")||t.includes("when can you")||t.includes("earliest start")||t.includes("fr\xFChester beginn")||t.includes("fruehester beginn")}calculateDateTwoMonthsFromNow(){let e=new Date;e.setMonth(e.getMonth()+2);let t=String(e.getDate()).padStart(2,"0"),o=String(e.getMonth()+1).padStart(2,"0"),r=e.getFullYear();return"".concat(t,".").concat(o,".").concat(r)}formatUserDataAsText(){return this.formatted_text?this.formatted_text:this.user_data?typeof this.user_data=="string"?this.user_data:this.formatObject(this.user_data,0):"No user data available."}formatObject(e,t=0){let o="  ".repeat(t),r="";if(typeof e=="object"&&e!==null)if(Array.isArray(e))for(let n of e)typeof n=="object"&&n!==null?r+="".concat(o,"- ").concat(this.formatObject(n,t+1)):r+="".concat(o,"- ").concat(n,"\n");else for(let[n,s]of Object.entries(e)){let i=n.toUpperCase().replace(/_/g," ");r+="".concat(o).concat(i,":\n"),typeof s=="object"&&s!==null?r+=this.formatObject(s,t+1):r+="".concat(o,"  ").concat(s,"\n")}else r+="".concat(o).concat(e,"\n");return r}matchToOption(e,t){if(!e||!t||t.length===0)return(t==null?void 0:t.length)>0?t[0]:"Not available";if(this.isDecimalNumberQuestion(e)||/^\d+\.\d+$/.test(e.trim())){let o=e.match(/\d+\.\d+/);if(o){let r=o[0];for(let n of t)if(n.includes(r))return n;return r}}if(this.isYearsOfExperienceQuestion(e)||/^\d+$/.test(e.trim())){let o=e.match(/\d+/);if(o){let r=parseInt(o[0]);this.isYearsOfExperienceQuestion(e)&&r<5&&(r=5);let n=r.toString();for(let s of t)if(s.includes(n))return s;return n}}if(this.isNoticePeriodOrStartDateQuestion(e)){if(e.toLowerCase().includes("2 months")||e.toLowerCase().includes("2 monate")){for(let r of t)if(r.toLowerCase().includes("2 months")||r.toLowerCase().includes("2 monate")||r.toLowerCase().includes("2 month"))return r;return e}let o=e.match(/\d{1,2}[.\/-]\d{1,2}[.\/-]\d{4}/);if(o){let r=o[0];for(let n of t)if(n.includes(r))return n;return r}}for(let o of t)if(o.toLowerCase()===e.toLowerCase())return o;for(let o of t)if(o.toLowerCase().includes(e.toLowerCase())||e.toLowerCase().includes(o.toLowerCase()))return o;if(e.toLowerCase().includes("germany")||e.toLowerCase().includes("deutsch")){for(let o of t)if(o.toLowerCase().includes("deutsch")||o.toLowerCase().includes("germany")||o.includes("+49"))return o}return t.length>1?t[1]:t[0]}async testConnection(){try{return await this.ensureSettingsLoaded(),(await this.aiSettingsManager.testConnection()).success}catch(e){return console.error("Error testing AI connection:",e),!1}}getAISettings(){return this.aiSettingsManager.getCurrentSettings()}clear(){this.user_data=null,this.formatted_text=null,this.aiSettingsManager.clear(),this.settingsLoadPromise=null}},B=q;var N=class extends f{constructor(){super(),this.currentApplication=null,this.questionsAnswers=[]}debugLog(e,...t){console.log("[ApplicationTracker] ".concat(e),...t)}errorLog(e,t){console.error("[ApplicationTracker] ".concat(e,":"),t)}async startApplication(e,t,o,r){try{this.debugLog("Starting application tracking..."),console.log("=== APPLICATION TRACKER START DEBUG ==="),console.log("jobInfo received:",e),console.log("jobInfo type:",typeof e),console.log("jobInfo keys:",e?Object.keys(e):"null"),console.log("userData:",t),console.log("aiSettings:",o),console.log("resumeId:",r),console.log("=== END APPLICATION TRACKER START DEBUG ===");let n=await this.createOrFindCompany(e),s=await this.createOrFindJob(e,n.id);return this.currentApplication=await this.createApplication({user_id:t.id,job_id:s.id,ai_settings_id:o.id,resume_id:r,status:"applied",notes:"Applied via EasyJob extension"}),this.questionsAnswers=[],this.debugLog("Application tracking started: ".concat(this.currentApplication.id)),this.currentApplication}catch(n){throw this.errorLog("Error starting application tracking:",n),n}}async createOrFindCompany(e){try{if(this.debugLog("Creating/finding company for job info:",e),this.debugLog("Job info type:",typeof e),this.debugLog("Job info keys:",e?Object.keys(e):"null"),!e||!e.company)throw this.debugLog("Job info or company name is missing:",{jobInfo:e,company:e==null?void 0:e.company}),new Error("Company name is required");let t=await this.findCompanyByName(e.company);if(t)return this.debugLog("Found existing company: ".concat(t.name)),t;let o={name:e.company,industry:null,size:null,location:e.location,website:null,linkedin_url:null};this.debugLog("Creating new company with data:",o);let r=await this.createCompany(o);if(!r)throw new Error("Failed to create company - API request returned null");return this.debugLog("Created new company: ".concat(r.name)),r}catch(t){throw this.errorLog("Error creating/finding company:",t),t}}async createOrFindJob(e,t){var o;try{if(!e.title)throw new Error("Job title is required");if(e.jobId){let n=await this.findJobByPlatformId("linkedin",e.jobId);if(n)return this.debugLog("Found existing job: ".concat(n.title)),n}let r=await this.createJob({company_id:t,title:e.title,location:e.location,is_remote:((o=e.remoteType)==null?void 0:o.toLowerCase().includes("remote"))||!1,job_type:this.normalizeJobType(e.jobType),platform:"linkedin",platform_job_id:e.jobId,job_url:window.location.href,job_description:e.description,applicant_count:this.parseApplicantCount(e.applicantCount),posted_date:this.parsePostedDate(e.postedDate),status:"active"});if(!r)throw new Error("Failed to create job - API request returned null");return this.debugLog("Created new job: ".concat(r.title)),r}catch(r){throw this.errorLog("Error creating/finding job:",r),r}}async createApplication(e){try{this.debugLog("Creating application with data:",e);let t=await chrome.runtime.sendMessage({action:"apiRequest",method:"POST",url:"/applications",data:e});if(this.debugLog("Application creation response:",t),t&&t.success)return this.debugLog("Application created: ".concat(t.application.id)),t.application;throw this.debugLog("Failed to create application: ".concat(t==null?void 0:t.error)),new Error((t==null?void 0:t.error)||"Failed to create application")}catch(t){throw this.errorLog("Error creating application:",t),t}}async addQuestionAnswer(e,t,o,r,n=!1){try{if(!this.currentApplication){this.debugLog("No current application, skipping question/answer save");return}if(!e||!t){this.debugLog("Invalid question or answer, skipping save");return}let s={application_id:this.currentApplication.id,question:e,answer:t,question_type:o||"general",ai_model_used:r||"unknown",confidence_score:.95,is_skipped:n},i=await chrome.runtime.sendMessage({action:"apiRequest",method:"POST",url:"/questions-answers",data:s});i&&i.success?(this.questionsAnswers.push(i.question_answer),this.debugLog("Question/answer saved: ".concat(i.question_answer.id))):this.debugLog("Failed to save question/answer: ".concat(i==null?void 0:i.error))}catch(s){this.errorLog("Error adding question/answer:",s)}}async updateApplicationStatus(e,t=null){try{if(!this.currentApplication){this.debugLog("No current application to update");return}let o=await chrome.runtime.sendMessage({action:"apiRequest",method:"PUT",url:"/applications/".concat(this.currentApplication.id,"/status"),data:{status:e,notes:t}});o&&o.success?(this.currentApplication=o.application,this.debugLog("Application status updated to: ".concat(e))):this.debugLog("Failed to update application status: ".concat(o==null?void 0:o.error))}catch(o){this.errorLog("Error updating application status:",o)}}async completeApplication(e=!0){try{if(!this.currentApplication){this.debugLog("No current application to complete");return}let t=e?"applied":"failed",o=e?"Application submitted successfully":"Application failed or was cancelled";await this.updateApplicationStatus(t,o),this.debugLog("Application tracking completed: ".concat(t)),this.currentApplication=null,this.questionsAnswers=[]}catch(t){this.errorLog("Error completing application:",t)}}async findCompanyByName(e){try{this.debugLog("Searching for company by name:",e);let t=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/companies/name/".concat(encodeURIComponent(e))});return this.debugLog("Company search response:",t),t!=null&&t.success?t.company:null}catch(t){return this.debugLog("Error finding company:",t),null}}async createCompany(e){try{this.debugLog("Sending API request to create company:",e);let t=await chrome.runtime.sendMessage({action:"apiRequest",method:"POST",url:"/companies",data:e});if(this.debugLog("Company creation API response:",t),!t)throw new Error("No response received from API");if(!t.success)throw new Error("API request failed: ".concat(t.error||"Unknown error"));if(!t.company)throw new Error("API returned success but no company data");return t.company}catch(t){throw this.errorLog("Error creating company:",t),t}}async findJobByPlatformId(e,t){try{this.debugLog("Searching for job by platform ID:",{platform:e,platformJobId:t});let o=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/jobs/platform/".concat(e,"/").concat(t)});return this.debugLog("Job search response:",o),o!=null&&o.success?o.job:null}catch(o){return this.debugLog("Error finding job:",o),null}}async createJob(e){try{this.debugLog("Sending API request to create job:",e);let t=await chrome.runtime.sendMessage({action:"apiRequest",method:"POST",url:"/jobs",data:e});if(this.debugLog("Job creation API response:",t),!t)throw new Error("No response received from API");if(!t.success)throw new Error("API request failed: ".concat(t.error||"Unknown error"));if(!t.job)throw new Error("API returned success but no job data");return t.job}catch(t){throw this.errorLog("Error creating job:",t),t}}normalizeJobType(e){if(!e)return"full-time";let t=e.toLowerCase();return t.includes("full")?"full-time":t.includes("part")?"part-time":t.includes("contract")?"contract":t.includes("intern")?"internship":"full-time"}parseApplicantCount(e){if(!e)return 0;let t=e.match(/(\d+)/);return t?parseInt(t[1]):0}parsePostedDate(e){if(!e)return new Date;let t=new Date;if(e.includes("today"))return t;if(e.includes("yesterday")){let r=new Date(t);return r.setDate(r.getDate()-1),r}let o=e.match(/(\d+)\s*days?\s*ago/);if(o){let r=parseInt(o[1]),n=new Date(t);return n.setDate(n.getDate()-r),n}return t}getCurrentApplicationData(){return{application:this.currentApplication,questionsAnswers:this.questionsAnswers}}},z=new N,I=z;var R=class extends f{static async closeForm(e=!1){var t,o;try{let r=document.querySelector('button[aria-label="Dismiss"]');if(r||(r=document.querySelector('button[aria-label="Close"]')||document.querySelector('button[aria-label="Cancel"]')||document.querySelector("button[data-test-modal-close-btn]")),r){if(r.click(),await this.wait(),e){let n=document.querySelector('button[data-control-name="save_application_btn"]');n&&(n.click(),this.debugLog("Closed form and saved application"))}else{let n=document.querySelector('button[data-control-name="discard_application_confirm_btn"]')||document.querySelector("button[data-test-dialog-secondary-btn]");n&&(n.click(),this.debugLog("Closed form and discarded application"))}await this.wait()}}catch(r){this.errorLog("Error closing form",r);try{let n=document.querySelectorAll("button");for(let s of n)(s.textContent.toLowerCase().includes("close")||s.textContent.toLowerCase().includes("cancel")||(t=s.getAttribute("aria-label"))!=null&&t.toLowerCase().includes("close")||(o=s.getAttribute("aria-label"))!=null&&o.toLowerCase().includes("dismiss"))&&(s.click(),await this.wait(500))}catch(n){this.errorLog("Failed final attempt to close form",n)}}}static async clickNextPage(){try{await this.wait();let e=document.querySelector('button[aria-label="Continue to next step"]');e&&(e.click(),this.debugLog("Clicked on next page button"))}catch(e){this.errorLog("Error clicking on next page button",e)}}static async clickPreviousPage(){try{await this.wait();let e=document.querySelector('button[aria-label="Back to previous step"]');e&&(e.click(),this.debugLog("Clicked on previous page button"))}catch(e){this.errorLog("Error clicking on previous page button",e)}}static async clickReviewApplication(){try{await this.wait();let e=document.querySelector('button[aria-label="Review your application"]');e&&(e.click(),this.debugLog("Clicked on review button"))}catch(e){this.errorLog("Error clicking on review button",e)}}static async clickSubmitApplication(){try{await this.wait();let e=document.querySelector('button[aria-label="Submit application"]');e&&(e.click(),this.debugLog("Clicked on submit button"))}catch(e){this.errorLog("Error clicking on submit button",e)}}static async clickDoneAfterSubmit(){try{let e=document.querySelector('button[aria-label="Done"]');e||(e=document.querySelector("button.artdeco-button span.artdeco-button__text"),this.debugLog("Found done button",e)),e?(e.click(),this.debugLog("Clicked on Done button")):this.debugLog("Done button not found")}catch(e){this.errorLog("Error clicking on Done button",e)}}static async clickDismissAfterSubmit(){try{let e=document.querySelector('button[aria-label="Dismiss"]');if(e||(e=document.querySelector("button[data-test-modal-close-btn]")),!e){let t=document.querySelectorAll("button.artdeco-button--circle.artdeco-modal__dismiss");for(let o of t)if(o.querySelector('svg use[href="#close-medium"]')){e=o;break}}e?(e.click(),this.debugLog("Clicked on Dismiss button")):this.debugLog("Dismiss button not found")}catch(e){this.errorLog("Error clicking on Dismiss button",e)}}static async findReviewButton(){try{return document.querySelector('button[aria-label="Review your application"]')}catch(e){return this.errorLog("Error finding review button",e),null}}static async findNextButton(){try{return document.querySelector('button[aria-label="Continue to next step"]')}catch(e){return this.errorLog("Error finding next button",e),null}}static async findSubmitButton(){try{return document.querySelector('button[aria-label="Submit application"]')}catch(e){return this.errorLog("Error finding submit button",e),null}}static async findDoneButton(){try{let e=document.querySelector('button[aria-label="Done"]');if(!e){let t=document.querySelectorAll("button.artdeco-button");for(let o of t){let r=o.querySelector("span.artdeco-button__text");if(r&&r.textContent.trim()==="Done"){e=o;break}}}return e}catch(e){return this.errorLog("Error finding done button",e),null}}static async processForm(e,t=null){try{this.debugLog("Starting form processing"),console.log("=== LINKEDIN FORM CONTEXT ANALYSIS ==="),console.log("Current URL:",window.location.href),console.log("Is in iframe:",window!==window.top),console.log("Can access parent:",window.parent!==window),console.log("Chrome APIs available:",typeof chrome<"u"&&!!chrome.runtime),console.log("Document domain:",document.domain),console.log("Window origin:",window.origin),console.log("Document title:",document.title),console.log("User agent:",navigator.userAgent),console.log("LocalStorage test:",(()=>{try{localStorage.setItem("easyjob_test","test");let s=localStorage.getItem("easyjob_test");return localStorage.removeItem("easyjob_test"),s==="test"?"available and working":"available but not working"}catch(s){return"blocked: "+s.message}})()),console.log("SessionStorage test:",(()=>{try{sessionStorage.setItem("easyjob_test","test");let s=sessionStorage.getItem("easyjob_test");return sessionStorage.removeItem("easyjob_test"),s==="test"?"available and working":"available but not working"}catch(s){return"blocked: "+s.message}})()),console.log("PostMessage test:",(()=>{try{return window.postMessage({type:"easyjob_test",data:"test"},"*"),"available (can send)"}catch(s){return"blocked: "+s.message}})()),window.parent&&window.parent!==window&&(console.log("Parent access test:",(()=>{try{return"can access parent URL: "+window.parent.location.href}catch(s){return"cannot access parent: "+s.message}})()),console.log("Parent postMessage test:",(()=>{try{return window.parent.postMessage({type:"easyjob_test",data:"test"},"*"),"can send message to parent"}catch(s){return"cannot send to parent: "+s.message}})())),console.log("Global variable test:",(()=>{try{window.easyjobTest="test";let s=window.easyjobTest;return delete window.easyjobTest,s==="test"?"can set/get global variables":"global variables not working"}catch(s){return"global variables blocked: "+s.message}})()),console.log("DOM manipulation test:",(()=>{try{document.body.setAttribute("data-easyjob-test","test");let s=document.body.getAttribute("data-easyjob-test");return document.body.removeAttribute("data-easyjob-test"),s==="test"?"can manipulate DOM attributes":"DOM manipulation not working"}catch(s){return"DOM manipulation blocked: "+s.message}})()),window!==window.top&&console.log("Iframe sandbox analysis:",(()=>{try{let s=window.parent.document.querySelectorAll("iframe");for(let i of s)if(i.contentWindow===window){let d=i.getAttribute("sandbox"),l=i.getAttribute("src");return{found:!0,sandbox:d||"no sandbox attribute",src:l||"no src attribute",id:i.id||"no id",className:i.className||"no class"}}return{found:!1,reason:"could not find matching iframe"}}catch(s){return{found:!1,reason:"error accessing parent: "+s.message}}})()),console.log("JobInfo parameter analysis:"),console.log("- jobInfo type:",typeof t),console.log("- jobInfo value:",t),console.log("- jobInfo keys:",t?Object.keys(t):"null"),console.log("- jobInfo stringified:",JSON.stringify(t)),console.log("=== END CONTEXT ANALYSIS ==="),await this.startApplicationTracking(t),this.debugLog("startApplicationTracking completed");let o=setTimeout(async()=>{this.debugLog("Form processing timeout reached")},3*60*1e3),r=!1,n=!1;for(;!n;){if(typeof e=="function"?n=await e():e&&e.value!==void 0?n=e.value:n=!!e,n){this.debugLog("Stop requested during form processing");break}try{if(await this.findReviewButton()){this.debugLog("Found review button");let p=setTimeout(()=>{this.debugLog("Review processing timeout reached"),e.value=!0},1*60*1e3);if(document.querySelectorAll("div.fb-dash-form-element").length>0&&!r){this.debugLog("Found questions on current page, processing before review");let a=await this.processFormQuestions(e);if(a.stopped){this.debugLog("Form questions processing stopped by user");break}a.success||this.debugLog("Form questions processing failed"),r=!0,this.debugLog("Current page form questions processed, will not reprocess")}else r?this.debugLog("Skipping redundant form processing for current page"):this.debugLog("No form questions found on current page");if(await this.clickReviewApplication(),await this.wait(2e3),typeof e=="function"?n=await e():e&&e.value!==void 0?n=e.value:n=!!e,n){this.debugLog("Stop requested after clicking review");break}if(document.querySelectorAll("div.fb-dash-form-element").length>0){this.debugLog("Found questions on review page");let a=await this.processFormQuestions(e);if(a.stopped){this.debugLog("Review questions processing stopped by user");break}a.success||this.debugLog("Review questions processing failed")}else this.debugLog("No questions found on review page");await this.clickSubmitApplication(),await this.wait(2e3),await this.clickDismissAfterSubmit(),await I.completeApplication(!0),this.debugLog("Clicked submit button after review"),clearTimeout(p);break}if(document.querySelectorAll("div.fb-dash-form-element").length>0&&!r){this.debugLog("Found form questions, processing...");let p=await this.processFormQuestions(e);if(p.stopped){this.debugLog("Form questions processing stopped by user");break}p.success||this.debugLog("Form questions processing failed"),r=!0,this.debugLog("Form questions processed")}if(await this.findNextButton()){if(this.debugLog("Found next button, moving to next page"),await this.clickNextPage(),await this.wait(2e3),typeof e=="function"?n=await e():e&&e.value!==void 0?n=e.value:n=!!e,n){this.debugLog("Stop requested after navigation");break}r=!1;continue}if(await this.findSubmitButton()){if(this.debugLog("Found submit button, submitting application"),typeof e=="function"?n=await e():e&&e.value!==void 0?n=e.value:n=!!e,n){this.debugLog("Stop requested before final submit");break}await this.clickSubmitApplication(),await this.wait(2e3),await this.clickDismissAfterSubmit(),await I.completeApplication(!0);break}this.debugLog("No navigation buttons found, waiting..."),await this.wait(1e3)}catch(s){this.errorLog("Error in form processing loop",s),await this.wait(2e3)}}return clearTimeout(o),this.debugLog("Form processing completed"),!0}catch(o){return this.errorLog("Error processing form",o),!1}}static async startApplicationTracking(e=null){try{if(this.debugLog("Starting application tracking"),console.log("=== APPLICATION TRACKING DEBUG ==="),console.log("jobInfo parameter:",e),console.log("jobInfo type:",typeof e),console.log("jobInfo keys:",e?Object.keys(e):"null"),console.log("=== END APPLICATION TRACKING DEBUG ==="),this.debugLog("Job info:",e),!e){this.debugLog("No job info provided, skipping application tracking");return}let t=await chrome.storage.local.get(["currentUser"]);if(!t.currentUser){this.debugLog("No current user found, skipping application tracking");return}let o=window.currentAiSettings;if(!o){this.debugLog("No AI settings found, skipping application tracking");return}let r=await chrome.storage.local.get(["currentResumeId"]);if(!r.currentResumeId){this.debugLog("No current resume ID found, skipping application tracking");return}await I.startApplication(e,t.currentUser,o,r.currentResumeId),this.debugLog("Application tracking started successfully")}catch(t){this.errorLog("Error starting application tracking:",t)}}static shouldSkipQuestion(e){let t=e.toLowerCase();return this.shouldSkipQuestionDirect(t)}static shouldSkipQuestionDirect(e){return!!(e.includes("email")||e.includes("e-mail")||e.includes("e-mail-adresse")||["phone","mobile","cell","telephone","handy","telefon","handynummer","handynumer","mobilnummer","handy","tel\xE9fono","m\xF3vil","celular","tel\xE9fono m\xF3vil","t\xE9l\xE9phone","portable","mobile","t\xE9l\xE9phone portable","telefono","cellulare","mobile","telefono cellulare"].some(s=>e.includes(s))||["country code","area code","phone prefix","calling code","prefix","landsvorwahl","vorwahl","l\xE4ndercode","vorwahl","c\xF3digo de pa\xEDs","c\xF3digo de \xE1rea","prefijo","c\xF3digo","indicatif pays","indicatif","pr\xE9fixe","indicatif t\xE9l\xE9phonique","prefisso","codice paese","prefisso telefonico"].some(s=>e.includes(s))||["contact information","contact details","contact","kontaktinformation","kontaktdaten","kontakt","informaci\xF3n de contacto","datos de contacto","contacto","coordonn\xE9es","informations de contact","contact","informazioni di contatto","dati di contatto","contatto"].some(s=>e.includes(s))||["first name","last name","full name","name","given name","family name","vorname","nachname","vollst\xE4ndiger name","name","familienname","nombre","apellido","nombre completo","primer nombre","segundo nombre","pr\xE9nom","nom","nom complet","nom de famille","nome","cognome","nome completo","nome di battesimo"].some(s=>e.includes(s)))}static async processFormQuestions(e=null){try{this.debugLog("Processing form questions");let t=document.querySelectorAll("div.fb-dash-form-element");this.debugLog("Found ".concat(t.length," form elements"));for(let o of t){if(e){let r=!1;if(typeof e=="function"?r=await e():e&&e.value!==void 0?r=e.value:r=!!e,r)return this.debugLog("Stop requested during form questions processing"),{stopped:!0}}try{let r=o.querySelector("legend span.fb-dash-form-element__label span")||o.querySelector("label");if(!r){this.debugLog("No label found for form element");continue}let n=r.textContent.trim();if(n=n.replace(/(.+?)\1/,"$1"),this.debugLog("Processing question: ".concat(n)),this.shouldSkipQuestion(n)){this.debugLog("Skipping prefilled question: ".concat(n));continue}let s=o.querySelector("input, textarea, select");if(!s){this.debugLog("No input field found for question");continue}let i=[];switch(s.tagName.toLowerCase()){case"input":s.type==="radio"&&o.querySelectorAll('input[type="radio"]').forEach(p=>{let b=o.querySelector('label[for="'.concat(p.id,'"]'));b&&i.push(b.textContent.trim())});break;case"select":i=Array.from(s.options).map(l=>l.text.trim());break}i.length>0&&this.debugLog('Available options for "'.concat(n,'":'));let d=await this.answerQuestion(n,i,s,o,e);if(d.stopped)return this.debugLog("Form questions processing stopped by user"),{stopped:!0};d.success||this.debugLog("Failed to answer question: ".concat(n))}catch(r){this.errorLog("Error processing form element: ".concat(r.message),r)}}return this.debugLog("Completed processing form questions"),{success:!0}}catch(t){return this.errorLog("Error in processFormQuestions",t),{success:!1}}}static async answerQuestion(e,t=[],o,r,n=null){var s;try{let i=null;window.currentAiSettings&&(i=window.currentAiSettings,this.debugLog("Using AI settings from current settings:",i));let d=null;try{let a=await chrome.storage.local.get(["currentUser"]);a.currentUser&&a.currentUser.id&&(d=a.currentUser.id,this.debugLog("Using user ID: ".concat(d)))}catch(a){this.errorLog("Error getting current user:",a)}let l=new B(d);if(i){let a={ai_provider:i.provider,ai_model:i.model,apiKey:i.apiKey,is_default:!0};l.aiSettingsManager.setSettings(a),this.debugLog("Set AI settings directly: provider=".concat(a.ai_provider,", model=").concat(a.ai_model))}this.debugLog("Answering question: ".concat(e)),this.debugLog("Available options:",t);try{let a=await chrome.storage.local.get(["userResumeData","userResumeText","userResumeType"]);a&&(a.userResumeData||a.userResumeText)?(this.debugLog("Found user resume data in storage"),a.userResumeData?(await l.setUserContext(a.userResumeData,a.userResumeText),this.debugLog("Set structured user context in AI instance")):(await l.setUserContext(a.userResumeText),this.debugLog("Set text user context in AI instance"))):this.debugLog("No user resume found in storage")}catch(a){this.errorLog("Error loading user resume from storage:",a)}let p=null;try{this.debugLog("=== RESUME ID RETRIEVAL DEBUG ===");let a=await chrome.storage.local.get(["currentResumeId"]);if(this.debugLog("Resume result from storage:",a),a.currentResumeId)p=a.currentResumeId,this.debugLog("Using resume ID from storage: ".concat(p));else if(this.debugLog("No resume ID in storage, fetching from database..."),d){this.debugLog("Fetching default resume for user: ".concat(d));let u=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/users/".concat(d,"/resumes/default")});this.debugLog("Default resume API response:",u),this.debugLog("Response success:",u==null?void 0:u.success),this.debugLog("Response resume:",u==null?void 0:u.resume),this.debugLog("Response error:",u==null?void 0:u.error),u&&u.success&&u.resume?(p=u.resume.id,this.debugLog("Got resume ID from database: ".concat(p)),await chrome.storage.local.set({currentResumeId:p}),this.debugLog("Stored resume ID in storage for future use")):(this.debugLog("Failed to get default resume from database:",u),this.debugLog("Response details:",{success:u==null?void 0:u.success,error:u==null?void 0:u.error,status:u==null?void 0:u.status,message:u==null?void 0:u.message}))}else this.debugLog("No user ID available for resume fetch")}catch(a){this.errorLog("Error getting current resume ID:",a)}let b=await l.answerQuestion(e,t,n,p);if(b.stopped)return this.debugLog("Question answering stopped by user"),{stopped:!0};if(!b.success||!b.answer)return this.debugLog("No answer generated for question"),{success:!1};let m=b.answer;this.debugLog("AI Answer: ".concat(m));try{let a=this.detectQuestionType(e),u=((s=window.currentAiSettings)==null?void 0:s.model)||"unknown",L=this.shouldSkipQuestion(e);await I.addQuestionAnswer(e,m,a,u,L)}catch(a){this.errorLog("Error tracking question/answer:",a)}switch(o.tagName.toLowerCase()){case"input":switch(o.type){case"text":case"tel":case"email":o.value=m,o.dispatchEvent(new Event("input",{bubbles:!0}));break;case"radio":let a=r.querySelectorAll('input[type="radio"]');for(let u of a){let L=r.querySelector('label[for="'.concat(u.id,'"]'));if(L&&L.textContent.trim()===m){u.click(),this.debugLog("Selected radio option: ".concat(m));break}}break;case"checkbox":o.checked=!0,o.dispatchEvent(new Event("change",{bubbles:!0}));break}break;case"textarea":o.value=m,o.dispatchEvent(new Event("input",{bubbles:!0}));break;case"select":for(let a=0;a<o.options.length;a++)if(o.options[a].text.trim()===m){o.selectedIndex=a,o.dispatchEvent(new Event("change",{bubbles:!0})),this.debugLog("Selected option: ".concat(m));break}break}return await this.wait(500),{success:!0}}catch(i){return this.errorLog('Error answering question "'.concat(e,'"'),i),{success:!1}}}static detectQuestionType(e){let t=e.toLowerCase();return t.includes("level of")||t.includes("proficiency in")||t.includes("fluent in")?"language_level":t.includes("skill")||t.includes("experience")||t.includes("years")||t.includes("technology")||t.includes("programming")||t.includes("language")||t.includes("c++")||t.includes("python")||t.includes("java")?"skills":t.includes("education")||t.includes("degree")||t.includes("study")||t.includes("university")||t.includes("college")?"education":t.includes("language")||t.includes("speak")||t.includes("fluent")?"languages":t.includes("notice")||t.includes("period")||t.includes("availability")||t.includes("start date")?"notice":t.includes("salary")||t.includes("compensation")||t.includes("pay")?"salary":t.includes("visa")||t.includes("citizenship")||t.includes("work permit")?"visa":t.includes("certification")||t.includes("certificate")?"certifications":"general"}},M=R;function g(c,e=null){let t=new Date().toISOString().split("T")[1],o="[EasyJob Debug ".concat(t,"] ").concat(c);e?console.log(o,e):console.log(o)}function h(c,e="info"){g("Status Update: ".concat(e," - ").concat(c)),typeof chrome<"u"&&chrome.runtime&&chrome.runtime.sendMessage({action:"STATUS_UPDATE",text:c,status:e})}async function w(c){if(!c)return g("Auto-apply process stopped by user (local check)"),h("Auto-apply process stopped","info"),typeof chrome<"u"&&chrome.runtime&&chrome.runtime.sendMessage({action:"PROCESS_COMPLETE"}),!0;try{if(typeof chrome<"u"&&chrome.runtime){let e=await chrome.runtime.sendMessage({action:"getAutoApplyState"});if(e&&e.success&&!e.isRunning)return g("Auto-apply process stopped by user (background check)"),h("Auto-apply process stopped","info"),chrome.runtime.sendMessage({action:"PROCESS_COMPLETE"}),!0}}catch(e){g("Failed to check background state, using local state",e)}return!1}typeof chrome<"u"&&chrome.runtime&&chrome.runtime.onMessage.addListener((c,e,t)=>{if(c.action==="START_AUTO_APPLY")return startAutoApplyProcess().then(()=>{t({success:!0})}).catch(o=>{console.error("Error in auto-apply process:",o),t({success:!1,error:o.message})}),!0});var O=class extends f{static async processJobPage(e,t,o,r){this.debugLog("Processing page ".concat(e,"/").concat(t)),h("Processing page ".concat(e," of ").concat(t),"info");let n=await E.getListOfJobsOnPage(o);g("Found ".concat(n.length," jobs on page ").concat(e));for(let s of n){if(await w(r))return this.debugLog("Stop requested during job processing - breaking job loop"),!1;if(await D.processJob(s,r),await w(r))return this.debugLog("Stop requested after job processing - breaking job loop"),!1}if(e<t)if(g("Finished processing page ".concat(e,", navigating to next page...")),h("Moving to page ".concat(e+1," of ").concat(t,"..."),"info"),await E.goToNextPage())g("Successfully navigated to page ".concat(e+1));else return g("Failed to navigate to next page or reached last page"),await E.isOnLastPage()?(g("Confirmed: reached the last page"),h("Reached the last page of results","info")):(g("Navigation failed but not on last page - stopping process"),h("Failed to navigate to next page - stopping","error")),!1;else g("Finished processing last page (".concat(e,"/").concat(t,")"));return!0}},D=class extends f{static async processJob(e,t){try{let o=await S.getJobClickableElement(e);if(await S.clickOnJob(o),g("Clicked on job"),await S.scrollDownToLoadNextJob(e),g("Scrolled to job"),await w(t))return;let r=await S.isEasyButtonAvailable();if(g("Is Easy Apply button available:",r),!r){g("Job already applied. Skipping..."),h("Job already applied. Skipping...","info");return}let n=await P.getAllJobInfo();if(console.log("=== JOB INFO EXTRACTION ==="),console.log("Extraction URL:",window.location.href),console.log("Job info extracted:",n),console.log("Job info type:",typeof n),console.log("Job info keys:",n?Object.keys(n):"null"),console.log("=== END JOB INFO EXTRACTION ==="),!n){g("ERROR: Job info is null, cannot proceed");return}window.currentUserData&&await chrome.storage.local.set({currentUser:window.currentUserData});try{if(!(await chrome.storage.local.get(["currentResumeId"])).currentResumeId&&window.currentUserData){let d=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/users/".concat(window.currentUserData.id,"/resumes/default")});d&&d.success&&d.resume&&await chrome.storage.local.set({currentResumeId:d.resume.id})}}catch(i){g("Error storing resume ID:",i)}if(await S.clickEasyApply(),await new Promise(i=>setTimeout(i,3e3)),await w(t)){this.debugLog("Stop requested before form processing");return}console.log("=== CALLING PROCESS FORM ==="),console.log("About to call processForm with jobInfo:",n),console.log("Current URL before form processing:",window.location.href),console.log("=== END CALLING PROCESS FORM ===");let s=async()=>await w(t);await M.processForm(s,n),g("Processed application form")}catch(o){console.error("Error processing job:",o),g("Error processing job:",{error:o.message,stack:o.stack}),h("Error processing job. Continuing to next one...","error")}}},$=O;var y=!1;async function J(){try{if(g("Starting auto-apply process"),g("Current URL:",window.location.href),await w(y))return;let c=document.querySelector(".scaffold-layout.jobs-search-two-pane__layout");if(g("Search element found:",!!c),!c){g("Available elements on page:",{body:document.body.innerHTML.substring(0,500)+"...",possibleSelectors:{scaffold:document.querySelector(".scaffold-layout"),jobsSearch:document.querySelector(".jobs-search-two-pane__layout"),anyJobsRelated:document.querySelectorAll('[class*="jobs-"]')}}),h("Could not find jobs list. Please make sure you are on LinkedIn jobs page.","error");return}g("Getting total jobs count");let e=await E.getTotalJobsSearchCount(c);g("Total jobs found:",e),h("Found ".concat(e," jobs to process"),"info"),g("Getting available pages");let t=await E.getAvailablePages(c,e);g("Total pages found:",t);for(let o=1;o<=t;o++){if(await w(y))return;if(await $.processJobPage(o,t,c,y)===!1){g("Page processing failed or reached end, stopping at page ".concat(o));break}}await w(y)||(g("Auto-apply process completed"),h("Auto-apply process completed!","success"),chrome&&chrome.runtime&&chrome.runtime.sendMessage({action:"PROCESS_COMPLETE"}))}catch(c){console.error("Error in auto-apply process:",c),g("Fatal error in auto-apply process:",{error:c.message,stack:c.stack}),h("Error in auto-apply process","error")}}console.log("=== CONTENT SCRIPT LOADED ===");console.log("URL:",window.location.href);console.log("Is iframe:",window!==window.top);console.log("Chrome APIs:",typeof chrome<"u"&&!!chrome.runtime);console.log("Document ready state:",document.readyState);console.log("=== END CONTENT SCRIPT ANALYSIS ===");typeof chrome>"u"||!chrome.runtime?console.log("Chrome extension APIs not available - script may be running in wrong context"):chrome.runtime.onMessage.addListener((c,e,t)=>(g("Received message in content script:",c),g("Message sender:",e),(async()=>{try{c.action==="startAutoApply"?y?t({success:!1,message:"Auto apply already running"}):(y=!0,g("Starting auto-apply process with user data:",c.userData),g("AI settings:",c.aiSettings),window.currentUserData=c.userData,window.currentAiSettings=c.aiSettings,g("Content script: Received AI settings:",{provider:c.aiSettings.provider,model:c.aiSettings.model,hasApiKey:!!c.aiSettings.apiKey}),J(),t({success:!0,message:"Auto apply started"})):c.action==="stopAutoApply"?(g("Stopping auto-apply process"),y=!1,t({success:!0,message:"Auto apply stopped"})):c.action==="GET_STATE"?(g("Getting current state"),t({isRunning:y})):c.action==="START_AUTO_APPLY"?y?t({success:!1,message:"Auto apply already running"}):(y=!0,g("Starting auto-apply process (legacy format)"),J(),t({success:!0,message:"Auto apply started"})):c.action==="STOP_AUTO_APPLY"?(g("Stopping auto-apply process (legacy format)"),y=!1,t({success:!0,message:"Auto apply stopped"})):(g("Unknown action received:",c.action),t({success:!1,message:"Unknown action"}))}catch(o){g("Error handling message in content script:",o),t({success:!1,error:o.message})}})(),!0));
