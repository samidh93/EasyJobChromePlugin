var H=Object.defineProperty,X=Object.defineProperties;var Z=Object.getOwnPropertyDescriptors;var B=Object.getOwnPropertySymbols;var ee=Object.prototype.hasOwnProperty,te=Object.prototype.propertyIsEnumerable;var G=(u,e,t)=>e in u?H(u,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):u[e]=t,v=(u,e)=>{for(var t in e||(e={}))ee.call(e,t)&&G(u,t,e[t]);if(B)for(var t of B(e))te.call(e,t)&&G(u,t,e[t]);return u},k=(u,e)=>X(u,Z(e));var x=class{static async wait(e=1e3){await new Promise(t=>setTimeout(t,e))}static debugLog(e){console.log("[".concat(this.constructor.name,"] ").concat(e))}static errorLog(e,t){console.error("[".concat(this.constructor.name,"] ").concat(e,":"),t)}},w=x;var I=class extends w{static async getTotalJobsSearchCount(e){try{await this.wait();let t=e.querySelector(".jobs-search-results-list__subtitle");if(t){let r=t.textContent.trim(),s=parseInt(r.split(" ")[0].replace(/,/g,"").replace(/\./g,"").replace(/\+/g,""));return this.debugLog("Total jobs found: ".concat(s)),s}else return this.debugLog("No results found"),0}catch(t){return this.errorLog("Error fetching total jobs count",t),0}}static async getAvailablePages(e,t){try{await this.wait();let r=e.querySelector('ul[class*="jobs-search-pagination__pages"]');if(!r)return this.debugLog("Pagination list not found."),0;let s=r.querySelectorAll("li");if(s.length===0)return this.debugLog("No pagination items found."),0;let o=s[s.length-1];this.debugLog("Last page: ".concat(o));let i=Math.ceil(t/25);return this.debugLog("Total pages available: ".concat(i)),i}catch(r){return this.errorLog("Error fetching available pages",r),0}}static async getListOfJobsOnPage(e){try{await this.wait();let t=e.querySelector(".scaffold-layout__list");if(!t)return this.debugLog("Jobs container not found."),[];let r=t.querySelectorAll("li[class*='scaffold-layout__list-item']");return this.debugLog("Found ".concat(r.length," jobs on this page.")),Array.from(r)}catch(t){return this.errorLog("Error fetching list of jobs",t),[]}}static async goToNextPage(){try{await this.wait();let e=document.querySelector('button[aria-label="View next page"]')||document.querySelector("button.jobs-search-pagination__button--next")||document.querySelector('button[aria-label="Next"]');return e&&!e.disabled?(this.debugLog("Found next page button, clicking..."),e.click(),this.debugLog("Clicked next page button"),await this.wait(3e3),!0?(this.debugLog("Successfully navigated to next page"),!0):(this.debugLog("Jobs failed to load on next page"),!1)):(this.debugLog("Next page button not found or disabled - likely on last page"),!1)}catch(e){return this.errorLog("Error navigating to next page",e),!1}}static async isOnLastPage(){try{let e=document.querySelector('button[aria-label="View next page"]')||document.querySelector("button.jobs-search-pagination__button--next");return!e||e.disabled}catch(e){return this.errorLog("Error checking if on last page",e),!0}}},E=I;var T=class extends w{static async getJobClickableElement(e){try{await this.wait();let t=e.querySelector("a");return t||(this.debugLog("Could not find clickable element for job"),null)}catch(t){return this.errorLog("Error fetching clickable element",t),null}}static async scrollDownToLoadNextJob(e){try{await this.wait(),e.scrollIntoView({behavior:"smooth",block:"center"}),this.debugLog("Scrolled down to load next job")}catch(t){this.errorLog("Error scrolling down to load next job",t)}}static async clickOnJob(e){try{e.click(),this.debugLog("Clicked on job element")}catch(t){this.debugLog("Could not click on job element",t)}}static async isEasyButtonAvailable(){try{let e=document.querySelector(".jobs-s-apply button");return e?e.disabled?(this.debugLog("easy apply button found but disabled"),!1):(this.debugLog("found easy apply button"),!0):(this.debugLog("easy apply button not found"),!1)}catch(e){return this.errorLog("Error checking easy apply button availability",e),!1}}static async clickEasyApply(){try{let e=document.querySelector(".jobs-s-apply button");if(e)return e.click(),this.debugLog("Clicked on easy apply button"),!0;throw new Error("Easy apply button not found")}catch(e){throw this.errorLog("Error clicking on easy apply button",e),e}}},S=T;var q=class extends w{static async getJobId(){try{let e=new URLSearchParams(window.location.search).get("currentJobId");return e?(this.debugLog("Found job ID: ".concat(e)),e):(this.debugLog("Job ID not found in URL"),null)}catch(e){return this.errorLog("Error getting job ID",e),null}}static async getJobTitle(){try{let e=document.querySelector(".job-details-jobs-unified-top-card__job-title h1");if(e){let t=e.textContent.trim();return this.debugLog("Found job title: ".concat(t)),t}return this.debugLog("Job title not found"),null}catch(e){return this.errorLog("Error getting job title",e),null}}static async getCompanyName(){try{let e=document.querySelector(".job-details-jobs-unified-top-card__company-name a");if(e){let t=e.textContent.trim();return this.debugLog("Found company name: ".concat(t)),t}return this.debugLog("Company name not found"),null}catch(e){return this.errorLog("Error getting company name",e),null}}static async getLocation(){try{let e=document.querySelector(".job-details-jobs-unified-top-card__tertiary-description-container .tvm__text");if(e){let t=e.textContent.trim();return this.debugLog("Found location: ".concat(t)),t}return this.debugLog("Location not found"),null}catch(e){return this.errorLog("Error getting location",e),null}}static async getJobType(){try{let e=document.querySelectorAll("button.job-details-preferences-and-skills .job-details-preferences-and-skills__pill");if(e.length>1){let r=e[1].querySelectorAll("span");if(r.length>0){let s=r[0].querySelectorAll("span");if(s.length>0){let o=s[0].textContent.trim();if(o)return this.debugLog("Found jobType type: ".concat(o)),o}}}return this.debugLog("jobType type not found"),null}catch(e){return this.errorLog("Error getting jobType type",e),null}}static async getRemoteType(){try{let e=document.querySelectorAll("button.job-details-preferences-and-skills .job-details-preferences-and-skills__pill");if(e.length>0){let r=e[0].querySelectorAll("span");if(r.length>0){let s=r[0].querySelectorAll("span");if(s.length>0){let o=s[0].textContent.trim();if(o)return this.debugLog("Found remote type: ".concat(o)),o}}}return this.debugLog("Remote type not found"),null}catch(e){return this.errorLog("Error getting remote type",e),null}}static async getJobDescription(){try{let e=document.querySelector(".jobs-description__content");if(e){let t=e.textContent.trim();return this.debugLog("Found job description"),t}return this.debugLog("Job description not found"),null}catch(e){return this.errorLog("Error getting job description",e),null}}static async getApplicantCount(){try{let e=document.querySelectorAll(".job-details-jobs-unified-top-card__tertiary-description-container .tvm__text"),t=e.length>0?e[e.length-1]:null;if(t){let r=t.textContent.trim();return this.debugLog("Found applicant count: ".concat(r)),r}return this.debugLog("Applicant count not found"),null}catch(e){return this.errorLog("Error getting applicant count",e),null}}static async getPostedDate(){try{let e=document.querySelectorAll(".job-details-jobs-unified-top-card__tertiary-description-container .tvm__text")[2];if(e){let t=e.textContent.trim();return this.debugLog("Found posted date: ".concat(t)),t}return this.debugLog("posted date not found"),null}catch(e){return this.errorLog("Error getting applicant count",e),null}}static async getAllJobInfo(){try{let e={jobId:await this.getJobId(),title:await this.getJobTitle(),company:await this.getCompanyName(),location:await this.getLocation(),jobType:await this.getJobType(),remoteType:await this.getRemoteType(),description:await this.getJobDescription(),applicantCount:await this.getApplicantCount(),postedDate:await this.getPostedDate()};return this.debugLog("Retrieved all job information"),e}catch(e){return this.errorLog("Error getting all job information",e),null}}},R=q;var P=class{constructor(){this.currentSettings=null,this.defaultModel="qwen2.5:3b",this.settingsLoadPromise=null}async loadAISettings(e){try{if(console.log("AISettingsManager: Loading AI settings for user:",e),!e||typeof e!="string"||e.length!==36)return console.error("AISettingsManager: Invalid user ID provided:",e),console.log("AISettingsManager: Returning default settings (ollama)"),this.getDefaultSettings();console.log("AISettingsManager: Making API request to load settings...");let t=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/users/".concat(e,"/ai-settings/default")});return t&&t.success?(this.currentSettings=t.ai_settings,console.log("AISettingsManager: Successfully loaded AI settings"),this.currentSettings):(console.warn("AISettingsManager: No AI settings found, using default"),console.log("AISettingsManager: Response was:",t),this.getDefaultSettings())}catch(t){return console.error("AISettingsManager: Error loading AI settings:",t),this.getDefaultSettings()}}getDefaultSettings(){return console.log("AISettingsManager: No AI settings configured - user must set up AI first"),null}getCurrentSettings(){return this.currentSettings}setSettings(e){this.currentSettings=e,console.log("AISettingsManager: Settings updated:",e)}getModel(){let e=this.getCurrentSettings();return e&&(e.ai_model||e.model)||null}getProvider(){let e=this.getCurrentSettings();return e&&(e.ai_provider||e.provider)||null}async getDecryptedApiKey(){let e=this.getCurrentSettings();if(!e)return null;if(e.apiKey&&e.apiKey!=="encrypted")return e.apiKey;if(e.api_key_encrypted&&e.id)try{let t=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/ai-settings/".concat(e.id,"/encrypted-key")});if(t&&t.success&&t.api_key_encrypted){let r=await chrome.runtime.sendMessage({action:"apiRequest",method:"POST",url:"/ai-settings/decrypt-api-key",data:{encryptedApiKey:t.api_key_encrypted}});if(r&&r.success)return e.apiKey=r.decryptedApiKey,r.decryptedApiKey}}catch(t){throw console.error("AISettingsManager: Error fetching/decrypting API key:",t),new Error("Failed to retrieve API key")}return null}async testConnection(){try{let e=this.getProvider();return e==="ollama"?await chrome.runtime.sendMessage({action:"testOllama"}):e==="openai"?await chrome.runtime.sendMessage({action:"testOpenAI"}):this.getCurrentSettings().apiKey?{success:!0,message:"".concat(e," settings validated")}:{success:!1,error:"API key required for ".concat(e)}}catch(e){return console.error("AISettingsManager: Error testing connection:",e),{success:!1,error:e.message}}}async callAI(e){try{let t=this.getProvider(),r=this.getModel(),s=0;if(e.prompt?s=this.estimateTokens(e.prompt):e.messages&&(s=this.estimateTokensFromMessages(e.messages)),t==="ollama"){let o=k(v({},e),{model:r}),i=await chrome.runtime.sendMessage({action:"callOllama",endpoint:"generate",data:o});if(i.success===!1)throw new Error(i.error||"Unknown error from Ollama API");return i.data}else if(t==="openai"){let o=await this.getDecryptedApiKey();if(!o)throw new Error("OpenAI API key is required");let i=k(v({},e),{model:r,apiKey:o});console.log("Sending OpenAI request:",k(v({},i),{apiKey:"[REDACTED]"}));let c=await chrome.runtime.sendMessage({action:"callOpenAI",data:i});if(c.success===!1)throw new Error(c.error||"Unknown error from OpenAI API");return c.data}else throw new Error("Provider ".concat(t," not yet implemented"))}catch(t){throw console.error("AISettingsManager: Error calling AI API:",t),t}}async callAIWithStop(e,t=null){try{let r=this.getProvider();if(r==="ollama"){let s=this.getModel(),o=k(v({},e),{model:s});return new Promise((i,c)=>{let a=null;t&&(a=setInterval(async()=>{try{let n=!1;typeof t=="function"?n=await t():t&&t.value!==void 0?n=t.value:n=!!t,n&&(console.log("Stop requested during AI API call"),a&&clearInterval(a),i({stopped:!0}))}catch(n){console.error("Error in stop check:",n)}},500)),chrome.runtime.sendMessage({action:"callOllama",endpoint:"generate",data:o},n=>{a&&clearInterval(a),chrome.runtime.lastError?c(new Error(chrome.runtime.lastError.message)):n.success===!1?c(new Error(n.error||"Unknown error from Ollama API")):i(n.data)})})}else if(r==="openai"){let s=this.getModel(),o=await this.getDecryptedApiKey();if(!o)throw new Error("OpenAI API key is required");return new Promise((i,c)=>{let a=null;t&&(a=setInterval(async()=>{try{let n=!1;typeof t=="function"?n=await t():t&&t.value!==void 0?n=t.value:n=!!t,n&&(console.log("Stop requested during OpenAI API call"),a&&clearInterval(a),i({stopped:!0}))}catch(n){console.error("Error in stop check:",n)}},500)),chrome.runtime.sendMessage({action:"callOpenAI",data:k(v({},e),{model:s,apiKey:o})},n=>{a&&clearInterval(a),chrome.runtime.lastError?c(new Error(chrome.runtime.lastError.message)):n.success===!1?c(new Error(n.error||"Unknown error from OpenAI API")):i(n.data)})})}else throw new Error("Provider ".concat(r," not yet implemented"))}catch(r){throw console.error("AISettingsManager: Error calling AI API with stop:",r),r}}async loadAvailableModels(){try{let e=this.getProvider();if(e==="ollama"){let t=await chrome.runtime.sendMessage({action:"ollamaRequest",method:"GET",url:"/api/tags"});if(t&&t.success)return t.models.map(r=>r.name);throw new Error((t==null?void 0:t.error)||"Failed to load Ollama models")}else throw new Error("Provider ".concat(e," not yet implemented"))}catch(e){throw console.error("AISettingsManager: Error loading models:",e),e}}estimateTokens(e){if(!e)return 0;let t=e.length;return Math.ceil(t/4)}estimateTokensFromMessages(e){if(!e||!Array.isArray(e))return 0;let t=0;for(let r of e)r.content&&(t+=this.estimateTokens(r.content)),t+=4;return t}getTokenAnalysis(e){let t={inputTokens:0,estimatedOutputTokens:0,maxTokens:e.max_tokens||1e3,provider:this.getProvider(),model:this.getModel()};return e.prompt?t.inputTokens=this.estimateTokens(e.prompt):e.messages&&(t.inputTokens=this.estimateTokensFromMessages(e.messages)),t.estimatedOutputTokens=Math.min(t.maxTokens,100),t}clear(){this.currentSettings=null,this.settingsLoadPromise=null}},Y=P;var D=class{constructor(e){this.aiSettingsManager=e,this.classificationCache=new Map}async classifyQuestion(e){let t=e.toLowerCase().trim();if(this.classificationCache.has(t))return console.log("AIQuestionClassifier: Using cached classification"),this.classificationCache.get(t);try{let r=this.buildClassificationPrompt(e);console.log("AIQuestionClassifier: Classifying question with AI");let s=await this.aiSettingsManager.callAI({prompt:r,max_tokens:200,temperature:.1,stream:!1}),o=this.parseClassificationResponse(s);return o=this.validateClassification(o,e),this.classificationCache.set(t,o),console.log("AIQuestionClassifier: Classification result:",o),o}catch(r){return console.error("AIQuestionClassifier: Error classifying question:",r),this.getFallbackClassification(e)}}buildClassificationPrompt(e){return'You are an expert at analyzing job application questions. Classify the following question and extract relevant keywords.\n\nQUESTION: "'.concat(e,'"\n\nAnalyze and return ONLY a JSON object with these fields:\n{\n  "question_type": "one of: language_proficiency|skill_level|years_experience|education|personal|salary|availability|notice_period|visa_status|general",\n  "keywords": ["array", "of", "relevant", "keywords"],\n  "confidence": 0.95,\n  "language": "en|de|fr|es",\n  "expected_format": "text|number|selection|boolean"\n}\n\nCLASSIFICATION RULES:\n- language_proficiency: Questions about language skills (German, English, etc.)\n- skill_level: Questions about proficiency in technologies/tools\n- years_experience: Questions asking for number of years of experience\n- education: Questions about degrees, universities, graduation\n- personal: Questions about name, contact, location, citizenship\n- salary: Questions about salary expectations or current salary\n- availability: Questions about start date, availability\n- notice_period: Questions about notice period or current employment\n- visa_status: Questions about visa, work permit, citizenship\n- general: Any other questions\n\nKEYWORD EXTRACTION:\n- Extract specific technologies, languages, skills mentioned\n- Normalize to common terms (e.g., "JS" \u2192 "JavaScript", "Deutsch" \u2192 "German")\n- Include variations and synonyms\n\nEXAMPLES:\nQ: "Wie gut beherrschen Sie Deutsch?" \u2192 {"question_type":"language_proficiency","keywords":["German"],"confidence":0.95,"language":"de","expected_format":"selection"}\nQ: "How many years of experience do you have with Python?" \u2192 {"question_type":"years_experience","keywords":["Python"],"confidence":0.9,"language":"en","expected_format":"number"}\nQ: "What is your proficiency level in SAP?" \u2192 {"question_type":"skill_level","keywords":["SAP"],"confidence":0.9,"language":"en","expected_format":"selection"}\n\nReturn ONLY the JSON object:')}parseClassificationResponse(e){var t,r,s;try{let o="";if(e!=null&&e.response)o=e.response.trim();else if((s=(r=(t=e==null?void 0:e.choices)==null?void 0:t[0])==null?void 0:r.message)!=null&&s.content)o=e.choices[0].message.content.trim();else throw new Error("Unexpected AI response format");let i=o.match(/\{[\s\S]*\}/);if(i)return JSON.parse(i[0]);throw new Error("No JSON found in response")}catch(o){throw console.error("AIQuestionClassifier: Error parsing classification response:",o),o}}validateClassification(e,t){return{question_type:["language_proficiency","skill_level","years_experience","education","personal","salary","availability","notice_period","visa_status","general"].includes(e.question_type)?e.question_type:"general",keywords:Array.isArray(e.keywords)?e.keywords:[],confidence:typeof e.confidence=="number"?e.confidence:.5,language:e.language||"en",expected_format:e.expected_format||"text"}}getFallbackClassification(e){let t=e.toLowerCase();return t.includes("deutsch")||t.includes("german")||t.includes("english")||t.includes("sprache")||t.includes("language")?{question_type:"language_proficiency",keywords:this.extractLanguageKeywords(t),confidence:.7,language:t.includes("deutsch")?"de":"en",expected_format:"selection"}:t.includes("jahr")||t.includes("year")||t.includes("erfahrung")||t.includes("experience")?{question_type:"years_experience",keywords:[],confidence:.6,language:t.includes("jahr")?"de":"en",expected_format:"number"}:{question_type:"general",keywords:[],confidence:.3,language:"en",expected_format:"text"}}extractLanguageKeywords(e){let t={deutsch:"German",german:"German",english:"English",englisch:"English",french:"French",franz\u00F6sisch:"French",spanish:"Spanish",spanisch:"Spanish",arabic:"Arabic",arabisch:"Arabic"},r=[];for(let[s,o]of Object.entries(t))e.includes(s)&&r.push(o);return r}clearCache(){this.classificationCache.clear(),console.log("AIQuestionClassifier: Cache cleared")}getCacheStats(){return{size:this.classificationCache.size,keys:Array.from(this.classificationCache.keys())}}},K=D;var $=class{constructor(){this.dataCache=new Map}async getRelevantData(e,t){if(!e||!t)return console.log("AISmartDataRetriever: Missing classification or resumeId"),null;let r="".concat(t,"_").concat(e.question_type,"_").concat(e.keywords.join(","));if(this.dataCache.has(r))return console.log("AISmartDataRetriever: Using cached data"),this.dataCache.get(r);try{console.log("AISmartDataRetriever: Retrieving data for type: ".concat(e.question_type,", keywords: ").concat(e.keywords.join(", ")));let s=null;switch(console.log('AISmartDataRetriever: Switch statement with question_type: "'.concat(e.question_type,'"')),e.question_type){case"language_proficiency":console.log("AISmartDataRetriever: Matched language_proficiency case"),s=await this.getLanguageData(t,e.keywords),console.log("AISmartDataRetriever: getLanguageData returned:",s?Object.keys(s):"null");break;case"skill_level":case"years_experience":s=await this.getSkillExperienceData(t,e.keywords);break;case"education":s=await this.getEducationData(t,e.keywords);break;case"personal":case"visa_status":s=await this.getPersonalData(t);break;case"salary":case"availability":case"notice_period":s=await this.getEmploymentData(t);break;default:console.log('AISmartDataRetriever: Hit default case for question_type: "'.concat(e.question_type,'"')),s=await this.getGeneralData(t,e.keywords)}return s&&this.dataCache.set(r,s),console.log("AISmartDataRetriever: Retrieved data:",s?Object.keys(s):"null"),s}catch(s){return console.error("AISmartDataRetriever: Error retrieving relevant data:",s),null}}async getLanguageData(e,t){try{console.log("AISmartDataRetriever: getLanguageData called with keywords:",t);let r=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/resumes/".concat(e,"/relevant-data?questionType=language_proficiency")});if(console.log("AISmartDataRetriever: API response:",r),r&&r.success&&r.relevantData){let s=r.relevantData;if(console.log("AISmartDataRetriever: languageData received:",s),t.length>0&&s.languages){let o=s.languages.filter(i=>{var a;let c=((a=i.language)==null?void 0:a.toLowerCase())||"";return t.some(n=>c.includes(n.toLowerCase())||n.toLowerCase().includes(c))});if(o.length>0)return{languages:o}}return s}return null}catch(r){return console.error("AISmartDataRetriever: Error getting language data:",r),null}}async getSkillExperienceData(e,t){try{let r=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/resumes/".concat(e,"/relevant-data?questionType=skills")});if(r&&r.success&&r.relevantData){let s=r.relevantData,o={};if(t.length>0&&s.skills){let i=s.skills.filter(c=>{var d,h;let a=((d=c.name)==null?void 0:d.toLowerCase())||"",n=((h=c.category)==null?void 0:h.toLowerCase())||"";return t.some(b=>a.includes(b.toLowerCase())||n.includes(b.toLowerCase())||b.toLowerCase().includes(a))});i.length>0&&(o.skills=i)}if(t.length>0&&s.experiences){let i=s.experiences.filter(c=>{let a=JSON.stringify(c).toLowerCase();return t.some(n=>a.includes(n.toLowerCase()))});i.length>0&&(o.experiences=i.map(c=>{var a;return{company:c.company,position:c.position,employment_period:c.employment_period,skills_acquired:c.skills_acquired||[],key_responsibilities:((a=c.key_responsibilities)==null?void 0:a.filter(n=>{var h;let d=((h=n.description)==null?void 0:h.toLowerCase())||"";return t.some(b=>d.includes(b.toLowerCase()))}))||[]}}))}return s.personal_info&&(o.personal_info={years_of_experience:s.personal_info.years_of_experience}),Object.keys(o).length>0?o:s}return null}catch(r){return console.error("AISmartDataRetriever: Error getting skill/experience data:",r),null}}async getEducationData(e,t){try{let r=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/resumes/".concat(e,"/relevant-data?questionType=education")});return r&&r.success&&r.relevantData?r.relevantData:null}catch(r){return console.error("AISmartDataRetriever: Error getting education data:",r),null}}async getPersonalData(e){try{let t=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/resumes/".concat(e,"/relevant-data?questionType=personal")});return t&&t.success&&t.relevantData?t.relevantData:null}catch(t){return console.error("AISmartDataRetriever: Error getting personal data:",t),null}}async getEmploymentData(e){try{let t=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/resumes/".concat(e,"/relevant-data?questionType=personal")});if(t&&t.success&&t.relevantData){let r=t.relevantData.personal_info||{};return{personal_info:{salary:r.salary,location:r.location,visa_required:r.visa_required,years_of_experience:r.years_of_experience}}}return null}catch(t){return console.error("AISmartDataRetriever: Error getting employment data:",t),null}}async getGeneralData(e,t){var r,s,o,i,c;try{let a=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/resumes/".concat(e,"/relevant-data?questionType=general")});if(a&&a.success&&a.relevantData){let n=a.relevantData;return{personal_info:{name:(r=n.personal_info)==null?void 0:r.name,years_of_experience:(s=n.personal_info)==null?void 0:s.years_of_experience,location:(o=n.personal_info)==null?void 0:o.location},summary:n.summary,skills:((i=n.skills)==null?void 0:i.slice(0,5))||[],experiences:((c=n.experiences)==null?void 0:c.slice(0,2))||[]}}return null}catch(a){return console.error("AISmartDataRetriever: Error getting general data:",a),null}}generateFallbackResponse(e,t=null){if(!t||!Array.isArray(t)||t.length===0)return null;switch(console.log("AISmartDataRetriever: Generating fallback response for:",e.question_type),e.question_type){case"language_proficiency":if(t.includes("Gut"))return"Gut";if(t.includes("Verhandlungssicher"))return"Verhandlungssicher";if(t.includes("Good"))return"Good";if(t.includes("Intermediate"))return"Intermediate";break;case"years_experience":return"5";case"skill_level":if(t.includes("Intermediate"))return"Intermediate";if(t.includes("Good"))return"Good";if(t.includes("Mittel"))return"Mittel";break;case"visa_status":if(t.includes("No"))return"No";if(t.includes("Nein"))return"Nein";break}return t.length>1?t[1]:t[0]}clearCache(){this.dataCache.clear(),console.log("AISmartDataRetriever: Cache cleared")}getCacheStats(){return{size:this.dataCache.size,keys:Array.from(this.dataCache.keys())}}},z=$;var M=class{constructor(e=null){this.userId=e,this.user_data=null,this.formatted_text=null,this.aiSettingsManager=new Y,this.settingsLoadPromise=null,this.questionClassifier=new K(this.aiSettingsManager),this.smartDataRetriever=new z,e&&(this.settingsLoadPromise=this.aiSettingsManager.loadAISettings(e))}async setUserId(e){this.userId=e,e&&(this.settingsLoadPromise=this.aiSettingsManager.loadAISettings(e),await this.settingsLoadPromise)}async ensureSettingsLoaded(){this.settingsLoadPromise&&(await this.settingsLoadPromise,this.settingsLoadPromise=null)}setModel(e){if(e&&typeof e=="string"){let t=this.aiSettingsManager.getCurrentSettings(),r=k(v({},t),{model:e});this.aiSettingsManager.setSettings(r),console.log("AIQuestionAnswerer: Model overridden to: ".concat(e))}}async setUserContext(e,t=null){try{if(typeof e=="object"&&e!==null)this.user_data=e,this.formatted_text=t||this.formatUserDataAsText(),console.log("User context set with structured data");else if(typeof e=="string")this.user_data=null,this.formatted_text=e,console.log("User context set with formatted text only");else throw new Error("Invalid user data format");return console.log("User context set successfully"),{success:!0}}catch(r){return console.error("Error in setUserContext:",r),{success:!1,error:r.message}}}async answerQuestion(e,t=null,r=null,s=null){var o,i,c;try{await this.ensureSettingsLoaded(),console.log("AIQuestionAnswerer: Processing question: ".concat(e));let a=null,n=null;try{a=await this.questionClassifier.classifyQuestion(e),console.log("AIQuestionAnswerer: Question classified as:",a)}catch(l){console.error("AIQuestionAnswerer: Classification failed, using fallback:",l),a={question_type:"general",keywords:[],confidence:.3}}if(s&&a)try{n=await this.smartDataRetriever.getRelevantData(a,s),console.log("AIQuestionAnswerer: Retrieved relevant data:",n?Object.keys(n):"null")}catch(l){console.error("AIQuestionAnswerer: Smart data retrieval failed:",l)}let d=this.getDirectAnswer(e,n);if(d)return console.log("AIQuestionAnswerer: Found direct answer:",d),t&&Array.isArray(t)&&t.length>0?{success:!0,answer:this.matchToOption(d,t)}:{success:!0,answer:d};if(!n||Object.keys(n).length===0){console.log("AIQuestionAnswerer: No relevant data found, trying intelligent fallback");let l=this.smartDataRetriever.generateFallbackResponse(a,t);if(l)return console.log("AIQuestionAnswerer: Using intelligent fallback answer:",l),{success:!0,answer:l}}if(r){let l=!1;if(typeof r=="function"?l=await r():r&&r.value!==void 0?l=r.value:l=!!r,l)return console.log("AIQuestionAnswerer: Stop requested before AI processing"),{success:!1,stopped:!0}}let h=this.buildSmartPrompt(e,t,n,a);console.log("=== SMART PROMPT BEING SENT ==="),console.log(h),console.log("=== END SMART PROMPT ===");let b=this.aiSettingsManager.getTokenAnalysis({prompt:h});console.log("Token Analysis:",b);let f=await this.aiSettingsManager.callAIWithStop({prompt:h,stream:!1},r);if(f&&f.stopped)return{success:!1,stopped:!0};let p="";if(f!=null&&f.response?p=f.response.trim():(c=(i=(o=f==null?void 0:f.choices)==null?void 0:o[0])==null?void 0:i.message)!=null&&c.content?p=f.choices[0].message.content.trim():(console.warn("AIQuestionAnswerer: Unexpected AI response format:",f),p=""),console.log("AIQuestionAnswerer: Raw AI response:",p),a.question_type==="years_experience"&&/^\d+$/.test(p)){let l=parseInt(p);l<5&&(p="5",console.log("AIQuestionAnswerer: Enforced minimum 5 years for experience question, was: ".concat(l)))}return t&&Array.isArray(t)&&t.length>0&&(p=this.matchToOption(p,t)),{success:!0,answer:p||"Information not available"}}catch(a){console.error("AIQuestionAnswerer: Error in answerQuestion:",a);let n="Information not available";return classification&&t&&(n=this.smartDataRetriever.generateFallbackResponse(classification,t)),!n&&t&&Array.isArray(t)&&t.length>0&&(n=t.length>1?t[1]:t[0]),console.log("AIQuestionAnswerer: Using fallback answer:",n),{success:!1,answer:n,error:a.message}}}detectQuestionType(e){let t=e.toLowerCase();return t.includes("level of")||t.includes("proficiency in")||t.includes("fluent in")?"language_level":t.includes("skill")||t.includes("experience")||t.includes("years")||t.includes("technology")||t.includes("programming")||t.includes("language")||t.includes("c++")||t.includes("python")||t.includes("java")?"skills":t.includes("education")||t.includes("degree")||t.includes("study")||t.includes("university")||t.includes("college")?"education":t.includes("language")||t.includes("speak")||t.includes("fluent")?"languages":t.includes("certification")||t.includes("certified")?"certifications":t.includes("name")||t.includes("email")||t.includes("phone")||t.includes("contact")||t.includes("location")?"personal":t.includes("visa")||t.includes("sponsorship")||t.includes("work permit")?"visa":t.includes("salary")||t.includes("compensation")||t.includes("pay")||t.includes("expectation")?"salary":t.includes("notice")||t.includes("period")||t.includes("availability")||t.includes("start date")?"notice":"general"}getDirectAnswer(e,t=null){var o;if(t){let i=e.toLowerCase();if(t.languages&&(i.includes("level of")||i.includes("proficiency"))){for(let c of["german","english","french","arabic","spanish"])if(i.includes(c)){let a=t.languages.find(n=>{var d;return((d=n.language)==null?void 0:d.toLowerCase())===c});if(a)return a.proficiency||"Unknown"}}if(t.personal_info){if(i.includes("email")||i.includes("e-mail"))return t.personal_info.email||null;if(i.includes("phone")||i.includes("telephone")||i.includes("mobile"))return t.personal_info.phone||null;if(i.includes("name"))return t.personal_info.name||null;if(i.includes("location")||i.includes("address"))return t.personal_info.location||null;if(i.includes("citizenship"))return t.personal_info.citizenship||null;if(i.includes("visa")||i.includes("sponsorship"))return t.personal_info.visa_required||null;if(i.includes("salary")||i.includes("compensation")||i.includes("pay"))return t.personal_info.salary||null}}if(!((o=this.user_data)!=null&&o.personal_information))return null;let r=this.user_data.personal_information,s=e.toLowerCase();return s.includes("email")||s.includes("e-mail")?r.email||null:s.includes("phone")||s.includes("mobile")||s.includes("telefon")?(r.phone_prefix?"".concat(r.phone_prefix).concat(r.phone):r.phone)||null:s.includes("first name")||s.includes("vorname")?r.name||null:s.includes("last name")||s.includes("surname")||s.includes("nachname")?r.surname||null:s.includes("country")&&!s.includes("code")?r.country||null:this.isNoticePeriodOrStartDateQuestion(e)?s.includes("notice period")||s.includes("k\xFCndigungsfrist")||s.includes("kuendigungsfrist")?s.includes("monate")||s.includes("deutsch")?"2 Monate":"2 months":this.calculateDateTwoMonthsFromNow():null}buildSmartPrompt(e,t,r,s){let o;r&&Object.keys(r).length>0?(o=this.formatRelevantDataAsText(r),console.log("AIQuestionAnswerer: Using focused relevant data for prompt")):(o="No specific relevant data available in resume.",console.log("AIQuestionAnswerer: No relevant data - using fallback prompt"));let i='You are a job applicant filling out a job application form. Answer questions based on your resume information in first person (as "I" not "he/she").\n\nRELEVANT RESUME DATA:\n'.concat(o,"\n\nQUESTION: ").concat(e,'\n\nIMPORTANT GENERAL RULES:\n- Answer as the job applicant (use "I", "my", "me" - NOT "he", "she", "Sami", or third person)\n- Be concise and direct\n- Only provide the specific information requested\n- Do not mention your name unless explicitly asked');switch(s.question_type){case"years_experience":i+='\n\nIMPORTANT RULES FOR YEARS OF EXPERIENCE:\n- If asked for years of experience, provide ONLY a number between 5-99\n- MINIMUM is always 5 years - never return 0, 1, 2, 3, or 4\n- Do NOT include words like "years", "Jahre", or descriptions\n- Calculate based on work experience and skill level\n- If no specific experience found, default to 5 years minimum\n- Example: "5" not "5 years" or "5 Jahre"';break;case"language_proficiency":i+="\n\nIMPORTANT RULES FOR LANGUAGE PROFICIENCY:\n- Choose the most accurate proficiency level based on resume data\n- If no specific language data available, choose a realistic favorable level\n- Common levels: Beginner, Intermediate, Advanced, Professional, Native";break;case"skill_level":i+="\n\nIMPORTANT RULES FOR SKILL LEVELS:\n- Base skill level on experience with the technology/tool\n- If no specific experience found, choose a moderate favorable level\n- Consider years of experience and project involvement";break}return t&&Array.isArray(t)&&t.length>0&&(i+="\n\nAvailable Options: ".concat(JSON.stringify(t),"\n\nIMPORTANT: You MUST choose EXACTLY ONE option from the list above. Your answer should match one of the options EXACTLY as written.")),i+="\n\nANSWER:",i}buildEnhancedPrompt(e,t,r=null){let s;r&&Object.keys(r).length>0?(s=this.formatRelevantDataAsText(r),console.log("Using relevant data sections for prompt")):(s=this.formatUserDataAsText(),console.log("Using full resume for prompt (no relevant data available)"));let o='You are a job applicant filling out a job application form. Answer questions based on your resume information in first person (as "I" not "he/she").\n\nMY RESUME:\n'.concat(s,"\n\nQUESTION: ").concat(e,'\n\nIMPORTANT GENERAL RULES:\n- Answer as the job applicant (use "I", "my", "me" - NOT "he", "she", "Sami", or third person)\n- Be concise and direct\n- Only provide the specific information requested\n- Do not mention your name unless explicitly asked');if(this.isDecimalNumberQuestion(e)&&(o+='\n\nIMPORTANT RULES FOR DECIMAL NUMBERS:\n- If asked for a decimal number, provide ONLY a decimal number (e.g., "3.5", "2.0", "1.2")\n- Do NOT include explanations, descriptions, or additional text\n- The number should be greater than 0.0 as requested\n- Example: "3.0" not "3.0 years" or explanations'),this.isYearsOfExperienceQuestion(e)&&(o+='\n\nIMPORTANT RULES FOR YEARS OF EXPERIENCE:\n- If asked for years of experience, provide ONLY a number between 5-99\n- MINIMUM is always 5 years - never return 0, 1, 2, 3, or 4\n- Do NOT include words like "years", "Jahre", or descriptions\n- For skill levels: Beginner=5, Intermediate=7, Advanced=10+ years\n- Calculate based on work experience and skill level\n- If no specific experience found, default to 5 years minimum\n- If unclear or no data, always answer at least 5 years to maximize job prospects\n- Example: "5" not "5 years" or "5 Jahre"\n- Better to overestimate than underestimate for better interview chances'),this.isDegreeQuestion(e)&&(o+='\n\nIMPORTANT RULES FOR DEGREE QUESTIONS:\n- Check education section carefully for exact degree matches\n- "Bachelor" = "Bachelor of Engineering" or "Bachelor of Science"\n- "Master" = "Master of Engineering" or "Master of Science"\n- Answer "Ja" for German forms, "Yes" for English forms\n- If degree is found, answer positively\n- Look for exact degree names in education section'),this.isSkillLevelQuestion(e)&&(o+="\n\nIMPORTANT RULES FOR SKILL LEVEL QUESTIONS:\n- Check the skills section for exact skill matches\n- Look for the skill name and its level (Beginner/Intermediate/Advanced)\n- Be precise about the level mentioned in the resume\n- Do not guess or estimate levels"),this.isNoticePeriodOrStartDateQuestion(e)){let i=this.calculateDateTwoMonthsFromNow();o+='\n\nIMPORTANT RULES FOR NOTICE PERIOD AND START DATE:\n- For notice period questions, answer "2 months" or "2 Monate"\n- For starting date questions, provide the exact date: '.concat(i,'\n- Use the format DD.MM.YYYY for German forms (e.g., "15.03.2024")\n- Use the format MM/DD/YYYY for English forms (e.g., "03/15/2024")\n- Current calculated start date (2 months from today): ').concat(i,"\n- Be consistent with the date format expected by the form")}if(t&&Array.isArray(t)&&t.length>0){let i=t.map(c=>'"'.concat(c,'"')).join(", ");o+="\n\nAvailable Options: [".concat(i,"]\n\nIMPORTANT: You MUST choose EXACTLY ONE option from the list above. Your answer should match one of the options EXACTLY as written.")}return o+="\n\nANSWER:",o}isDecimalNumberQuestion(e){let t=e.toLowerCase();return t.includes("decimal")||t.includes("dezimal")||t.includes("gr\xF6\xDFer als 0.0")||t.includes("greater than 0.0")||t.includes("decimal zahl")||t.includes("decimal number")}isYearsOfExperienceQuestion(e){let t=e.toLowerCase();return t.includes("jahre")||t.includes("years")||t.includes("experience")||t.includes("erfahrung")||t.includes("how many")||t.includes("wie viele")}isDegreeQuestion(e){let t=e.toLowerCase();return t.includes("bachelor")||t.includes("master")||t.includes("degree")||t.includes("abschluss")||t.includes("bildung")||t.includes("education")}isSkillLevelQuestion(e){let t=e.toLowerCase();return t.includes("level")||t.includes("niveau")||t.includes("skill")||t.includes("f\xE4higkeit")||t.includes("experience with")||t.includes("erfahrung mit")}isNoticePeriodOrStartDateQuestion(e){let t=e.toLowerCase();return t.includes("notice period")||t.includes("starting date")||t.includes("start date")||t.includes("startdatum")||t.includes("beginn")||t.includes("beginnen")||t.includes("k\xFCndigungsfrist")||t.includes("kuendigungsfrist")||t.includes("verf\xFCgbar")||t.includes("verfuegbar")||t.includes("available")||t.includes("wann k\xF6nnen sie")||t.includes("when can you")||t.includes("earliest start")||t.includes("fr\xFChester beginn")||t.includes("fruehester beginn")}calculateDateTwoMonthsFromNow(){let e=new Date;e.setMonth(e.getMonth()+2);let t=String(e.getDate()).padStart(2,"0"),r=String(e.getMonth()+1).padStart(2,"0"),s=e.getFullYear();return"".concat(t,".").concat(r,".").concat(s)}formatUserDataAsText(){return this.formatted_text?this.formatted_text:this.user_data?typeof this.user_data=="string"?this.user_data:this.formatObject(this.user_data,0):"No user data available."}formatRelevantDataAsText(e){let t="";for(let r in e)if(Object.prototype.hasOwnProperty.call(e,r)){let s=e[r];s&&Object.keys(s).length>0&&(t+="\n".concat(r.toUpperCase().replace(/_/g," "),":\n"),t+=this.formatObject(s,1))}return t||"No relevant data available."}formatObject(e,t=0){let r="  ".repeat(t),s="";if(typeof e=="object"&&e!==null)if(Array.isArray(e))for(let o of e)typeof o=="object"&&o!==null?s+="".concat(r,"- ").concat(this.formatObject(o,t+1)):s+="".concat(r,"- ").concat(o,"\n");else for(let[o,i]of Object.entries(e)){let c=o.toUpperCase().replace(/_/g," ");s+="".concat(r).concat(c,":\n"),typeof i=="object"&&i!==null?s+=this.formatObject(i,t+1):s+="".concat(r,"  ").concat(i,"\n")}else s+="".concat(r).concat(e,"\n");return s}matchToOption(e,t){if(!e||!t||t.length===0)return(t==null?void 0:t.length)>0?t[0]:"Not available";if(this.isDecimalNumberQuestion(e)||/^\d+\.\d+$/.test(e.trim())){let r=e.match(/\d+\.\d+/);if(r){let s=r[0];for(let o of t)if(o.includes(s))return o;return s}}if(this.isYearsOfExperienceQuestion(e)||/^\d+$/.test(e.trim())){let r=e.match(/\d+/);if(r){let s=parseInt(r[0]);this.isYearsOfExperienceQuestion(e)&&s<5&&(s=5);let o=s.toString();for(let i of t)if(i.includes(o))return i;return o}}if(this.isNoticePeriodOrStartDateQuestion(e)){if(e.toLowerCase().includes("2 months")||e.toLowerCase().includes("2 monate")){for(let s of t)if(s.toLowerCase().includes("2 months")||s.toLowerCase().includes("2 monate")||s.toLowerCase().includes("2 month"))return s;return e}let r=e.match(/\d{1,2}[.\/-]\d{1,2}[.\/-]\d{4}/);if(r){let s=r[0];for(let o of t)if(o.includes(s))return o;return s}}for(let r of t)if(r.toLowerCase()===e.toLowerCase())return r;for(let r of t)if(r.toLowerCase().includes(e.toLowerCase())||e.toLowerCase().includes(r.toLowerCase()))return r;if(e.toLowerCase().includes("germany")||e.toLowerCase().includes("deutsch")){for(let r of t)if(r.toLowerCase().includes("deutsch")||r.toLowerCase().includes("germany")||r.includes("+49"))return r}return t.length>1?t[1]:t[0]}async testConnection(){try{return await this.ensureSettingsLoaded(),(await this.aiSettingsManager.testConnection()).success}catch(e){return console.error("Error testing AI connection:",e),!1}}getAISettings(){return this.aiSettingsManager.getCurrentSettings()}clear(){this.user_data=null,this.formatted_text=null,this.aiSettingsManager.clear(),this.settingsLoadPromise=null}},O=M;var N=class extends w{constructor(){super()}debugLog(e,...t){console.log("[ApplicationTracker] ".concat(e),...t)}errorLog(e,t){console.error("[ApplicationTracker] ".concat(e,":"),t)}async createSuccessfulApplication(e,t,r,s,o=[]){try{this.debugLog("Creating successful application record...");let i=await this.createOrFindCompany(e),c=await this.createOrFindJob(e,i.id),a=await this.createApplication({user_id:t.id,job_id:c.id,ai_settings_id:r.id,resume_id:s,status:"applied",notes:null});return this.debugLog("Successful application saved: ".concat(a.id)),o&&o.length>0&&(this.debugLog("Saving ".concat(o.length," questions/answers for application ").concat(a.id)),await this.saveQuestionsAnswers(a.id,o)),a}catch(i){throw this.errorLog("Error creating successful application:",i),i}}async saveQuestionsAnswers(e,t){try{for(let r of t){let s={application_id:e,question:r.question,answer:r.answer,question_type:r.question_type||"general",ai_model_used:r.ai_model_used||"unknown",confidence_score:r.confidence_score||.95,is_skipped:r.is_skipped||!1},o=await chrome.runtime.sendMessage({action:"apiRequest",method:"POST",url:"/questions-answers",data:s});o&&o.success?this.debugLog("Question/answer saved: ".concat(o.question_answer.id)):this.debugLog("Failed to save question/answer: ".concat(o==null?void 0:o.error))}this.debugLog("Successfully saved ".concat(t.length," questions/answers for application ").concat(e))}catch(r){this.errorLog("Error saving questions/answers:",r)}}async createOrFindCompany(e){try{if(this.debugLog("Creating/finding company for job info:",e),this.debugLog("Job info type:",typeof e),this.debugLog("Job info keys:",e?Object.keys(e):"null"),!e||!e.company)throw this.debugLog("Job info or company name is missing:",{jobInfo:e,company:e==null?void 0:e.company}),new Error("Company name is required");let t=await this.findCompanyByName(e.company);if(t)return this.debugLog("Found existing company: ".concat(t.name)),t;let r={name:e.company,industry:null,size:null,location:e.location,website:null,linkedin_url:null};this.debugLog("Creating new company with data:",r);let s=await this.createCompany(r);if(!s)throw new Error("Failed to create company - API request returned null");return this.debugLog("Created new company: ".concat(s.name)),s}catch(t){throw this.errorLog("Error creating/finding company:",t),t}}async createOrFindJob(e,t){var r;try{if(!e.title)throw new Error("Job title is required");if(e.jobId){let o=await this.findJobByPlatformId("linkedin",e.jobId);if(o)return this.debugLog("Found existing job: ".concat(o.title)),o}let s=await this.createJob({company_id:t,title:e.title,location:e.location,is_remote:((r=e.remoteType)==null?void 0:r.toLowerCase().includes("remote"))||!1,job_type:this.normalizeJobType(e.jobType),platform:"linkedin",platform_job_id:e.jobId,job_url:window.location.href,job_description:e.description,applicant_count:this.parseApplicantCount(e.applicantCount),posted_date:this.parsePostedDate(e.postedDate),status:"active"});if(!s)throw new Error("Failed to create job - API request returned null");return this.debugLog("Created new job: ".concat(s.title)),s}catch(s){throw this.errorLog("Error creating/finding job:",s),s}}async createApplication(e){try{this.debugLog("Creating application with data:",e);let t=await chrome.runtime.sendMessage({action:"apiRequest",method:"POST",url:"/applications",data:e});if(this.debugLog("Application creation response:",t),t&&t.success)return this.debugLog("Application created: ".concat(t.application.id)),t.application;if(t!=null&&t.error&&t.error.includes('duplicate key value violates unique constraint "applications_user_id_job_id_key"')){this.debugLog("Application already exists, fetching existing application...");let r=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/applications/user/".concat(e.user_id,"/job/").concat(e.job_id)});if(r&&r.success)return this.debugLog("Found existing application: ".concat(r.application.id)),r.application;throw this.debugLog("Failed to fetch existing application, falling back to error"),new Error((t==null?void 0:t.error)||"Failed to create application")}else throw this.debugLog("Failed to create application: ".concat(t==null?void 0:t.error)),new Error((t==null?void 0:t.error)||"Failed to create application")}catch(t){throw this.errorLog("Error creating application:",t),t}}async findCompanyByName(e){try{this.debugLog("Searching for company by name:",e);let t=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/companies/name/".concat(encodeURIComponent(e))});return this.debugLog("Company search response:",t),t!=null&&t.success?t.company:null}catch(t){return this.debugLog("Error finding company:",t),null}}async createCompany(e){try{this.debugLog("Sending API request to create company:",e);let t=await chrome.runtime.sendMessage({action:"apiRequest",method:"POST",url:"/companies",data:e});if(this.debugLog("Company creation API response:",t),!t)throw new Error("No response received from API");if(!t.success)throw new Error("API request failed: ".concat(t.error||"Unknown error"));if(!t.company)throw new Error("API returned success but no company data");return t.company}catch(t){throw this.errorLog("Error creating company:",t),t}}async findJobByPlatformId(e,t){try{this.debugLog("Searching for job by platform ID:",{platform:e,platformJobId:t});let r=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/jobs/platform/".concat(e,"/").concat(t)});return this.debugLog("Job search response:",r),r!=null&&r.success?r.job:null}catch(r){return this.debugLog("Error finding job:",r),null}}async createJob(e){try{this.debugLog("Sending API request to create job:",e);let t=await chrome.runtime.sendMessage({action:"apiRequest",method:"POST",url:"/jobs",data:e});if(this.debugLog("Job creation API response:",t),!t)throw new Error("No response received from API");if(!t.success)throw new Error("API request failed: ".concat(t.error||"Unknown error"));if(!t.job)throw new Error("API returned success but no job data");return t.job}catch(t){throw this.errorLog("Error creating job:",t),t}}normalizeJobType(e){if(!e)return"full-time";let t=e.toLowerCase();return t.includes("full")?"full-time":t.includes("part")?"part-time":t.includes("contract")?"contract":t.includes("intern")?"internship":"full-time"}parseApplicantCount(e){if(!e)return 0;let t=e.match(/(\d+)/);return t?parseInt(t[1]):0}parsePostedDate(e){if(!e)return new Date;let t=new Date;if(e.includes("today"))return t;if(e.includes("yesterday")){let s=new Date(t);return s.setDate(s.getDate()-1),s}let r=e.match(/(\d+)\s*days?\s*ago/);if(r){let s=parseInt(r[1]),o=new Date(t);return o.setDate(o.getDate()-s),o}return t}getCurrentApplicationData(){return{application:this.currentApplication,questionsAnswers:this.questionsAnswers}}},re=new N,V=re;var j=class extends w{static async closeForm(e=!1){var t,r;try{let s=document.querySelector('button[aria-label="Dismiss"]');if(s||(s=document.querySelector('button[aria-label="Close"]')||document.querySelector('button[aria-label="Cancel"]')||document.querySelector("button[data-test-modal-close-btn]")),s){if(s.click(),await this.wait(),e){let o=document.querySelector('button[data-control-name="save_application_btn"]');o&&(o.click(),this.debugLog("Closed form and saved application"))}else{let o=document.querySelector('button[data-control-name="discard_application_confirm_btn"]')||document.querySelector("button[data-test-dialog-secondary-btn]");o&&(o.click(),this.debugLog("Closed form and discarded application"))}await this.wait()}}catch(s){this.errorLog("Error closing form",s);try{let o=document.querySelectorAll("button");for(let i of o)(i.textContent.toLowerCase().includes("close")||i.textContent.toLowerCase().includes("cancel")||(t=i.getAttribute("aria-label"))!=null&&t.toLowerCase().includes("close")||(r=i.getAttribute("aria-label"))!=null&&r.toLowerCase().includes("dismiss"))&&(i.click(),await this.wait(500))}catch(o){this.errorLog("Failed final attempt to close form",o)}}}static async clickNextPage(){try{await this.wait();let e=document.querySelector('button[aria-label="Continue to next step"]');e&&(e.click(),this.debugLog("Clicked on next page button"))}catch(e){this.errorLog("Error clicking on next page button",e)}}static async clickPreviousPage(){try{await this.wait();let e=document.querySelector('button[aria-label="Back to previous step"]');e&&(e.click(),this.debugLog("Clicked on previous page button"))}catch(e){this.errorLog("Error clicking on previous page button",e)}}static async clickReviewApplication(){try{await this.wait();let e=document.querySelector('button[aria-label="Review your application"]');e&&(e.click(),this.debugLog("Clicked on review button"))}catch(e){this.errorLog("Error clicking on review button",e)}}static async clickSubmitApplication(){try{await this.wait();let e=document.querySelector('button[aria-label="Submit application"]');e&&(e.click(),this.debugLog("Clicked on submit button"))}catch(e){this.errorLog("Error clicking on submit button",e)}}static async clickDoneAfterSubmit(){try{let e=document.querySelector('button[aria-label="Done"]');if(!e&&(e=document.querySelector(".artdeco-modal__actionbar button.artdeco-button--primary"),e)){let t=e.querySelector("span.artdeco-button__text");!t||t.textContent.trim()!=="Done"?e=null:this.debugLog("Found Done button in modal actionbar")}if(!e){let t=document.querySelectorAll("button.artdeco-button.artdeco-button--primary");for(let r of t){let s=r.querySelector("span.artdeco-button__text");if(s&&s.textContent.trim()==="Done"){e=r,this.debugLog("Found Done button by primary button search");break}}}e?(this.debugLog("Clicking Done button to complete submission"),e.click(),this.debugLog("Successfully clicked Done button")):this.debugLog("Done button not found - may not be required for this form type")}catch(e){this.errorLog("Error clicking on Done button",e)}}static async clickDismissAfterSubmit(){try{let e=document.querySelector('button[aria-label="Dismiss"]');if(e||(e=document.querySelector("button[data-test-modal-close-btn]")),!e){let t=document.querySelectorAll("button.artdeco-button--circle.artdeco-modal__dismiss");for(let r of t)if(r.querySelector('svg use[href="#close-medium"]')){e=r;break}}e?(e.click(),this.debugLog("Clicked on Dismiss button")):this.debugLog("Dismiss button not found")}catch(e){this.errorLog("Error clicking on Dismiss button",e)}}static async findReviewButton(){try{return document.querySelector('button[aria-label="Review your application"]')}catch(e){return this.errorLog("Error finding review button",e),null}}static async findNextButton(){try{return document.querySelector('button[aria-label="Continue to next step"]')}catch(e){return this.errorLog("Error finding next button",e),null}}static async findSubmitButton(){try{return document.querySelector('button[aria-label="Submit application"]')}catch(e){return this.errorLog("Error finding submit button",e),null}}static async findDoneButton(){try{let e=document.querySelector('button[aria-label="Done"]');if(!e){let t=document.querySelectorAll("button.artdeco-button");for(let r of t){let s=r.querySelector("span.artdeco-button__text");if(s&&s.textContent.trim()==="Done"){e=r;break}}}return e}catch(e){return this.errorLog("Error finding done button",e),null}}static async processForm(e,t=null){let r=null;try{this.debugLog("Starting form processing"),this.currentJobInfo=t,this.collectedQuestionsAnswers=[],this.lastProgressTime=Date.now(),this.noProgressCount=0,this.debugLog("Job info stored for successful completion"),r=setTimeout(async()=>{this.debugLog("Form processing timeout reached - closing form automatically");try{await this.closeForm(!1),this.debugLog("Form closed due to timeout")}catch(i){this.errorLog("Error closing form after timeout:",i)}typeof e=="object"&&e.hasOwnProperty("value")&&(e.value=!0)},3*60*1e3);let s=!1,o=!1;for(;!o;){if(typeof e=="function"?o=await e():e&&e.value!==void 0?o=e.value:o=!!e,o){this.debugLog("Stop requested during form processing");break}try{if(await this.findReviewButton()){this.debugLog("Found review button"),this.lastProgressTime=Date.now(),this.noProgressCount=0;let d=setTimeout(()=>{this.debugLog("Review processing timeout reached"),e.value=!0},1*60*1e3);if(document.querySelectorAll("div.fb-dash-form-element").length>0&&!s){this.debugLog("Found questions on current page, processing before review");let f=await this.processFormQuestions(e);if(f.stopped){this.debugLog("Form questions processing stopped by user");break}f.success||this.debugLog("Form questions processing failed"),s=!0,this.debugLog("Current page form questions processed, will not reprocess")}else s?this.debugLog("Skipping redundant form processing for current page"):this.debugLog("No form questions found on current page");if(await this.clickReviewApplication(),await this.wait(2e3),typeof e=="function"?o=await e():e&&e.value!==void 0?o=e.value:o=!!e,o){this.debugLog("Stop requested after clicking review");break}if(document.querySelectorAll("div.fb-dash-form-element").length>0){this.debugLog("Found questions on review page");let f=await this.processFormQuestions(e);if(f.stopped){this.debugLog("Review questions processing stopped by user");break}f.success||this.debugLog("Review questions processing failed")}else this.debugLog("No questions found on review page");await this.clickSubmitApplication(),await this.wait(2e3),await this.clickDoneAfterSubmit(),await this.wait(1e3),await this.clickDismissAfterSubmit(),await this.saveSuccessfulApplication(),this.debugLog("Clicked submit button after review"),clearTimeout(d);break}if(document.querySelectorAll("div.fb-dash-form-element").length>0&&!s){this.debugLog("Found form questions, processing..."),this.lastProgressTime=Date.now(),this.noProgressCount=0;let d=await this.processFormQuestions(e);if(d.stopped){this.debugLog("Form questions processing stopped by user");break}d.success||this.debugLog("Form questions processing failed"),s=!0,this.debugLog("Form questions processed")}if(await this.findNextButton()){if(this.debugLog("Found next button, moving to next page"),this.lastProgressTime=Date.now(),this.noProgressCount=0,await this.clickNextPage(),await this.wait(2e3),typeof e=="function"?o=await e():e&&e.value!==void 0?o=e.value:o=!!e,o){this.debugLog("Stop requested after navigation");break}s=!1;continue}if(await this.findSubmitButton()){if(this.debugLog("Found submit button, submitting application"),this.lastProgressTime=Date.now(),this.noProgressCount=0,typeof e=="function"?o=await e():e&&e.value!==void 0?o=e.value:o=!!e,o){this.debugLog("Stop requested before final submit");break}await this.clickSubmitApplication(),await this.wait(2e3),await this.clickDoneAfterSubmit(),await this.wait(1e3),await this.clickDismissAfterSubmit(),await this.saveSuccessfulApplication();break}if(this.debugLog("No navigation buttons found, waiting..."),await this.wait(1e3),!this.lastProgressTime)this.lastProgressTime=Date.now(),this.noProgressCount=0;else if(this.noProgressCount=(this.noProgressCount||0)+1,this.noProgressCount>=30){this.debugLog("No progress for 30 seconds - closing form automatically");try{await this.closeForm(!1),this.debugLog("Form closed due to no progress")}catch(d){this.errorLog("Error closing form after no progress:",d)}break}}catch(i){this.errorLog("Error in form processing loop",i),await this.wait(2e3)}}return clearTimeout(r),this.lastProgressTime=null,this.noProgressCount=0,this.debugLog("Form processing completed successfully"),!0}catch(s){this.errorLog("Error processing form",s),r&&clearTimeout(r),this.lastProgressTime=null,this.noProgressCount=0,this.debugLog("Closing form due to critical processing error");try{await this.closeForm(!1),this.debugLog("Form closed due to processing error")}catch(o){this.errorLog("Error closing form after processing error:",o)}return!1}}static async saveSuccessfulApplication(){var e;try{if(this.debugLog("Saving successful application"),!this.currentJobInfo){this.debugLog("No job info available, skipping application save");return}let t=await chrome.storage.local.get(["currentUser"]);if(!t.currentUser){this.debugLog("No current user found, skipping application save");return}let r=window.currentAiSettings;if(!r){this.debugLog("No AI settings found, skipping application save");return}let s=await chrome.storage.local.get(["currentResumeId"]);if(!s.currentResumeId){this.debugLog("No current resume ID found, skipping application save");return}await V.createSuccessfulApplication(this.currentJobInfo,t.currentUser,r,s.currentResumeId,this.collectedQuestionsAnswers||[]),this.debugLog("Successful application saved with ".concat(((e=this.collectedQuestionsAnswers)==null?void 0:e.length)||0," questions/answers"))}catch(t){this.errorLog("Error saving successful application:",t)}}static shouldSkipQuestion(e){let t=e.toLowerCase();return this.shouldSkipQuestionDirect(t)}static shouldSkipQuestionDirect(e){return!!(e.includes("email")||e.includes("e-mail")||e.includes("e-mail-adresse")||["phone","mobile","cell","telephone","handy","telefon","handynummer","handynumer","mobilnummer","handy","tel\xE9fono","m\xF3vil","celular","tel\xE9fono m\xF3vil","t\xE9l\xE9phone","portable","mobile","t\xE9l\xE9phone portable","telefono","cellulare","mobile","telefono cellulare"].some(i=>e.includes(i))||["country code","area code","phone prefix","calling code","prefix","landsvorwahl","vorwahl","l\xE4ndercode","vorwahl","c\xF3digo de pa\xEDs","c\xF3digo de \xE1rea","prefijo","c\xF3digo","indicatif pays","indicatif","pr\xE9fixe","indicatif t\xE9l\xE9phonique","prefisso","codice paese","prefisso telefonico"].some(i=>e.includes(i))||["contact information","contact details","contact","kontaktinformation","kontaktdaten","kontakt","informaci\xF3n de contacto","datos de contacto","contacto","coordonn\xE9es","informations de contact","contact","informazioni di contatto","dati di contatto","contatto"].some(i=>e.includes(i))||["first name","last name","full name","name","given name","family name","vorname","nachname","vollst\xE4ndiger name","name","familienname","nombre","apellido","nombre completo","primer nombre","segundo nombre","pr\xE9nom","nom","nom complet","nom de famille","nome","cognome","nome completo","nome di battesimo"].some(i=>e.includes(i)))}static getHardcodedAnswer(e,t=[]){let r=e.toLowerCase();if(r.includes("comfortable commuting")||r.includes("commute to this")||r.includes("willing to commute")||r.includes("able to commute")||r.includes("commuting to this job")||r.includes("travel to this location")||r.includes("comfortable traveling")||r.includes("commut")&&r.includes("location")||r.includes("travel")&&r.includes("job")&&r.includes("location")){for(let s of t)if(s.toLowerCase().trim()==="yes"||s.toLowerCase().trim()==="ja"||s.toLowerCase().trim()==="oui"||s.toLowerCase().trim()==="s\xED")return s.trim();return"Yes"}return null}static async processFormQuestions(e=null){try{this.debugLog("Processing form questions");let t=document.querySelectorAll("div.fb-dash-form-element");this.debugLog("Found ".concat(t.length," form elements"));for(let r of t){if(e){let s=!1;if(typeof e=="function"?s=await e():e&&e.value!==void 0?s=e.value:s=!!e,s)return this.debugLog("Stop requested during form questions processing"),{stopped:!0}}try{let s=r.querySelector("legend span.fb-dash-form-element__label span")||r.querySelector("label");if(!s){this.debugLog("No label found for form element");continue}let o=s.textContent.trim();if(o=o.replace(/(.+?)\1/,"$1"),this.debugLog("Processing question: ".concat(o)),this.shouldSkipQuestion(o)){this.debugLog("Skipping prefilled question: ".concat(o));continue}let i=r.querySelector("input, textarea, select");if(!i){this.debugLog("No input field found for question");continue}let c=[];switch(i.tagName.toLowerCase()){case"input":i.type==="radio"&&r.querySelectorAll('input[type="radio"]').forEach(d=>{let h=r.querySelector('label[for="'.concat(d.id,'"]'));h&&c.push(h.textContent.trim())});break;case"select":c=Array.from(i.options).map(n=>n.text.trim());break}c.length>0&&this.debugLog('Available options for "'.concat(o,'":'));let a=await this.answerQuestion(o,c,i,r,e);if(a.stopped)return this.debugLog("Form questions processing stopped by user"),{stopped:!0};a.success||this.debugLog("Failed to answer question: ".concat(o))}catch(s){this.errorLog("Error processing form element: ".concat(s.message),s)}}return this.debugLog("Completed processing form questions"),{success:!0}}catch(t){return this.errorLog("Error in processFormQuestions",t),{success:!1}}}static async answerQuestion(e,t=[],r,s,o=null){var i;try{let c=this.getHardcodedAnswer(e,t);if(c){this.debugLog("Using hardcoded answer for question: ".concat(e," -> ").concat(c)),await this.fillFieldWithAnswer(r,s,c,e);try{let g=this.detectQuestionType(e),_=this.shouldSkipQuestion(e);this.collectedQuestionsAnswers.push({question:e,answer:c,question_type:g,ai_model_used:"hardcoded",confidence_score:1,is_skipped:_}),this.debugLog("Collected hardcoded question/answer (".concat(this.collectedQuestionsAnswers.length," total)"))}catch(g){this.errorLog("Error collecting hardcoded question/answer:",g)}await this.wait(1500);let l=await this.handleValidationErrorsWithRetry(e,t,r,s,o,null,c);return l.stopped?{stopped:!0}:{success:l.success}}let a=null;window.currentAiSettings&&(a=window.currentAiSettings,this.debugLog("Using AI settings from current settings:",a));let n=null;try{let l=await chrome.storage.local.get(["currentUser"]);l.currentUser&&l.currentUser.id&&(n=l.currentUser.id,this.debugLog("Using user ID: ".concat(n)))}catch(l){this.errorLog("Error getting current user:",l)}let d=new O(n);if(a){let l={ai_provider:a.provider,ai_model:a.model,apiKey:a.apiKey,is_default:!0};d.aiSettingsManager.setSettings(l),this.debugLog("Set AI settings directly: provider=".concat(l.ai_provider,", model=").concat(l.ai_model))}this.debugLog("Answering question: ".concat(e)),this.debugLog("Available options:",t);try{let l=await chrome.storage.local.get(["userResumeData","userResumeText","userResumeType"]);l&&(l.userResumeData||l.userResumeText)?(this.debugLog("Found user resume data in storage"),l.userResumeData?(await d.setUserContext(l.userResumeData,l.userResumeText),this.debugLog("Set structured user context in AI instance")):(await d.setUserContext(l.userResumeText),this.debugLog("Set text user context in AI instance"))):this.debugLog("No user resume found in storage")}catch(l){this.errorLog("Error loading user resume from storage:",l)}let h=null;try{this.debugLog("=== RESUME ID RETRIEVAL DEBUG ===");let l=await chrome.storage.local.get(["currentResumeId"]);if(this.debugLog("Resume result from storage:",l),l.currentResumeId)h=l.currentResumeId,this.debugLog("Using resume ID from storage: ".concat(h));else if(this.debugLog("No resume ID in storage, fetching from database..."),n){this.debugLog("Fetching default resume for user: ".concat(n));let g=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/users/".concat(n,"/resumes/default")});this.debugLog("Default resume API response:",g),this.debugLog("Response success:",g==null?void 0:g.success),this.debugLog("Response resume:",g==null?void 0:g.resume),this.debugLog("Response error:",g==null?void 0:g.error),g&&g.success&&g.resume?(h=g.resume.id,this.debugLog("Got resume ID from database: ".concat(h)),await chrome.storage.local.set({currentResumeId:h}),this.debugLog("Stored resume ID in storage for future use")):(this.debugLog("Failed to get default resume from database:",g),this.debugLog("Response details:",{success:g==null?void 0:g.success,error:g==null?void 0:g.error,status:g==null?void 0:g.status,message:g==null?void 0:g.message}))}else this.debugLog("No user ID available for resume fetch")}catch(l){this.errorLog("Error getting current resume ID:",l)}let b=await d.answerQuestion(e,t,o,h);if(b.stopped)return this.debugLog("Question answering stopped by user"),{stopped:!0};if(!b.success||!b.answer)return this.debugLog("No answer generated for question"),{success:!1};let f=b.answer;this.debugLog("AI Answer: ".concat(f));try{let l=this.detectQuestionType(e),g=((i=window.currentAiSettings)==null?void 0:i.model)||"unknown",_=this.shouldSkipQuestion(e);this.collectedQuestionsAnswers.push({question:e,answer:f,question_type:l,ai_model_used:g,confidence_score:.95,is_skipped:_}),this.debugLog("Collected question/answer (".concat(this.collectedQuestionsAnswers.length," total)"))}catch(l){this.errorLog("Error collecting question/answer:",l)}switch(r.tagName.toLowerCase()){case"input":switch(r.type){case"text":case"tel":case"email":case"number":r.getAttribute("role")==="combobox"&&r.getAttribute("aria-autocomplete")==="list"?(this.debugLog("Detected typeahead field for question: ".concat(e)),await this.handleTypeaheadField(r,f,s)):(r.value=f,r.dispatchEvent(new Event("input",{bubbles:!0})));break;case"radio":let l=s.querySelectorAll('input[type="radio"]');for(let g of l){let _=s.querySelector('label[for="'.concat(g.id,'"]'));if(_&&_.textContent.trim()===f){g.click(),this.debugLog("Selected radio option: ".concat(f));break}}break;case"checkbox":r.checked=!0,r.dispatchEvent(new Event("change",{bubbles:!0}));break}break;case"textarea":r.value=f,r.dispatchEvent(new Event("input",{bubbles:!0}));break;case"select":for(let l=0;l<r.options.length;l++)if(r.options[l].text.trim()===f){r.selectedIndex=l,r.dispatchEvent(new Event("change",{bubbles:!0})),this.debugLog("Selected option: ".concat(f));break}break}await this.wait(1500);let p=await this.handleValidationErrorsWithRetry(e,t,r,s,o,h,f);return p.stopped?{stopped:!0}:{success:p.success}}catch(c){return this.errorLog('Error answering question "'.concat(e,'"'),c),{success:!1}}}static async detectValidationError(e){try{let t=['.artdeco-inline-feedback--error[role="alert"]',".artdeco-inline-feedback.artdeco-inline-feedback--error",'[role="alert"][class*="error"]',".fb-dash-form-element__error-text",".error-message"],r=null;for(let s of t)if(r=e.querySelector(s),r){this.debugLog("Found error element with selector: ".concat(s));break}if(!r){let s=e.parentElement;if(s){for(let o of t)if(r=s.querySelector(o),r){this.debugLog("Found error element in parent with selector: ".concat(o));break}}}if(r){let s=[".artdeco-inline-feedback__message",".error-message-text",".fb-dash-form-element__error-text",'span[class*="message"]','span[class*="error"]'],o="";for(let i of s){let c=r.querySelector(i);if(c&&c.textContent.trim()){o=c.textContent.trim();break}}if(!o&&r.textContent.trim()&&(o=r.textContent.trim()),o)return this.debugLog("Validation error detected: ".concat(o)),{hasError:!0,errorMessage:o,errorType:"validation"}}return{hasError:!1}}catch(t){return this.errorLog("Error detecting validation error:",t),{hasError:!1}}}static async handleValidationErrorsWithRetry(e,t,r,s,o,i,c){try{let n=0;for(;n<3;){let d=await this.detectValidationError(s);if(!d.hasError)return this.debugLog("No validation errors detected, field filled successfully"),{success:!0};if(n++,this.debugLog("Validation error attempt ".concat(n,"/3: ").concat(d.errorMessage)),n>=3){this.errorLog("Max retries (3) reached for question: ".concat(e)),this.errorLog("Final validation error: ".concat(d.errorMessage)),this.debugLog("Closing form due to validation retry exhaustion");try{await this.closeForm(!1),this.debugLog("Form closed due to validation failure")}catch(g){this.errorLog("Error closing form after validation failure:",g)}return{success:!1,formClosed:!0}}if(o){let g=!1;if(typeof o=="function"?g=await o():o&&o.value!==void 0?g=o.value:g=!!o,g)return this.debugLog("Stop requested during validation retry"),{stopped:!0}}let h=this.createRetryPrompt(e,d.errorMessage,c,n);this.debugLog("Retry attempt ".concat(n," with enhanced prompt: ").concat(h));let b=await this.getCurrentUserId(),f=new O(b);if(window.currentAiSettings){let g={ai_provider:window.currentAiSettings.provider,ai_model:window.currentAiSettings.model,apiKey:window.currentAiSettings.apiKey,is_default:!0};f.aiSettingsManager.setSettings(g)}await this.loadUserContextForAI(f);let p=await f.answerQuestion(h,t,o,i);if(p.stopped)return{stopped:!0};if(!p.success||!p.answer){this.debugLog("Retry attempt ".concat(n," failed - no answer generated"));continue}let l=p.answer;this.debugLog("Retry attempt ".concat(n," - AI answer: ").concat(l)),await this.fillFieldWithAnswer(r,s,l,e),await this.wait(1500)}return{success:!1}}catch(a){this.errorLog("Error in validation retry logic:",a),this.debugLog("Closing form due to validation retry error");try{await this.closeForm(!1),this.debugLog("Form closed due to validation retry error")}catch(n){this.errorLog("Error closing form after validation retry error:",n)}return{success:!1,formClosed:!0}}}static createRetryPrompt(e,t,r,s){let o="",i=t.toLowerCase();if(i.includes("zwischen")||i.includes("between")){let a=t.match(/(\d+)\s*(?:und|and|to|-)\s*(\d+)/);a&&(o="Provide only a number between ".concat(a[1]," and ").concat(a[2],"."))}if((i.includes("whole")||i.includes("ganze")||i.includes("integer"))&&(o+=" Use only whole numbers (no decimals or text)."),i.includes("decimal number")&&(o+=" Provide a decimal number (with decimals allowed)."),i.includes("larger than")||i.includes("greater than")||i.includes("above")){let a=t.match(/(?:larger than|greater than|above)\s*(\d+(?:\.\d+)?)/i);a&&(o+=" The number must be larger than ".concat(a[1],"."))}if(i.includes("smaller than")||i.includes("less than")||i.includes("below")){let a=t.match(/(?:smaller than|less than|below)\s*(\d+(?:\.\d+)?)/i);a&&(o+=" The number must be smaller than ".concat(a[1],"."))}(i.includes("positive")||i.includes("larger than")&&i.includes("0"))&&(o+=" Provide only positive numbers (greater than 0)."),(i.includes("format")||i.includes("invalid"))&&(o+=" Follow the exact format required."),(i.includes("date")||i.includes("datum"))&&(o+=" Provide date in the correct format."),(i.includes("email")||i.includes("e-mail"))&&(o+=" Provide a valid email format."),o||(o="Follow this requirement: ".concat(t));let c="".concat(o," Answer this question with ONLY the required value, no extra text: ").concat(e);return s>1&&(c+=' (Previous answer "'.concat(r,'" was rejected - provide a different answer that meets the requirements)')),c}static async getCurrentUserId(){var e;try{return((e=(await chrome.storage.local.get(["currentUser"])).currentUser)==null?void 0:e.id)||null}catch(t){return this.errorLog("Error getting current user ID:",t),null}}static async loadUserContextForAI(e){try{let t=await chrome.storage.local.get(["userResumeData","userResumeText","userResumeType"]);t&&(t.userResumeData||t.userResumeText)&&(t.userResumeData?await e.setUserContext(t.userResumeData,t.userResumeText):await e.setUserContext(t.userResumeText))}catch(t){this.errorLog("Error loading user context for AI:",t)}}static async fillFieldWithAnswer(e,t,r,s){try{switch(e.value="",e.dispatchEvent(new Event("input",{bubbles:!0})),await this.wait(300),e.tagName.toLowerCase()){case"input":switch(e.type){case"text":case"tel":case"email":case"number":e.getAttribute("role")==="combobox"&&e.getAttribute("aria-autocomplete")==="list"?await this.handleTypeaheadField(e,r,t):(e.value=r,e.dispatchEvent(new Event("input",{bubbles:!0})),e.dispatchEvent(new Event("change",{bubbles:!0})));break;case"radio":let o=t.querySelectorAll('input[type="radio"]');for(let i of o){let c=t.querySelector('label[for="'.concat(i.id,'"]'));if(c&&c.textContent.trim()===r){i.click(),this.debugLog("Selected radio option: ".concat(r));break}}break;case"checkbox":e.checked=!0,e.dispatchEvent(new Event("change",{bubbles:!0}));break}break;case"textarea":e.value=r,e.dispatchEvent(new Event("input",{bubbles:!0})),e.dispatchEvent(new Event("change",{bubbles:!0}));break;case"select":for(let o=0;o<e.options.length;o++)if(e.options[o].text.trim()===r){e.selectedIndex=o,e.dispatchEvent(new Event("change",{bubbles:!0})),this.debugLog("Selected option: ".concat(r));break}break}}catch(o){this.errorLog('Error filling field with retry answer "'.concat(r,'":'),o)}}static detectQuestionType(e){let t=e.toLowerCase();return t.includes("level of")||t.includes("proficiency in")||t.includes("fluent in")?"language_level":t.includes("skill")||t.includes("experience")||t.includes("years")||t.includes("technology")||t.includes("programming")||t.includes("language")||t.includes("c++")||t.includes("python")||t.includes("java")?"skills":t.includes("education")||t.includes("degree")||t.includes("study")||t.includes("university")||t.includes("college")?"education":t.includes("language")||t.includes("speak")||t.includes("fluent")?"languages":t.includes("notice")||t.includes("period")||t.includes("availability")||t.includes("start date")?"notice":t.includes("salary")||t.includes("compensation")||t.includes("pay")?"salary":t.includes("visa")||t.includes("citizenship")||t.includes("work permit")?"visa":t.includes("certification")||t.includes("certificate")?"certifications":"general"}static async checkEasyApplyLimit(){var e,t;try{this.debugLog("Checking for Easy Apply daily limit message..."),this.debugLog("Checking cached daily limit info...");try{let o=await chrome.storage.local.get(["dailyLimitReached","dailyLimitMessage","dailyLimitTime"]);if(o.dailyLimitReached){let i=new Date(o.dailyLimitTime),c=new Date;if(i.toDateString()===c.toDateString())return this.debugLog("Easy Apply daily limit detected from cached info (previously detected today)"),{hasLimit:!0,message:o.dailyLimitMessage,type:"cached_daily_limit"};await chrome.storage.local.remove(["dailyLimitReached","dailyLimitMessage","dailyLimitTime"]),this.debugLog("Cleared old daily limit info from previous day")}else this.debugLog("No cached daily limit info found, checking DOM...")}catch(o){this.debugLog("Error checking cached daily limit info:",o)}this.debugLog("Checking DOM for daily limit messages...");let r=document.querySelectorAll('.artdeco-inline-feedback--error[role="alert"]');this.debugLog("Found ".concat(r.length," error elements in DOM"));for(let o of r){let i=o.querySelector(".artdeco-inline-feedback__message");if(i){let c=i.textContent.trim();if(this.debugLog("Found error message: ".concat(c)),c.toLowerCase().includes("easy apply limit")||c.toLowerCase().includes("daily submissions")||c.toLowerCase().includes("reached today's")||c.toLowerCase().includes("continue applying tomorrow"))return this.debugLog("Easy Apply daily limit detected from DOM!"),{hasLimit:!0,message:c,type:"dom_daily_limit"}}}let s=document.querySelector(".jobs-s-apply button");if(s&&s.disabled){this.debugLog("Easy Apply button is disabled - may indicate limit reached");let o=(e=s.closest(".jobs-s-apply"))==null?void 0:e.querySelector(".artdeco-inline-feedback--error");if(o){let i=(t=o.querySelector(".artdeco-inline-feedback__message"))==null?void 0:t.textContent.trim();if(i)return{hasLimit:!0,message:i,type:"button_disabled"}}return{hasLimit:!0,message:"Easy Apply button is disabled",type:"button_disabled"}}return this.debugLog("No Easy Apply limit detected (checked both cached info and DOM)"),{hasLimit:!1}}catch(r){return this.errorLog("Error checking Easy Apply limit:",r),{hasLimit:!1}}}static async handleTypeaheadField(e,t,r){try{this.debugLog("Handling typeahead field with answer: ".concat(t)),e.value="",e.focus(),e.value=t,e.dispatchEvent(new Event("input",{bubbles:!0})),e.dispatchEvent(new Event("keyup",{bubbles:!0})),e.dispatchEvent(new KeyboardEvent("keydown",{key:t.slice(-1),bubbles:!0})),e.dispatchEvent(new Event("focus",{bubbles:!0})),e.dispatchEvent(new Event("click",{bubbles:!0})),this.debugLog("Waiting for suggestions to appear...");let s=0,o=null;for(;s<5&&!o;){await this.wait(300+s*200);let i=e.getAttribute("aria-owns")||e.getAttribute("aria-controls");if(i&&(o=document.getElementById(i)),o||(o=r.querySelector('[role="listbox"]')||r.parentElement.querySelector('[role="listbox"]')||document.querySelector('[role="listbox"]')),o&&o.querySelectorAll('[role="option"]').length>0)break;o=null,s++,s<5&&(this.debugLog("Attempt ".concat(s,": No suggestions found, retrying...")),e.dispatchEvent(new Event("input",{bubbles:!0})))}if(o){this.debugLog("Found suggestions container");let i=o.querySelectorAll('[role="option"]');if(this.debugLog("Found ".concat(i.length," suggestions")),i.length>0){let c=null,a=t.toLowerCase();for(let n of i){let d=n.textContent.trim().toLowerCase();if(d.startsWith(a)&&(d.includes("germany")||d.includes("united states")||d.includes("united kingdom")||d.includes("canada")||d.includes("france")||d.includes("netherlands")||d.includes("switzerland")||d.includes("austria"))){c=n;break}}if(!c){for(let n of i)if(n.textContent.trim().toLowerCase().startsWith(a)){c=n;break}}if(c||(c=i[0]),c){let n=c.textContent.trim();return this.debugLog("Selecting suggestion: ".concat(n)),c.scrollIntoView({behavior:"smooth",block:"nearest"}),c.style.backgroundColor="#e6f3ff",c.click(),c.dispatchEvent(new MouseEvent("click",{bubbles:!0})),await this.wait(500),this.debugLog('Input field value after selection: "'.concat(e.value,'"')),e.dispatchEvent(new Event("change",{bubbles:!0})),e.dispatchEvent(new Event("blur",{bubbles:!0})),{success:!0,selectedValue:n}}}}else this.debugLog("No suggestions container found, falling back to normal input"),e.dispatchEvent(new Event("change",{bubbles:!0})),e.dispatchEvent(new Event("blur",{bubbles:!0}));return{success:!0}}catch(s){return this.errorLog("Error handling typeahead field:",s),e.value=t,e.dispatchEvent(new Event("input",{bubbles:!0})),e.dispatchEvent(new Event("change",{bubbles:!0})),{success:!1,error:s.message}}}},C=j;function m(u,e=null){let t=new Date().toISOString().split("T")[1],r="[EasyJob Debug ".concat(t,"] ").concat(u);e?console.log(r,e):console.log(r)}function y(u,e="info"){m("Status Update: ".concat(e," - ").concat(u)),typeof chrome<"u"&&chrome.runtime&&chrome.runtime.sendMessage({action:"STATUS_UPDATE",text:u,status:e})}async function L(u){if(typeof window<"u"&&window.isStopRequested&&window.isStopRequested())return m("Auto-apply process stopped by immediate request"),y("Auto-apply process stopped","info"),typeof chrome<"u"&&chrome.runtime&&chrome.runtime.sendMessage({action:"PROCESS_COMPLETE"}),!0;if(!u)return m("Auto-apply process stopped by user (local check)"),y("Auto-apply process stopped","info"),typeof chrome<"u"&&chrome.runtime&&chrome.runtime.sendMessage({action:"PROCESS_COMPLETE"}),!0;try{if(typeof chrome<"u"&&chrome.runtime){let e=await chrome.runtime.sendMessage({action:"getAutoApplyState"});if(e&&e.success&&!e.isRunning)return m("Auto-apply process stopped by user (background check)"),y("Auto-apply process stopped","info"),chrome.runtime.sendMessage({action:"PROCESS_COMPLETE"}),!0}}catch(e){m("Failed to check background state, using local state",e)}return!1}typeof chrome<"u"&&chrome.runtime&&chrome.runtime.onMessage.addListener((u,e,t)=>{if(u.action==="START_AUTO_APPLY")return startAutoApplyProcess().then(()=>{t({success:!0})}).catch(r=>{console.error("Error in auto-apply process:",r),t({success:!1,error:r.message})}),!0});var U=class extends w{static async processJobPage(e,t,r,s){this.debugLog("Processing page ".concat(e,"/").concat(t)),y("Processing page ".concat(e," of ").concat(t),"info");let o=await E.getListOfJobsOnPage(r);m("Found ".concat(o.length," jobs on page ").concat(e));let i=0,c=5;for(let a of o){if(await L(s))return this.debugLog("Stop requested during job processing - breaking job loop"),!1;try{let n=await Q.processJob(a,s);if(n==="disabled_button"){if(i++,this.debugLog("Consecutive disabled buttons: ".concat(i,"/").concat(c)),i>=c){this.debugLog("Hit threshold of ".concat(c," consecutive disabled buttons - checking for daily limit"));let d=await C.checkEasyApplyLimit();if(d.hasLimit){this.debugLog("Daily limit detected after ".concat(i," disabled buttons: ").concat(d.message)),y("Auto-apply completed - Daily limit reached","info");try{await chrome.storage.local.set({dailyLimitReached:!0,dailyLimitMessage:d.message,dailyLimitTime:new Date().toISOString()})}catch(h){this.debugLog("Error storing daily limit info:",h)}typeof window<"u"&&window.requestAutoApplyStop&&window.requestAutoApplyStop("daily_limit_reached");try{await chrome.runtime.sendMessage({action:"stopAutoApply",reason:"daily_limit_reached"})}catch(h){this.debugLog("Error sending stop message to background:",h)}return this.debugLog("Auto-apply stopped gracefully due to daily limit detected from consecutive disabled buttons"),!1}else this.debugLog("".concat(i," consecutive disabled buttons but no daily limit detected - continuing"))}}else if(n==="success")i=0,this.debugLog("Job processed successfully");else{if(n==="daily_limit_reached")return!1;if(n==="stopped")return!1;i=0}}catch(n){if(i=0,await L(s))return this.debugLog("Stop requested after job error - breaking job loop"),!1;this.debugLog("Error in job processing, continuing to next job:",n.message)}if(await L(s))return this.debugLog("Stop requested after job processing - breaking job loop"),!1}if(e<t)if(m("Finished processing page ".concat(e,", navigating to next page...")),y("Moving to page ".concat(e+1," of ").concat(t,"..."),"info"),await E.goToNextPage())m("Successfully navigated to page ".concat(e+1));else return m("Failed to navigate to next page or reached last page"),await E.isOnLastPage()?(m("Confirmed: reached the last page"),y("Reached the last page of results","info")):(m("Navigation failed but not on last page - stopping process"),y("Failed to navigate to next page - stopping","error")),!1;else m("Finished processing last page (".concat(e,"/").concat(t,")"));return!0}},Q=class extends w{static async processJob(e,t){try{let r=await S.getJobClickableElement(e);if(await S.clickOnJob(r),m("Clicked on job"),await S.scrollDownToLoadNextJob(e),m("Scrolled to job"),await L(t))return"stopped";let s=await S.isEasyButtonAvailable();if(m("Is Easy Apply button available:",s),!s){m("Job already applied or button disabled. Checking if this might be due to daily limit...");let a=await C.checkEasyApplyLimit();if(a.hasLimit){m("Daily limit detected while checking disabled button: ".concat(a.message)),y("Auto-apply completed - Daily limit reached","info");try{await chrome.storage.local.set({dailyLimitReached:!0,dailyLimitMessage:a.message,dailyLimitTime:new Date().toISOString()})}catch(n){m("Error storing daily limit info:",n)}typeof window<"u"&&window.requestAutoApplyStop&&window.requestAutoApplyStop("daily_limit_reached");try{await chrome.runtime.sendMessage({action:"stopAutoApply",reason:"daily_limit_reached"})}catch(n){m("Error sending stop message to background:",n)}return m("Auto-apply stopped gracefully due to daily limit detected from disabled button"),"daily_limit_reached"}return m("Job already applied (not due to daily limit). Skipping..."),y("Job already applied. Skipping...","info"),"disabled_button"}let o=await R.getAllJobInfo();if(!o)return m("ERROR: Job info is null, cannot proceed"),"no_job_info";window.currentUserData&&await chrome.storage.local.set({currentUser:window.currentUserData});try{if(!(await chrome.storage.local.get(["currentResumeId"])).currentResumeId&&window.currentUserData){let n=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/users/".concat(window.currentUserData.id,"/resumes/default")});n&&n.success&&n.resume&&await chrome.storage.local.set({currentResumeId:n.resume.id})}}catch(a){m("Error storing resume ID:",a)}let i=await C.checkEasyApplyLimit();if(i.hasLimit){m("Easy Apply limit reached: ".concat(i.message)),y("Auto-apply completed - Daily limit reached","info");try{await chrome.storage.local.set({dailyLimitReached:!0,dailyLimitMessage:i.message,dailyLimitTime:new Date().toISOString()})}catch(a){m("Error storing daily limit info:",a)}typeof window<"u"&&window.requestAutoApplyStop&&window.requestAutoApplyStop("daily_limit_reached");try{await chrome.runtime.sendMessage({action:"stopAutoApply",reason:"daily_limit_reached"})}catch(a){m("Error sending stop message to background:",a)}m("Auto-apply stopped gracefully due to daily limit");return}if(await S.clickEasyApply(),await new Promise(a=>setTimeout(a,3e3)),await L(t))return this.debugLog("Stop requested before form processing"),"stopped";console.log("=== CALLING PROCESS FORM ==="),console.log("About to call processForm with jobInfo:",o),console.log("Current URL before form processing:",window.location.href),console.log("=== END CALLING PROCESS FORM ===");let c=async()=>await L(t);return await C.processForm(c,o),m("Processed application form"),"success"}catch(r){return console.error("Error processing job:",r),m("Error processing job:",{error:r.message,stack:r.stack}),y("Error processing job. Continuing to next one...","error"),"error"}}},F=U;var A=!1,J=!1;window.requestAutoApplyStop=function(u="manual"){m("Immediate stop requested: ".concat(u)),J=!0,A=!1};window.isStopRequested=function(){return J};async function W(){try{if(await L(A))return;let u=document.querySelector(".scaffold-layout.jobs-search-two-pane__layout");if(!u){y("Could not find jobs list. Please make sure you are on LinkedIn jobs page.","error");return}let e=await E.getTotalJobsSearchCount(u);y("Found ".concat(e," jobs to process"),"info");let t=await E.getAvailablePages(u,e);for(let r=1;r<=t;r++){if(await L(A))return;if(await F.processJobPage(r,t,u,A)===!1){m("Page processing returned false - stopping auto-apply");break}if(await L(A)){m("Stop requested after page processing - exiting main loop");return}}await L(A)||(y("Auto-apply process completed!","success"),chrome&&chrome.runtime&&chrome.runtime.sendMessage({action:"PROCESS_COMPLETE"}))}catch(u){console.error("Error in auto-apply process:",u),y("Error in auto-apply process","error")}}typeof chrome>"u"||!chrome.runtime?console.log("Chrome extension APIs not available - script may be running in wrong context"):chrome.runtime.onMessage.addListener((u,e,t)=>((async()=>{try{u.action==="startAutoApply"?A?t({success:!1,message:"Auto apply already running"}):(A=!0,J=!1,window.currentUserData=u.userData,window.currentAiSettings=u.aiSettings,W(),t({success:!0,message:"Auto apply started"})):u.action==="stopAutoApply"?(window.requestAutoApplyStop("background_request"),t({success:!0,message:"Auto apply stopped"})):u.action==="GET_STATE"?t({isRunning:A}):u.action==="START_AUTO_APPLY"?A?t({success:!1,message:"Auto apply already running"}):(A=!0,W(),t({success:!0,message:"Auto apply started"})):u.action==="STOP_AUTO_APPLY"?(A=!1,t({success:!0,message:"Auto apply stopped"})):t({success:!1,message:"Unknown action"})}catch(r){console.error("Error handling message in content script:",r),t({success:!1,error:r.message})}})(),!0));
