var F=Object.defineProperty,J=Object.defineProperties;var Q=Object.getOwnPropertyDescriptors;var $=Object.getOwnPropertySymbols;var G=Object.prototype.hasOwnProperty,Y=Object.prototype.propertyIsEnumerable;var j=(i,e,t)=>e in i?F(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t,L=(i,e)=>{for(var t in e||(e={}))G.call(e,t)&&j(i,t,e[t]);if($)for(var t of $(e))Y.call(e,t)&&j(i,t,e[t]);return i},A=(i,e)=>J(i,Q(e));var v=class{static async wait(e=1e3){await new Promise(t=>setTimeout(t,e))}static debugLog(e){console.log("[".concat(this.constructor.name,"] ").concat(e))}static errorLog(e,t){console.error("[".concat(this.constructor.name,"] ").concat(e,":"),t)}},b=v;var I=class extends b{static async getTotalJobsSearchCount(e){try{await this.wait();let t=e.querySelector(".jobs-search-results-list__subtitle");if(t){let o=t.textContent.trim(),r=parseInt(o.split(" ")[0].replace(/,/g,"").replace(/\./g,"").replace(/\+/g,""));return this.debugLog("Total jobs found: ".concat(r)),r}else return this.debugLog("No results found"),0}catch(t){return this.errorLog("Error fetching total jobs count",t),0}}static async getAvailablePages(e,t){try{await this.wait();let o=e.querySelector('ul[class*="jobs-search-pagination__pages"]');if(!o)return this.debugLog("Pagination list not found."),0;let r=o.querySelectorAll("li");if(r.length===0)return this.debugLog("No pagination items found."),0;let n=r[r.length-1];this.debugLog("Last page: ".concat(n));let s=Math.ceil(t/25);return this.debugLog("Total pages available: ".concat(s)),s}catch(o){return this.errorLog("Error fetching available pages",o),0}}static async getListOfJobsOnPage(e){try{await this.wait();let t=e.querySelector(".scaffold-layout__list");if(!t)return this.debugLog("Jobs container not found."),[];let o=t.querySelectorAll("li[class*='scaffold-layout__list-item']");return this.debugLog("Found ".concat(o.length," jobs on this page.")),Array.from(o)}catch(t){return this.errorLog("Error fetching list of jobs",t),[]}}static async goToNextPage(){try{await this.wait();let e=document.querySelector('button[aria-label="View next page"]')||document.querySelector("button.jobs-search-pagination__button--next")||document.querySelector('button[aria-label="Next"]');return e&&!e.disabled?(this.debugLog("Found next page button, clicking..."),e.click(),this.debugLog("Clicked next page button"),await this.wait(3e3),!0?(this.debugLog("Successfully navigated to next page"),!0):(this.debugLog("Jobs failed to load on next page"),!1)):(this.debugLog("Next page button not found or disabled - likely on last page"),!1)}catch(e){return this.errorLog("Error navigating to next page",e),!1}}static async isOnLastPage(){try{let e=document.querySelector('button[aria-label="View next page"]')||document.querySelector("button.jobs-search-pagination__button--next");return!e||e.disabled}catch(e){return this.errorLog("Error checking if on last page",e),!0}}},k=I;var T=class extends b{static async getJobClickableElement(e){try{await this.wait();let t=e.querySelector("a");return t||(this.debugLog("Could not find clickable element for job"),null)}catch(t){return this.errorLog("Error fetching clickable element",t),null}}static async scrollDownToLoadNextJob(e){try{await this.wait(),e.scrollIntoView({behavior:"smooth",block:"center"}),this.debugLog("Scrolled down to load next job")}catch(t){this.errorLog("Error scrolling down to load next job",t)}}static async clickOnJob(e){try{e.click(),this.debugLog("Clicked on job element")}catch(t){this.debugLog("Could not click on job element",t)}}static async isEasyButtonAvailable(){try{return document.querySelector(".jobs-s-apply button")?(this.debugLog("found easy apply button"),!0):(this.debugLog("easy apply button not found"),!1)}catch(e){return console.error("easy apply button not found error",e),!1}}static async clickEasyApply(){try{let e=document.querySelector(".jobs-s-apply button");if(e)return e.click(),this.debugLog("Clicked on easy apply button"),!0;throw new Error("Easy apply button not found")}catch(e){throw this.errorLog("Error clicking on easy apply button",e),e}}},S=T;var x=class extends b{static async getJobId(){try{let e=new URLSearchParams(window.location.search).get("currentJobId");return e?(this.debugLog("Found job ID: ".concat(e)),e):(this.debugLog("Job ID not found in URL"),null)}catch(e){return this.errorLog("Error getting job ID",e),null}}static async getJobTitle(){try{let e=document.querySelector(".job-details-jobs-unified-top-card__job-title h1");if(e){let t=e.textContent.trim();return this.debugLog("Found job title: ".concat(t)),t}return this.debugLog("Job title not found"),null}catch(e){return this.errorLog("Error getting job title",e),null}}static async getCompanyName(){try{let e=document.querySelector(".job-details-jobs-unified-top-card__company-name a");if(e){let t=e.textContent.trim();return this.debugLog("Found company name: ".concat(t)),t}return this.debugLog("Company name not found"),null}catch(e){return this.errorLog("Error getting company name",e),null}}static async getLocation(){try{let e=document.querySelector(".job-details-jobs-unified-top-card__tertiary-description-container .tvm__text");if(e){let t=e.textContent.trim();return this.debugLog("Found location: ".concat(t)),t}return this.debugLog("Location not found"),null}catch(e){return this.errorLog("Error getting location",e),null}}static async getJobType(){try{let e=document.querySelectorAll("button.job-details-preferences-and-skills .job-details-preferences-and-skills__pill");if(e.length>1){let o=e[1].querySelectorAll("span");if(o.length>0){let r=o[0].querySelectorAll("span");if(r.length>0){let n=r[0].textContent.trim();if(n)return this.debugLog("Found jobType type: ".concat(n)),n}}}return this.debugLog("jobType type not found"),null}catch(e){return this.errorLog("Error getting jobType type",e),null}}static async getRemoteType(){try{let e=document.querySelectorAll("button.job-details-preferences-and-skills .job-details-preferences-and-skills__pill");if(e.length>0){let o=e[0].querySelectorAll("span");if(o.length>0){let r=o[0].querySelectorAll("span");if(r.length>0){let n=r[0].textContent.trim();if(n)return this.debugLog("Found remote type: ".concat(n)),n}}}return this.debugLog("Remote type not found"),null}catch(e){return this.errorLog("Error getting remote type",e),null}}static async getJobDescription(){try{let e=document.querySelector(".jobs-description__content");if(e){let t=e.textContent.trim();return this.debugLog("Found job description"),t}return this.debugLog("Job description not found"),null}catch(e){return this.errorLog("Error getting job description",e),null}}static async getApplicantCount(){try{let e=document.querySelectorAll(".job-details-jobs-unified-top-card__tertiary-description-container .tvm__text"),t=e.length>0?e[e.length-1]:null;if(t){let o=t.textContent.trim();return this.debugLog("Found applicant count: ".concat(o)),o}return this.debugLog("Applicant count not found"),null}catch(e){return this.errorLog("Error getting applicant count",e),null}}static async getPostedDate(){try{let e=document.querySelectorAll(".job-details-jobs-unified-top-card__tertiary-description-container .tvm__text")[2];if(e){let t=e.textContent.trim();return this.debugLog("Found posted date: ".concat(t)),t}return this.debugLog("posted date not found"),null}catch(e){return this.errorLog("Error getting applicant count",e),null}}static async getAllJobInfo(){try{let e={jobId:await this.getJobId(),title:await this.getJobTitle(),company:await this.getCompanyName(),location:await this.getLocation(),jobType:await this.getJobType(),remoteType:await this.getRemoteType(),description:await this.getJobDescription(),applicantCount:await this.getApplicantCount(),postedDate:await this.getPostedDate()};return this.debugLog("Retrieved all job information"),e}catch(e){return this.errorLog("Error getting all job information",e),null}}},C=x;var P=class{constructor(){this.currentSettings=null,this.defaultModel="qwen2.5:3b",this.settingsLoadPromise=null}async loadAISettings(e){try{if(console.log("AISettingsManager: Loading AI settings for user:",e),console.log("AISettingsManager: User ID type:",typeof e),console.log("AISettingsManager: User ID length:",e?e.length:"null"),!e||typeof e!="string"||e.length!==36)return console.error("AISettingsManager: Invalid user ID provided:",e),console.log("AISettingsManager: Returning default settings (ollama)"),this.getDefaultSettings();console.log("AISettingsManager: Making API request to load settings...");let t=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/users/".concat(e,"/ai-settings/default")});return console.log("AISettingsManager: API response received:",t),t&&t.success?(this.currentSettings=t.ai_settings,console.log("AISettingsManager: Successfully loaded AI settings:",this.currentSettings),console.log("AISettingsManager: Provider:",this.currentSettings.ai_provider),console.log("AISettingsManager: Model:",this.currentSettings.ai_model),this.currentSettings):(console.warn("AISettingsManager: No AI settings found, using default"),console.log("AISettingsManager: Response was:",t),this.getDefaultSettings())}catch(t){return console.error("AISettingsManager: Error loading AI settings:",t),this.getDefaultSettings()}}getDefaultSettings(){return{provider:"ollama",model:this.defaultModel,apiKey:null,baseUrl:"http://localhost:11434",is_default:!0}}getCurrentSettings(){return this.currentSettings||this.getDefaultSettings()}setSettings(e){this.currentSettings=e,console.log("AISettingsManager: Settings updated:",e)}getModel(){let e=this.getCurrentSettings();return e.ai_model||e.model||this.defaultModel}getProvider(){let e=this.getCurrentSettings();return e.ai_provider||e.provider||"ollama"}async getDecryptedApiKey(){let e=this.getCurrentSettings();if(e.apiKey&&e.apiKey!=="encrypted")return e.apiKey;if(e.api_key_encrypted&&e.id)try{let t=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/ai-settings/".concat(e.id,"/encrypted-key")});if(t&&t.success&&t.api_key_encrypted){let o=await chrome.runtime.sendMessage({action:"apiRequest",method:"POST",url:"/ai-settings/decrypt-api-key",data:{encryptedApiKey:t.api_key_encrypted}});if(o&&o.success)return e.apiKey=o.decryptedApiKey,o.decryptedApiKey}}catch(t){throw console.error("AISettingsManager: Error fetching/decrypting API key:",t),new Error("Failed to retrieve API key")}return null}async testConnection(){try{let e=this.getProvider();return e==="ollama"?await chrome.runtime.sendMessage({action:"testOllama"}):e==="openai"?await chrome.runtime.sendMessage({action:"testOpenAI"}):this.getCurrentSettings().apiKey?{success:!0,message:"".concat(e," settings validated")}:{success:!1,error:"API key required for ".concat(e)}}catch(e){return console.error("AISettingsManager: Error testing connection:",e),{success:!1,error:e.message}}}async callAI(e){var t,o,r;try{let n=this.getProvider(),s=this.getModel();console.log("=== AI API CALL DEBUG ==="),console.log("Provider:",n),console.log("Model:",s),console.log("Request Data:",{prompt:e.prompt,messages:e.messages,max_tokens:e.max_tokens,temperature:e.temperature,stream:e.stream});let d=0;if(e.prompt?(d=this.estimateTokens(e.prompt),console.log("Input tokens (prompt):",d)):e.messages&&(d=this.estimateTokensFromMessages(e.messages),console.log("Input tokens (messages):",d)),n==="ollama"){let u=A(L({},e),{model:s});console.log("Sending Ollama request:",u);let c=await chrome.runtime.sendMessage({action:"callOllama",endpoint:"generate",data:u});if(c.success===!1)throw new Error(c.error||"Unknown error from Ollama API");let g=this.estimateTokens(c.data.response||"");return console.log("Output tokens:",g),console.log("Total tokens:",d+g),console.log("=== END AI API CALL DEBUG ==="),c.data}else if(n==="openai"){let u=await this.getDecryptedApiKey();if(!u)throw new Error("OpenAI API key is required");let c=A(L({},e),{model:s,apiKey:u});console.log("Sending OpenAI request:",A(L({},c),{apiKey:"[REDACTED]"}));let g=await chrome.runtime.sendMessage({action:"callOpenAI",data:c});if(g.success===!1)throw new Error(g.error||"Unknown error from OpenAI API");let m=((t=g.data.usage)==null?void 0:t.completion_tokens)||0,a=((o=g.data.usage)==null?void 0:o.total_tokens)||0;return console.log("OpenAI Token Usage:",{prompt_tokens:((r=g.data.usage)==null?void 0:r.prompt_tokens)||0,completion_tokens:m,total_tokens:a}),console.log("=== END AI API CALL DEBUG ==="),g.data}else throw new Error("Provider ".concat(n," not yet implemented"))}catch(n){throw console.error("AISettingsManager: Error calling AI API:",n),n}}async callAIWithStop(e,t=null){try{let o=this.getProvider();if(o==="ollama"){let r=this.getModel(),n=A(L({},e),{model:r});return new Promise((s,d)=>{let u=null;t&&(u=setInterval(async()=>{try{let c=!1;typeof t=="function"?c=await t():t&&t.value!==void 0?c=t.value:c=!!t,c&&(console.log("Stop requested during AI API call"),u&&clearInterval(u),s({stopped:!0}))}catch(c){console.error("Error in stop check:",c)}},500)),chrome.runtime.sendMessage({action:"callOllama",endpoint:"generate",data:n},c=>{u&&clearInterval(u),chrome.runtime.lastError?d(new Error(chrome.runtime.lastError.message)):c.success===!1?d(new Error(c.error||"Unknown error from Ollama API")):s(c.data)})})}else if(o==="openai"){let r=this.getModel(),n=await this.getDecryptedApiKey();if(!n)throw new Error("OpenAI API key is required");return new Promise((s,d)=>{let u=null;t&&(u=setInterval(async()=>{try{let c=!1;typeof t=="function"?c=await t():t&&t.value!==void 0?c=t.value:c=!!t,c&&(console.log("Stop requested during OpenAI API call"),u&&clearInterval(u),s({stopped:!0}))}catch(c){console.error("Error in stop check:",c)}},500)),chrome.runtime.sendMessage({action:"callOpenAI",data:A(L({},e),{model:r,apiKey:n})},c=>{u&&clearInterval(u),chrome.runtime.lastError?d(new Error(chrome.runtime.lastError.message)):c.success===!1?d(new Error(c.error||"Unknown error from OpenAI API")):s(c.data)})})}else throw new Error("Provider ".concat(o," not yet implemented"))}catch(o){throw console.error("AISettingsManager: Error calling AI API with stop:",o),o}}async loadAvailableModels(){try{let e=this.getProvider();if(e==="ollama"){let t=await chrome.runtime.sendMessage({action:"ollamaRequest",method:"GET",url:"/api/tags"});if(t&&t.success)return t.models.map(o=>o.name);throw new Error((t==null?void 0:t.error)||"Failed to load Ollama models")}else throw new Error("Provider ".concat(e," not yet implemented"))}catch(e){throw console.error("AISettingsManager: Error loading models:",e),e}}estimateTokens(e){if(!e)return 0;let t=e.length;return Math.ceil(t/4)}estimateTokensFromMessages(e){if(!e||!Array.isArray(e))return 0;let t=0;for(let o of e)o.content&&(t+=this.estimateTokens(o.content)),t+=4;return t}getTokenAnalysis(e){let t={inputTokens:0,estimatedOutputTokens:0,maxTokens:e.max_tokens||1e3,provider:this.getProvider(),model:this.getModel()};return e.prompt?t.inputTokens=this.estimateTokens(e.prompt):e.messages&&(t.inputTokens=this.estimateTokensFromMessages(e.messages)),t.estimatedOutputTokens=Math.min(t.maxTokens,100),t}clear(){this.currentSettings=null,this.settingsLoadPromise=null}},D=P;var _=class{constructor(e=null){this.userId=e,this.user_data=null,this.formatted_text=null,this.aiSettingsManager=new D,this.settingsLoadPromise=null,e&&(this.settingsLoadPromise=this.aiSettingsManager.loadAISettings(e))}async setUserId(e){this.userId=e,e&&(this.settingsLoadPromise=this.aiSettingsManager.loadAISettings(e),await this.settingsLoadPromise)}async ensureSettingsLoaded(){this.settingsLoadPromise&&(await this.settingsLoadPromise,this.settingsLoadPromise=null)}setModel(e){if(e&&typeof e=="string"){let t=this.aiSettingsManager.getCurrentSettings(),o=A(L({},t),{model:e});this.aiSettingsManager.setSettings(o),console.log("AIQuestionAnswerer: Model overridden to: ".concat(e))}}async setUserContext(e,t=null){try{if(typeof e=="object"&&e!==null)this.user_data=e,this.formatted_text=t||this.formatUserDataAsText(),console.log("User context set with structured data");else if(typeof e=="string")this.user_data=null,this.formatted_text=e,console.log("User context set with formatted text only");else throw new Error("Invalid user data format");return console.log("User context set successfully"),{success:!0}}catch(o){return console.error("Error in setUserContext:",o),{success:!1,error:o.message}}}async answerQuestion(e,t=null,o=null,r=null){var n,s,d;try{await this.ensureSettingsLoaded(),console.log("=== AI QUESTION ANSWERING DEBUG ==="),console.log("Question:",e),console.log("Using AI model:",this.aiSettingsManager.getModel()),console.log("Options:",t),console.log("Resume ID:",r);let u=null;if(r)try{let f=this.detectQuestionType(e);console.log("Detected question type:",f);let E=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/resumes/".concat(r,"/relevant-data?questionType=").concat(f)});E&&E.success?(u=E.relevantData,console.log("Retrieved relevant data from database:",u)):console.log("No structured data found, falling back to user context")}catch(f){console.error("Error retrieving structured data:",f)}let c=this.getDirectAnswer(e,u);if(c){if(console.log("Found direct answer:",c),t&&Array.isArray(t)&&t.length>0){let f=this.matchToOption(c,t);return console.log("Matched direct answer to option:",f),console.log("=== END AI QUESTION ANSWERING DEBUG ==="),{success:!0,answer:f}}return console.log("=== END AI QUESTION ANSWERING DEBUG ==="),{success:!0,answer:c}}if(o){let f=!1;if(typeof o=="function"?f=await o():o&&o.value!==void 0?f=o.value:f=!!o,f)return console.log("Stop requested before AI processing"),console.log("=== END AI QUESTION ANSWERING DEBUG ==="),{success:!1,stopped:!0}}let g=this.buildEnhancedPrompt(e,t);console.log("=== FULL PROMPT BEING SENT ==="),console.log(g),console.log("=== END FULL PROMPT ===");let m=this.aiSettingsManager.getTokenAnalysis({prompt:g});console.log("Token Analysis:",m);let a=await this.aiSettingsManager.callAIWithStop({prompt:g,stream:!1},o);if(a&&a.stopped)return console.log("=== END AI QUESTION ANSWERING DEBUG ==="),{success:!1,stopped:!0};let p="";if(a!=null&&a.response?p=a.response.trim():(d=(s=(n=a==null?void 0:a.choices)==null?void 0:n[0])==null?void 0:s.message)!=null&&d.content?p=a.choices[0].message.content.trim():(console.warn("Unexpected AI response format:",a),p=""),console.log("Raw AI response:",p),this.isYearsOfExperienceQuestion(e)&&/^\d+$/.test(p)){let f=parseInt(p);f<5&&(p="5",console.log("Enforced minimum 5 years for experience question, was: ".concat(f)))}return t&&Array.isArray(t)&&t.length>0&&(p=this.matchToOption(p,t)),console.log("Final answer:",p),console.log("=== END AI QUESTION ANSWERING DEBUG ==="),{success:!0,answer:p||"Information not available"}}catch(u){return console.error("Error in answerQuestion:",u),console.log("=== END AI QUESTION ANSWERING DEBUG ==="),{success:!0,answer:t&&Array.isArray(t)&&t.length>0?t.length>1?t[1]:t[0]:"Information not available"}}}detectQuestionType(e){let t=e.toLowerCase();return t.includes("level of")||t.includes("proficiency in")||t.includes("fluent in")?"language_level":t.includes("skill")||t.includes("experience")||t.includes("years")||t.includes("technology")||t.includes("programming")||t.includes("language")||t.includes("c++")||t.includes("python")||t.includes("java")?"skills":t.includes("education")||t.includes("degree")||t.includes("study")||t.includes("university")||t.includes("college")?"education":t.includes("language")||t.includes("speak")||t.includes("fluent")?"languages":t.includes("certification")||t.includes("certified")?"certifications":t.includes("name")||t.includes("email")||t.includes("phone")||t.includes("contact")||t.includes("location")?"personal":t.includes("visa")||t.includes("sponsorship")||t.includes("work permit")?"visa":t.includes("salary")||t.includes("compensation")||t.includes("pay")||t.includes("expectation")?"salary":t.includes("notice")||t.includes("period")||t.includes("availability")||t.includes("start date")?"notice":"general"}getDirectAnswer(e,t=null){var n;if(t){let s=e.toLowerCase();if(t.languages&&(s.includes("level of")||s.includes("proficiency"))){for(let d of["german","english","french","arabic","spanish"])if(s.includes(d)){let u=t.languages.find(c=>{var g;return((g=c.language)==null?void 0:g.toLowerCase())===d});if(u)return u.proficiency||"Unknown"}}if(t.personal_info){if(s.includes("email")||s.includes("e-mail"))return t.personal_info.email||null;if(s.includes("phone")||s.includes("telephone")||s.includes("mobile"))return t.personal_info.phone||null;if(s.includes("name"))return t.personal_info.name||null;if(s.includes("location")||s.includes("address"))return t.personal_info.location||null;if(s.includes("citizenship"))return t.personal_info.citizenship||null;if(s.includes("visa")||s.includes("sponsorship"))return t.personal_info.visa_required||null;if(s.includes("salary")||s.includes("compensation")||s.includes("pay"))return t.personal_info.salary||null}}if(!((n=this.user_data)!=null&&n.personal_information))return null;let o=this.user_data.personal_information,r=e.toLowerCase();return r.includes("email")||r.includes("e-mail")?o.email||null:r.includes("phone")||r.includes("mobile")||r.includes("telefon")?(o.phone_prefix?"".concat(o.phone_prefix).concat(o.phone):o.phone)||null:r.includes("first name")||r.includes("vorname")?o.name||null:r.includes("last name")||r.includes("surname")||r.includes("nachname")?o.surname||null:r.includes("country")&&!r.includes("code")?o.country||null:this.isNoticePeriodOrStartDateQuestion(e)?r.includes("notice period")||r.includes("k\xFCndigungsfrist")||r.includes("kuendigungsfrist")?r.includes("monate")||r.includes("deutsch")?"2 Monate":"2 months":this.calculateDateTwoMonthsFromNow():null}buildEnhancedPrompt(e,t){let o=this.formatUserDataAsText(),r='You are a job applicant filling out a job application form. Answer questions based on your resume information in first person (as "I" not "he/she").\n\nMY RESUME:\n'.concat(o,"\n\nQUESTION: ").concat(e,'\n\nIMPORTANT GENERAL RULES:\n- Answer as the job applicant (use "I", "my", "me" - NOT "he", "she", "Sami", or third person)\n- Be concise and direct\n- Only provide the specific information requested\n- Do not mention your name unless explicitly asked');if(this.isDecimalNumberQuestion(e)&&(r+='\n\nIMPORTANT RULES FOR DECIMAL NUMBERS:\n- If asked for a decimal number, provide ONLY a decimal number (e.g., "3.5", "2.0", "1.2")\n- Do NOT include explanations, descriptions, or additional text\n- The number should be greater than 0.0 as requested\n- Example: "3.0" not "3.0 years" or explanations'),this.isYearsOfExperienceQuestion(e)&&(r+='\n\nIMPORTANT RULES FOR YEARS OF EXPERIENCE:\n- If asked for years of experience, provide ONLY a number between 5-99\n- MINIMUM is always 5 years - never return 0, 1, 2, 3, or 4\n- Do NOT include words like "years", "Jahre", or descriptions\n- For skill levels: Beginner=5, Intermediate=7, Advanced=10+ years\n- Calculate based on work experience and skill level\n- If no specific experience found, default to 5 years minimum\n- If unclear or no data, always answer at least 5 years to maximize job prospects\n- Example: "5" not "5 years" or "5 Jahre"\n- Better to overestimate than underestimate for better interview chances'),this.isDegreeQuestion(e)&&(r+='\n\nIMPORTANT RULES FOR DEGREE QUESTIONS:\n- Check education section carefully for exact degree matches\n- "Bachelor" = "Bachelor of Engineering" or "Bachelor of Science"\n- "Master" = "Master of Engineering" or "Master of Science"\n- Answer "Ja" for German forms, "Yes" for English forms\n- If degree is found, answer positively\n- Look for exact degree names in education section'),this.isSkillLevelQuestion(e)&&(r+="\n\nIMPORTANT RULES FOR SKILL LEVEL QUESTIONS:\n- Check the skills section for exact skill matches\n- Look for the skill name and its level (Beginner/Intermediate/Advanced)\n- Be precise about the level mentioned in the resume\n- Do not guess or estimate levels"),this.isNoticePeriodOrStartDateQuestion(e)){let n=this.calculateDateTwoMonthsFromNow();r+='\n\nIMPORTANT RULES FOR NOTICE PERIOD AND START DATE:\n- For notice period questions, answer "2 months" or "2 Monate"\n- For starting date questions, provide the exact date: '.concat(n,'\n- Use the format DD.MM.YYYY for German forms (e.g., "15.03.2024")\n- Use the format MM/DD/YYYY for English forms (e.g., "03/15/2024")\n- Current calculated start date (2 months from today): ').concat(n,"\n- Be consistent with the date format expected by the form")}if(t&&Array.isArray(t)&&t.length>0){let n=t.map(s=>'"'.concat(s,'"')).join(", ");r+="\n\nAvailable Options: [".concat(n,"]\n\nIMPORTANT: You MUST choose EXACTLY ONE option from the list above. Your answer should match one of the options EXACTLY as written.")}return r+="\n\nANSWER:",r}isDecimalNumberQuestion(e){let t=e.toLowerCase();return t.includes("decimal")||t.includes("dezimal")||t.includes("gr\xF6\xDFer als 0.0")||t.includes("greater than 0.0")||t.includes("decimal zahl")||t.includes("decimal number")}isYearsOfExperienceQuestion(e){let t=e.toLowerCase();return t.includes("jahre")||t.includes("years")||t.includes("experience")||t.includes("erfahrung")||t.includes("how many")||t.includes("wie viele")}isDegreeQuestion(e){let t=e.toLowerCase();return t.includes("bachelor")||t.includes("master")||t.includes("degree")||t.includes("abschluss")||t.includes("bildung")||t.includes("education")}isSkillLevelQuestion(e){let t=e.toLowerCase();return t.includes("level")||t.includes("niveau")||t.includes("skill")||t.includes("f\xE4higkeit")||t.includes("experience with")||t.includes("erfahrung mit")}isNoticePeriodOrStartDateQuestion(e){let t=e.toLowerCase();return t.includes("notice period")||t.includes("starting date")||t.includes("start date")||t.includes("startdatum")||t.includes("beginn")||t.includes("beginnen")||t.includes("k\xFCndigungsfrist")||t.includes("kuendigungsfrist")||t.includes("verf\xFCgbar")||t.includes("verfuegbar")||t.includes("available")||t.includes("wann k\xF6nnen sie")||t.includes("when can you")||t.includes("earliest start")||t.includes("fr\xFChester beginn")||t.includes("fruehester beginn")}calculateDateTwoMonthsFromNow(){let e=new Date;e.setMonth(e.getMonth()+2);let t=String(e.getDate()).padStart(2,"0"),o=String(e.getMonth()+1).padStart(2,"0"),r=e.getFullYear();return"".concat(t,".").concat(o,".").concat(r)}formatUserDataAsText(){return this.formatted_text?this.formatted_text:this.user_data?typeof this.user_data=="string"?this.user_data:this.formatObject(this.user_data,0):"No user data available."}formatObject(e,t=0){let o="  ".repeat(t),r="";if(typeof e=="object"&&e!==null)if(Array.isArray(e))for(let n of e)typeof n=="object"&&n!==null?r+="".concat(o,"- ").concat(this.formatObject(n,t+1)):r+="".concat(o,"- ").concat(n,"\n");else for(let[n,s]of Object.entries(e)){let d=n.toUpperCase().replace(/_/g," ");r+="".concat(o).concat(d,":\n"),typeof s=="object"&&s!==null?r+=this.formatObject(s,t+1):r+="".concat(o,"  ").concat(s,"\n")}else r+="".concat(o).concat(e,"\n");return r}matchToOption(e,t){if(!e||!t||t.length===0)return(t==null?void 0:t.length)>0?t[0]:"Not available";if(this.isDecimalNumberQuestion(e)||/^\d+\.\d+$/.test(e.trim())){let o=e.match(/\d+\.\d+/);if(o){let r=o[0];for(let n of t)if(n.includes(r))return n;return r}}if(this.isYearsOfExperienceQuestion(e)||/^\d+$/.test(e.trim())){let o=e.match(/\d+/);if(o){let r=parseInt(o[0]);this.isYearsOfExperienceQuestion(e)&&r<5&&(r=5);let n=r.toString();for(let s of t)if(s.includes(n))return s;return n}}if(this.isNoticePeriodOrStartDateQuestion(e)){if(e.toLowerCase().includes("2 months")||e.toLowerCase().includes("2 monate")){for(let r of t)if(r.toLowerCase().includes("2 months")||r.toLowerCase().includes("2 monate")||r.toLowerCase().includes("2 month"))return r;return e}let o=e.match(/\d{1,2}[.\/-]\d{1,2}[.\/-]\d{4}/);if(o){let r=o[0];for(let n of t)if(n.includes(r))return n;return r}}for(let o of t)if(o.toLowerCase()===e.toLowerCase())return o;for(let o of t)if(o.toLowerCase().includes(e.toLowerCase())||e.toLowerCase().includes(o.toLowerCase()))return o;if(e.toLowerCase().includes("germany")||e.toLowerCase().includes("deutsch")){for(let o of t)if(o.toLowerCase().includes("deutsch")||o.toLowerCase().includes("germany")||o.includes("+49"))return o}return t.length>1?t[1]:t[0]}async testConnection(){try{return await this.ensureSettingsLoaded(),(await this.aiSettingsManager.testConnection()).success}catch(e){return console.error("Error testing AI connection:",e),!1}}getAISettings(){return this.aiSettingsManager.getCurrentSettings()}clear(){this.user_data=null,this.formatted_text=null,this.aiSettingsManager.clear(),this.settingsLoadPromise=null}},U=_;var M=class extends b{static async closeForm(e=!1){var t,o;try{let r=document.querySelector('button[aria-label="Dismiss"]');if(r||(r=document.querySelector('button[aria-label="Close"]')||document.querySelector('button[aria-label="Cancel"]')||document.querySelector("button[data-test-modal-close-btn]")),r){if(r.click(),await this.wait(),e){let n=document.querySelector('button[data-control-name="save_application_btn"]');n&&(n.click(),this.debugLog("Closed form and saved application"))}else{let n=document.querySelector('button[data-control-name="discard_application_confirm_btn"]')||document.querySelector("button[data-test-dialog-secondary-btn]");n&&(n.click(),this.debugLog("Closed form and discarded application"))}await this.wait()}}catch(r){this.errorLog("Error closing form",r);try{let n=document.querySelectorAll("button");for(let s of n)(s.textContent.toLowerCase().includes("close")||s.textContent.toLowerCase().includes("cancel")||(t=s.getAttribute("aria-label"))!=null&&t.toLowerCase().includes("close")||(o=s.getAttribute("aria-label"))!=null&&o.toLowerCase().includes("dismiss"))&&(s.click(),await this.wait(500))}catch(n){this.errorLog("Failed final attempt to close form",n)}}}static async clickNextPage(){try{await this.wait();let e=document.querySelector('button[aria-label="Continue to next step"]');e&&(e.click(),this.debugLog("Clicked on next page button"))}catch(e){this.errorLog("Error clicking on next page button",e)}}static async clickPreviousPage(){try{await this.wait();let e=document.querySelector('button[aria-label="Back to previous step"]');e&&(e.click(),this.debugLog("Clicked on previous page button"))}catch(e){this.errorLog("Error clicking on previous page button",e)}}static async clickReviewApplication(){try{await this.wait();let e=document.querySelector('button[aria-label="Review your application"]');e&&(e.click(),this.debugLog("Clicked on review button"))}catch(e){this.errorLog("Error clicking on review button",e)}}static async clickSubmitApplication(){try{await this.wait();let e=document.querySelector('button[aria-label="Submit application"]');e&&(e.click(),this.debugLog("Clicked on submit button"))}catch(e){this.errorLog("Error clicking on submit button",e)}}static async clickDoneAfterSubmit(){try{let e=document.querySelector('button[aria-label="Done"]');e||(e=document.querySelector("button.artdeco-button span.artdeco-button__text"),this.debugLog("Found done button",e)),e?(e.click(),this.debugLog("Clicked on Done button")):this.debugLog("Done button not found")}catch(e){this.errorLog("Error clicking on Done button",e)}}static async clickDismissAfterSubmit(){try{let e=document.querySelector('button[aria-label="Dismiss"]');if(e||(e=document.querySelector("button[data-test-modal-close-btn]")),!e){let t=document.querySelectorAll("button.artdeco-button--circle.artdeco-modal__dismiss");for(let o of t)if(o.querySelector('svg use[href="#close-medium"]')){e=o;break}}e?(e.click(),this.debugLog("Clicked on Dismiss button")):this.debugLog("Dismiss button not found")}catch(e){this.errorLog("Error clicking on Dismiss button",e)}}static async findReviewButton(){try{return document.querySelector('button[aria-label="Review your application"]')}catch(e){return this.errorLog("Error finding review button",e),null}}static async findNextButton(){try{return document.querySelector('button[aria-label="Continue to next step"]')}catch(e){return this.errorLog("Error finding next button",e),null}}static async findSubmitButton(){try{return document.querySelector('button[aria-label="Submit application"]')}catch(e){return this.errorLog("Error finding submit button",e),null}}static async findDoneButton(){try{let e=document.querySelector('button[aria-label="Done"]');if(!e){let t=document.querySelectorAll("button.artdeco-button");for(let o of t){let r=o.querySelector("span.artdeco-button__text");if(r&&r.textContent.trim()==="Done"){e=o;break}}}return e}catch(e){return this.errorLog("Error finding done button",e),null}}static async processForm(e){try{this.debugLog("Starting form processing");let t=setTimeout(async()=>{this.debugLog("Form processing timeout reached")},3*60*1e3),o=!1,r=!1;for(;!r;){if(typeof e=="function"?r=await e():e&&e.value!==void 0?r=e.value:r=!!e,r){this.debugLog("Stop requested during form processing");break}try{if(await this.findReviewButton()){this.debugLog("Found review button");let c=setTimeout(()=>{this.debugLog("Review processing timeout reached"),e.value=!0},1*60*1e3);if(document.querySelectorAll("div.fb-dash-form-element").length>0&&!o){this.debugLog("Found questions on current page, processing before review");let a=await this.processFormQuestions(e);if(a.stopped){this.debugLog("Form questions processing stopped by user");break}a.success||this.debugLog("Form questions processing failed"),o=!0,this.debugLog("Current page form questions processed, will not reprocess")}else o?this.debugLog("Skipping redundant form processing for current page"):this.debugLog("No form questions found on current page");if(await this.clickReviewApplication(),await this.wait(2e3),typeof e=="function"?r=await e():e&&e.value!==void 0?r=e.value:r=!!e,r){this.debugLog("Stop requested after clicking review");break}if(document.querySelectorAll("div.fb-dash-form-element").length>0){this.debugLog("Found questions on review page");let a=await this.processFormQuestions(e);if(a.stopped){this.debugLog("Review questions processing stopped by user");break}a.success||this.debugLog("Review questions processing failed")}else this.debugLog("No questions found on review page");await this.clickSubmitApplication(),await this.wait(2e3),await this.clickDismissAfterSubmit(),this.debugLog("Clicked submit button after review"),clearTimeout(c);break}if(document.querySelectorAll("div.fb-dash-form-element").length>0&&!o){this.debugLog("Found form questions, processing...");let c=await this.processFormQuestions(e);if(c.stopped){this.debugLog("Form questions processing stopped by user");break}c.success||this.debugLog("Form questions processing failed"),o=!0,this.debugLog("Form questions processed")}if(await this.findNextButton()){if(this.debugLog("Found next button, moving to next page"),await this.clickNextPage(),await this.wait(2e3),typeof e=="function"?r=await e():e&&e.value!==void 0?r=e.value:r=!!e,r){this.debugLog("Stop requested after navigation");break}o=!1;continue}if(await this.findSubmitButton()){if(this.debugLog("Found submit button, submitting application"),typeof e=="function"?r=await e():e&&e.value!==void 0?r=e.value:r=!!e,r){this.debugLog("Stop requested before final submit");break}await this.clickSubmitApplication(),await this.wait(2e3),await this.clickDismissAfterSubmit();break}this.debugLog("No navigation buttons found, waiting..."),await this.wait(1e3)}catch(n){this.errorLog("Error in form processing loop",n),await this.wait(2e3)}}return clearTimeout(t),this.debugLog("Form processing completed"),!0}catch(t){return this.errorLog("Error processing form",t),!1}}static shouldSkipQuestion(e){let t=e.toLowerCase();return this.shouldSkipQuestionDirect(t)}static shouldSkipQuestionDirect(e){return!!(e.includes("email")||e.includes("e-mail")||e.includes("e-mail-adresse")||["phone","mobile","cell","telephone","handy","telefon","handynummer","handynumer","mobilnummer","handy","tel\xE9fono","m\xF3vil","celular","tel\xE9fono m\xF3vil","t\xE9l\xE9phone","portable","mobile","t\xE9l\xE9phone portable","telefono","cellulare","mobile","telefono cellulare"].some(s=>e.includes(s))||["country code","area code","phone prefix","calling code","prefix","landsvorwahl","vorwahl","l\xE4ndercode","vorwahl","c\xF3digo de pa\xEDs","c\xF3digo de \xE1rea","prefijo","c\xF3digo","indicatif pays","indicatif","pr\xE9fixe","indicatif t\xE9l\xE9phonique","prefisso","codice paese","prefisso telefonico"].some(s=>e.includes(s))||["contact information","contact details","contact","kontaktinformation","kontaktdaten","kontakt","informaci\xF3n de contacto","datos de contacto","contacto","coordonn\xE9es","informations de contact","contact","informazioni di contatto","dati di contatto","contatto"].some(s=>e.includes(s))||["first name","last name","full name","name","given name","family name","vorname","nachname","vollst\xE4ndiger name","name","familienname","nombre","apellido","nombre completo","primer nombre","segundo nombre","pr\xE9nom","nom","nom complet","nom de famille","nome","cognome","nome completo","nome di battesimo"].some(s=>e.includes(s)))}static async processFormQuestions(e=null){try{this.debugLog("Processing form questions");let t=document.querySelectorAll("div.fb-dash-form-element");this.debugLog("Found ".concat(t.length," form elements"));for(let o of t){if(e){let r=!1;if(typeof e=="function"?r=await e():e&&e.value!==void 0?r=e.value:r=!!e,r)return this.debugLog("Stop requested during form questions processing"),{stopped:!0}}try{let r=o.querySelector("legend span.fb-dash-form-element__label span")||o.querySelector("label");if(!r){this.debugLog("No label found for form element");continue}let n=r.textContent.trim();if(n=n.replace(/(.+?)\1/,"$1"),this.debugLog("Processing question: ".concat(n)),this.shouldSkipQuestion(n)){this.debugLog("Skipping prefilled question: ".concat(n));continue}let s=o.querySelector("input, textarea, select");if(!s){this.debugLog("No input field found for question");continue}let d=[];switch(s.tagName.toLowerCase()){case"input":s.type==="radio"&&o.querySelectorAll('input[type="radio"]').forEach(g=>{let m=o.querySelector('label[for="'.concat(g.id,'"]'));m&&d.push(m.textContent.trim())});break;case"select":d=Array.from(s.options).map(c=>c.text.trim());break}d.length>0&&this.debugLog('Available options for "'.concat(n,'":'));let u=await this.answerQuestion(n,d,s,o,e);if(u.stopped)return this.debugLog("Form questions processing stopped by user"),{stopped:!0};u.success||this.debugLog("Failed to answer question: ".concat(n))}catch(r){this.errorLog("Error processing form element: ".concat(r.message),r)}}return this.debugLog("Completed processing form questions"),{success:!0}}catch(t){return this.errorLog("Error in processFormQuestions",t),{success:!1}}}static async answerQuestion(e,t=[],o,r,n=null){try{let s=null;window.currentAiSettings&&(s=window.currentAiSettings,this.debugLog("Using AI settings from current settings:",s));let d=null;try{let a=await chrome.storage.local.get(["currentUser"]);a.currentUser&&a.currentUser.id&&(d=a.currentUser.id,this.debugLog("Using user ID: ".concat(d)))}catch(a){this.errorLog("Error getting current user:",a)}let u=new U(d);if(s){let a={ai_provider:s.provider,ai_model:s.model,apiKey:s.apiKey,is_default:!0};u.aiSettingsManager.setSettings(a),this.debugLog("Set AI settings directly: provider=".concat(a.ai_provider,", model=").concat(a.ai_model))}this.debugLog("Answering question: ".concat(e)),this.debugLog("Available options:",t);try{let a=await chrome.storage.local.get(["userResumeData","userResumeText","userResumeType"]);a&&(a.userResumeData||a.userResumeText)?(this.debugLog("Found user resume data in storage"),a.userResumeData?(await u.setUserContext(a.userResumeData,a.userResumeText),this.debugLog("Set structured user context in AI instance")):(await u.setUserContext(a.userResumeText),this.debugLog("Set text user context in AI instance"))):this.debugLog("No user resume found in storage")}catch(a){this.errorLog("Error loading user resume from storage:",a)}let c=null;try{let a=await chrome.storage.local.get(["currentResumeId"]);a.currentResumeId&&(c=a.currentResumeId,this.debugLog("Using resume ID: ".concat(c)))}catch(a){this.errorLog("Error getting current resume ID:",a)}let g=await u.answerQuestion(e,t,n,c);if(g.stopped)return this.debugLog("Question answering stopped by user"),{stopped:!0};if(!g.success||!g.answer)return this.debugLog("No answer generated for question"),{success:!1};let m=g.answer;switch(this.debugLog("AI Answer: ".concat(m)),o.tagName.toLowerCase()){case"input":switch(o.type){case"text":case"tel":case"email":o.value=m,o.dispatchEvent(new Event("input",{bubbles:!0}));break;case"radio":let a=r.querySelectorAll('input[type="radio"]');for(let p of a){let f=r.querySelector('label[for="'.concat(p.id,'"]'));if(f&&f.textContent.trim()===m){p.click(),this.debugLog("Selected radio option: ".concat(m));break}}break;case"checkbox":o.checked=!0,o.dispatchEvent(new Event("change",{bubbles:!0}));break}break;case"textarea":o.value=m,o.dispatchEvent(new Event("input",{bubbles:!0}));break;case"select":for(let a=0;a<o.options.length;a++)if(o.options[a].text.trim()===m){o.selectedIndex=a,o.dispatchEvent(new Event("change",{bubbles:!0})),this.debugLog("Selected option: ".concat(m));break}break}return await this.wait(500),{success:!0}}catch(s){return this.errorLog('Error answering question "'.concat(e,'"'),s),{success:!1}}}},q=M;function l(i,e=null){let t=new Date().toISOString().split("T")[1],o="[EasyJob Debug ".concat(t,"] ").concat(i);e?console.log(o,e):console.log(o)}function h(i,e="info"){l("Status Update: ".concat(e," - ").concat(i)),chrome.runtime.sendMessage({action:"STATUS_UPDATE",text:i,status:e})}async function w(i){if(!i)return l("Auto-apply process stopped by user (local check)"),h("Auto-apply process stopped","info"),chrome.runtime.sendMessage({action:"PROCESS_COMPLETE"}),!0;try{let e=await chrome.runtime.sendMessage({action:"getAutoApplyState"});if(e&&e.success&&!e.isRunning)return l("Auto-apply process stopped by user (background check)"),h("Auto-apply process stopped","info"),chrome.runtime.sendMessage({action:"PROCESS_COMPLETE"}),!0}catch(e){l("Failed to check background state, using local state",e)}return!1}chrome.runtime.onMessage.addListener((i,e,t)=>{if(i.action==="START_AUTO_APPLY")return startAutoApplyProcess().then(()=>{t({success:!0})}).catch(o=>{console.error("Error in auto-apply process:",o),t({success:!1,error:o.message})}),!0});var O=class extends b{static async processJobPage(e,t,o,r){this.debugLog("Processing page ".concat(e,"/").concat(t)),h("Processing page ".concat(e," of ").concat(t),"info");let n=await k.getListOfJobsOnPage(o);l("Found ".concat(n.length," jobs on page ").concat(e));for(let s of n){if(await w(r))return this.debugLog("Stop requested during job processing - breaking job loop"),!1;if(await N.processJob(s,r),await w(r))return this.debugLog("Stop requested after job processing - breaking job loop"),!1}if(e<t)if(l("Finished processing page ".concat(e,", navigating to next page...")),h("Moving to page ".concat(e+1," of ").concat(t,"..."),"info"),await k.goToNextPage())l("Successfully navigated to page ".concat(e+1));else return l("Failed to navigate to next page or reached last page"),await k.isOnLastPage()?(l("Confirmed: reached the last page"),h("Reached the last page of results","info")):(l("Navigation failed but not on last page - stopping process"),h("Failed to navigate to next page - stopping","error")),!1;else l("Finished processing last page (".concat(e,"/").concat(t,")"));return!0}},N=class extends b{static async processJob(e,t){try{let o=await S.getJobClickableElement(e);if(await S.clickOnJob(o),l("Clicked on job"),await S.scrollDownToLoadNextJob(e),l("Scrolled to job"),await w(t))return;let r=await S.isEasyButtonAvailable();if(l("Is Easy Apply button available:",r),!r){l("Job already applied. Skipping..."),h("Job already applied. Skipping...","info");return}let n=await C.getAllJobInfo();if(l("Job info:",n),await chrome.storage.local.set({currentJob:n}),await S.clickEasyApply(),l("Attempted to click Easy Apply"),await new Promise(d=>setTimeout(d,2e3)),await w(t)){this.debugLog("Stop requested before form processing");return}let s=async()=>await w(t);await q.processForm(s),l("Processed application form"),await chrome.storage.local.remove("currentJob"),l("Removed current job from storage")}catch(o){console.error("Error processing job:",o),l("Error processing job:",{error:o.message,stack:o.stack}),h("Error processing job. Continuing to next one...","error")}}},R=O;var y=!1;l("Content script loaded and ready to receive messages");l("Current URL:",window.location.href);l("Document ready state:",document.readyState);async function B(){try{if(l("Starting auto-apply process"),l("Current URL:",window.location.href),await w(y))return;let i=document.querySelector(".scaffold-layout.jobs-search-two-pane__layout");if(l("Search element found:",!!i),!i){l("Available elements on page:",{body:document.body.innerHTML.substring(0,500)+"...",possibleSelectors:{scaffold:document.querySelector(".scaffold-layout"),jobsSearch:document.querySelector(".jobs-search-two-pane__layout"),anyJobsRelated:document.querySelectorAll('[class*="jobs-"]')}}),h("Could not find jobs list. Please make sure you are on LinkedIn jobs page.","error");return}l("Getting total jobs count");let e=await k.getTotalJobsSearchCount(i);l("Total jobs found:",e),h("Found ".concat(e," jobs to process"),"info"),l("Getting available pages");let t=await k.getAvailablePages(i,e);l("Total pages found:",t);for(let o=1;o<=t;o++){if(await w(y))return;if(await R.processJobPage(o,t,i,y)===!1){l("Page processing failed or reached end, stopping at page ".concat(o));break}}await w(y)||(l("Auto-apply process completed"),h("Auto-apply process completed!","success"),chrome.runtime.sendMessage({action:"PROCESS_COMPLETE"}))}catch(i){console.error("Error in auto-apply process:",i),l("Fatal error in auto-apply process:",{error:i.message,stack:i.stack}),h("Error in auto-apply process","error")}}chrome.runtime.onMessage.addListener((i,e,t)=>{try{l("Received message in content script:",i),l("Message sender:",e),i.action==="startAutoApply"?y?t({success:!1,message:"Auto apply already running"}):(y=!0,l("Starting auto-apply process with user data:",i.userData),l("AI settings:",i.aiSettings),window.currentUserData=i.userData,window.currentAiSettings=i.aiSettings,l("Content script: Received AI settings:",{provider:i.aiSettings.provider,model:i.aiSettings.model,hasApiKey:!!i.aiSettings.apiKey}),B(),t({success:!0,message:"Auto apply started"})):i.action==="stopAutoApply"?(l("Stopping auto-apply process"),y=!1,t({success:!0,message:"Auto apply stopped"})):i.action==="GET_STATE"?(l("Getting current state"),t({isRunning:y})):i.action==="START_AUTO_APPLY"?y?t({success:!1,message:"Auto apply already running"}):(y=!0,l("Starting auto-apply process (legacy format)"),B(),t({success:!0,message:"Auto apply started"})):i.action==="STOP_AUTO_APPLY"?(l("Stopping auto-apply process (legacy format)"),y=!1,t({success:!0,message:"Auto apply stopped"})):(l("Unknown action received:",i.action),t({success:!1,message:"Unknown action"}))}catch(o){l("Error handling message in content script:",o),t({success:!1,error:o.message})}return!0});
