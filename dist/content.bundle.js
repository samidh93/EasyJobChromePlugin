var Ae=Object.defineProperty,Ue=Object.defineProperties;var Be=Object.getOwnPropertyDescriptors;var Le=Object.getOwnPropertySymbols;var Qe=Object.prototype.hasOwnProperty,ze=Object.prototype.propertyIsEnumerable;var U=(l,e,t)=>e in l?Ae(l,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):l[e]=t,w=(l,e)=>{for(var t in e||(e={}))Qe.call(e,t)&&U(l,t,e[t]);if(Le)for(var t of Le(e))ze.call(e,t)&&U(l,t,e[t]);return l},E=(l,e)=>Ue(l,Be(e));var S=(l,e)=>()=>(l&&(e=l(l=0)),e);var B=(l,e)=>{for(var t in e)Ae(l,t,{get:e[t],enumerable:!0})};var j=(l,e,t)=>U(l,typeof e!="symbol"?e+"":e,t);var Q,T,N=S(()=>{Q=class l{constructor(e){this.platformName=e,this._isAutoApplyRunning=!1,this.stopRequested=!1}async startAutoApply(){throw new Error("".concat(this.platformName,": startAutoApply() must be implemented"))}async getTotalJobsCount(e){throw new Error("".concat(this.platformName,": getTotalJobsCount() must be implemented"))}async getAvailablePages(e,t){throw new Error("".concat(this.platformName,": getAvailablePages() must be implemented"))}async processJobPage(e,t,r,o){throw new Error("".concat(this.platformName,": processJobPage() must be implemented"))}async fillApplicationForm(e,t){throw new Error("".concat(this.platformName,": fillApplicationForm() must be implemented"))}async extractJobInfo(){throw new Error("".concat(this.platformName,": extractJobInfo() must be implemented"))}async navigateToNextPage(e){throw new Error("".concat(this.platformName,": navigateToNextPage() must be implemented"))}hasFeature(e){return!1}static async wait(e=1e3){await new Promise(t=>setTimeout(t,e))}async wait(e=1e3){return l.wait(e)}debugLog(e){console.log("[".concat(this.platformName,"] ").concat(e))}errorLog(e,t=null){t?console.error("[".concat(this.platformName,"] ").concat(e,":"),t):console.error("[".concat(this.platformName,"] ").concat(e))}setAutoApplyRunning(e){this._isAutoApplyRunning=e}isAutoApplyRunning(){return this._isAutoApplyRunning}requestStop(e="manual"){this.debugLog("Stop requested: ".concat(e)),this.stopRequested=!0,this._isAutoApplyRunning=!1}isStopRequested(){return this.stopRequested}resetStopFlag(){this.stopRequested=!1}async waitForElement(e,t=1e4,r=document){return new Promise(o=>{let s=r.querySelector(e);if(s){o(s);return}let n=new MutationObserver(()=>{let a=r.querySelector(e);a&&(n.disconnect(),o(a))});n.observe(r,{childList:!0,subtree:!0}),setTimeout(()=>{n.disconnect(),o(null)},t)})}scrollIntoView(e,t=!0){e&&e.scrollIntoView({behavior:"smooth",block:t?"center":"nearest"})}getPlatformName(){return this.platformName}isCurrentPlatform(e=window.location.href){return!1}},T=Q});var z,A,P=S(()=>{z=class{static async wait(e=1e3){await new Promise(t=>setTimeout(t,e))}static debugLog(e){console.log("[".concat(this.constructor.name,"] ").concat(e))}static errorLog(e,t){console.error("[".concat(this.constructor.name,"] ").concat(e,":"),t)}},A=z});var G,x,Y=S(()=>{P();G=class extends A{static async getTotalJobsSearchCount(e){try{await this.wait();let t=e.querySelector(".jobs-search-results-list__subtitle");if(t){let r=t.textContent.trim(),o=parseInt(r.split(" ")[0].replace(/,/g,"").replace(/\./g,"").replace(/\+/g,""));return this.debugLog("Total jobs found: ".concat(o)),o}else return this.debugLog("No results found"),0}catch(t){return this.errorLog("Error fetching total jobs count",t),0}}static async getAvailablePages(e,t){try{await this.wait();let r=e.querySelector('ul[class*="jobs-search-pagination__pages"]');if(!r)return this.debugLog("Pagination list not found."),0;let o=r.querySelectorAll("li");if(o.length===0)return this.debugLog("No pagination items found."),0;let s=o[o.length-1];this.debugLog("Last page: ".concat(s));let n=Math.ceil(t/25);return this.debugLog("Total pages available: ".concat(n)),n}catch(r){return this.errorLog("Error fetching available pages",r),0}}static async getListOfJobsOnPage(e){try{await this.wait();let t=e.querySelector(".scaffold-layout__list");if(!t)return this.debugLog("Jobs container not found."),[];let r=t.querySelectorAll("li[class*='scaffold-layout__list-item']");return this.debugLog("Found ".concat(r.length," jobs on this page.")),Array.from(r)}catch(t){return this.errorLog("Error fetching list of jobs",t),[]}}static async goToNextPage(){try{await this.wait();let e=document.querySelector('button[aria-label="View next page"]')||document.querySelector("button.jobs-search-pagination__button--next")||document.querySelector('button[aria-label="Next"]');return e&&!e.disabled?(this.debugLog("Found next page button, clicking..."),e.click(),this.debugLog("Clicked next page button"),await this.wait(3e3),!0?(this.debugLog("Successfully navigated to next page"),!0):(this.debugLog("Jobs failed to load on next page"),!1)):(this.debugLog("Next page button not found or disabled - likely on last page"),!1)}catch(e){return this.errorLog("Error navigating to next page",e),!1}}static async isOnLastPage(){try{let e=document.querySelector('button[aria-label="View next page"]')||document.querySelector("button.jobs-search-pagination__button--next");return!e||e.disabled}catch(e){return this.errorLog("Error checking if on last page",e),!0}}},x=G});var K,_,V=S(()=>{P();K=class extends A{static async getJobClickableElement(e){try{await this.wait();let t=e.querySelector("a");return t||(this.debugLog("Could not find clickable element for job"),null)}catch(t){return this.errorLog("Error fetching clickable element",t),null}}static async scrollDownToLoadNextJob(e){try{await this.wait(),e.scrollIntoView({behavior:"smooth",block:"center"}),this.debugLog("Scrolled down to load next job")}catch(t){this.errorLog("Error scrolling down to load next job",t)}}static async clickOnJob(e){try{e.click(),this.debugLog("Clicked on job element")}catch(t){this.debugLog("Could not click on job element",t)}}static async isEasyButtonAvailable(){try{let e=document.querySelector(".jobs-s-apply button");return e?e.disabled?(this.debugLog("easy apply button found but disabled"),!1):(this.debugLog("found easy apply button"),!0):(this.debugLog("easy apply button not found"),!1)}catch(e){return this.errorLog("Error checking easy apply button availability",e),!1}}static async clickEasyApply(){try{let e=document.querySelector(".jobs-s-apply button");if(e)return e.click(),this.debugLog("Clicked on easy apply button"),!0;throw new Error("Easy apply button not found")}catch(e){throw this.errorLog("Error clicking on easy apply button",e),e}}},_=K});var W,M,X=S(()=>{P();W=class extends A{static async getJobId(){try{let e=new URLSearchParams(window.location.search).get("currentJobId");return e?(this.debugLog("Found job ID: ".concat(e)),e):(this.debugLog("Job ID not found in URL"),null)}catch(e){return this.errorLog("Error getting job ID",e),null}}static async getJobTitle(){try{let e=document.querySelector(".job-details-jobs-unified-top-card__job-title h1");if(e){let t=e.textContent.trim();return this.debugLog("Found job title: ".concat(t)),t}return this.debugLog("Job title not found"),null}catch(e){return this.errorLog("Error getting job title",e),null}}static async getCompanyName(){try{let e=document.querySelector(".job-details-jobs-unified-top-card__company-name a");if(e){let t=e.textContent.trim();return this.debugLog("Found company name: ".concat(t)),t}return this.debugLog("Company name not found"),null}catch(e){return this.errorLog("Error getting company name",e),null}}static async getLocation(){try{let e=document.querySelector(".job-details-jobs-unified-top-card__tertiary-description-container .tvm__text");if(e){let t=e.textContent.trim();return this.debugLog("Found location: ".concat(t)),t}return this.debugLog("Location not found"),null}catch(e){return this.errorLog("Error getting location",e),null}}static async getJobType(){try{let e=document.querySelectorAll("button.job-details-preferences-and-skills .job-details-preferences-and-skills__pill");if(e.length>1){let r=e[1].querySelectorAll("span");if(r.length>0){let o=r[0].querySelectorAll("span");if(o.length>0){let s=o[0].textContent.trim();if(s)return this.debugLog("Found jobType type: ".concat(s)),s}}}return this.debugLog("jobType type not found"),null}catch(e){return this.errorLog("Error getting jobType type",e),null}}static async getRemoteType(){try{let e=document.querySelectorAll("button.job-details-preferences-and-skills .job-details-preferences-and-skills__pill");if(e.length>0){let r=e[0].querySelectorAll("span");if(r.length>0){let o=r[0].querySelectorAll("span");if(o.length>0){let s=o[0].textContent.trim();if(s)return this.debugLog("Found remote type: ".concat(s)),s}}}return this.debugLog("Remote type not found"),null}catch(e){return this.errorLog("Error getting remote type",e),null}}static async getJobDescription(){try{let e=document.querySelector(".jobs-description__content");if(e){let t=e.textContent.trim();return this.debugLog("Found job description"),t}return this.debugLog("Job description not found"),null}catch(e){return this.errorLog("Error getting job description",e),null}}static async getApplicantCount(){try{let e=document.querySelectorAll(".job-details-jobs-unified-top-card__tertiary-description-container .tvm__text"),t=e.length>0?e[e.length-1]:null;if(t){let r=t.textContent.trim();return this.debugLog("Found applicant count: ".concat(r)),r}return this.debugLog("Applicant count not found"),null}catch(e){return this.errorLog("Error getting applicant count",e),null}}static async getPostedDate(){try{let e=document.querySelectorAll(".job-details-jobs-unified-top-card__tertiary-description-container .tvm__text")[2];if(e){let t=e.textContent.trim();return this.debugLog("Found posted date: ".concat(t)),t}return this.debugLog("posted date not found"),null}catch(e){return this.errorLog("Error getting applicant count",e),null}}static async getAllJobInfo(){try{let e={jobId:await this.getJobId(),title:await this.getJobTitle(),company:await this.getCompanyName(),location:await this.getLocation(),jobType:await this.getJobType(),remoteType:await this.getRemoteType(),description:await this.getJobDescription(),applicantCount:await this.getApplicantCount(),postedDate:await this.getPostedDate()};return this.debugLog("Retrieved all job information"),e}catch(e){return this.errorLog("Error getting all job information",e),null}}},M=W});var H,ke,ve=S(()=>{H=class{constructor(){this.currentSettings=null,this.defaultModel="qwen2.5:3b",this.settingsLoadPromise=null}async loadAISettings(e){try{if(console.log("AISettingsManager: Loading AI settings for user:",e),!e||typeof e!="string"||e.length!==36)return console.error("AISettingsManager: Invalid user ID provided:",e),console.log("AISettingsManager: Returning default settings (ollama)"),this.getDefaultSettings();console.log("AISettingsManager: Making API request to load settings...");let t=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/users/".concat(e,"/ai-settings/default")});return t&&t.success?(this.currentSettings=t.ai_settings,console.log("AISettingsManager: Successfully loaded AI settings"),this.currentSettings):(console.warn("AISettingsManager: No AI settings found, using default"),console.log("AISettingsManager: Response was:",t),this.getDefaultSettings())}catch(t){return console.error("AISettingsManager: Error loading AI settings:",t),this.getDefaultSettings()}}getDefaultSettings(){return console.log("AISettingsManager: No AI settings configured - user must set up AI first"),null}getCurrentSettings(){return this.currentSettings}setSettings(e){this.currentSettings=e,console.log("AISettingsManager: Settings updated:",e)}getModel(){let e=this.getCurrentSettings();return e&&(e.ai_model||e.model)||null}getProvider(){let e=this.getCurrentSettings();return e&&(e.ai_provider||e.provider)||null}async getDecryptedApiKey(){let e=this.getCurrentSettings();if(!e)return null;if(e.apiKey&&e.apiKey!=="encrypted")return e.apiKey;if(e.api_key_encrypted&&e.id)try{let t=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/ai-settings/".concat(e.id,"/encrypted-key")});if(t&&t.success&&t.api_key_encrypted){let r=await chrome.runtime.sendMessage({action:"apiRequest",method:"POST",url:"/ai-settings/decrypt-api-key",data:{encryptedApiKey:t.api_key_encrypted}});if(r&&r.success)return e.apiKey=r.decryptedApiKey,r.decryptedApiKey}}catch(t){throw console.error("AISettingsManager: Error fetching/decrypting API key:",t),new Error("Failed to retrieve API key")}return null}async testConnection(){try{let e=this.getProvider();return e==="ollama"?await chrome.runtime.sendMessage({action:"testOllama"}):e==="openai"?await chrome.runtime.sendMessage({action:"testOpenAI"}):this.getCurrentSettings().apiKey?{success:!0,message:"".concat(e," settings validated")}:{success:!1,error:"API key required for ".concat(e)}}catch(e){return console.error("AISettingsManager: Error testing connection:",e),{success:!1,error:e.message}}}async callAI(e){try{let t=this.getProvider(),r=this.getModel(),o=0;if(e.prompt?o=this.estimateTokens(e.prompt):e.messages&&(o=this.estimateTokensFromMessages(e.messages)),t==="ollama"){let s=E(w({},e),{model:r}),n=await chrome.runtime.sendMessage({action:"callOllama",endpoint:"generate",data:s});if(n.success===!1)throw new Error(n.error||"Unknown error from Ollama API");return n.data}else if(t==="openai"){let s=await this.getDecryptedApiKey();if(!s)throw new Error("OpenAI API key is required");let n=E(w({},e),{model:r,apiKey:s});console.log("Sending OpenAI request:",E(w({},n),{apiKey:"[REDACTED]"}));let a=await chrome.runtime.sendMessage({action:"callOpenAI",data:n});if(a.success===!1)throw new Error(a.error||"Unknown error from OpenAI API");return a.data}else throw new Error("Provider ".concat(t," not yet implemented"))}catch(t){throw console.error("AISettingsManager: Error calling AI API:",t),t}}async callAIWithStop(e,t=null){try{let r=this.getProvider();if(r==="ollama"){let o=this.getModel(),s=E(w({},e),{model:o});return new Promise((n,a)=>{let i=null;t&&(i=setInterval(async()=>{try{let c=!1;typeof t=="function"?c=await t():t&&t.value!==void 0?c=t.value:c=!!t,c&&(console.log("Stop requested during AI API call"),i&&clearInterval(i),n({stopped:!0}))}catch(c){console.error("Error in stop check:",c)}},500)),chrome.runtime.sendMessage({action:"callOllama",endpoint:"generate",data:s},c=>{i&&clearInterval(i),chrome.runtime.lastError?a(new Error(chrome.runtime.lastError.message)):c.success===!1?a(new Error(c.error||"Unknown error from Ollama API")):n(c.data)})})}else if(r==="openai"){let o=this.getModel(),s=await this.getDecryptedApiKey();if(!s)throw new Error("OpenAI API key is required");return new Promise((n,a)=>{let i=null;t&&(i=setInterval(async()=>{try{let c=!1;typeof t=="function"?c=await t():t&&t.value!==void 0?c=t.value:c=!!t,c&&(console.log("Stop requested during OpenAI API call"),i&&clearInterval(i),n({stopped:!0}))}catch(c){console.error("Error in stop check:",c)}},500)),chrome.runtime.sendMessage({action:"callOpenAI",data:E(w({},e),{model:o,apiKey:s})},c=>{i&&clearInterval(i),chrome.runtime.lastError?a(new Error(chrome.runtime.lastError.message)):c.success===!1?a(new Error(c.error||"Unknown error from OpenAI API")):n(c.data)})})}else throw new Error("Provider ".concat(r," not yet implemented"))}catch(r){throw console.error("AISettingsManager: Error calling AI API with stop:",r),r}}async loadAvailableModels(){try{let e=this.getProvider();if(e==="ollama"){let t=await chrome.runtime.sendMessage({action:"ollamaRequest",method:"GET",url:"/api/tags"});if(t&&t.success)return t.models.map(r=>r.name);throw new Error((t==null?void 0:t.error)||"Failed to load Ollama models")}else throw new Error("Provider ".concat(e," not yet implemented"))}catch(e){throw console.error("AISettingsManager: Error loading models:",e),e}}estimateTokens(e){if(!e)return 0;let t=e.length;return Math.ceil(t/4)}estimateTokensFromMessages(e){if(!e||!Array.isArray(e))return 0;let t=0;for(let r of e)r.content&&(t+=this.estimateTokens(r.content)),t+=4;return t}getTokenAnalysis(e){let t={inputTokens:0,estimatedOutputTokens:0,maxTokens:e.max_tokens||1e3,provider:this.getProvider(),model:this.getModel()};return e.prompt?t.inputTokens=this.estimateTokens(e.prompt):e.messages&&(t.inputTokens=this.estimateTokensFromMessages(e.messages)),t.estimatedOutputTokens=Math.min(t.maxTokens,100),t}clear(){this.currentSettings=null,this.settingsLoadPromise=null}},ke=H});var Z,Ee,xe=S(()=>{Z=class{constructor(e){this.aiSettingsManager=e,this.classificationCache=new Map}async classifyQuestion(e){let t=e.toLowerCase().trim();if(this.classificationCache.has(t))return console.log("AIQuestionClassifier: Using cached classification"),this.classificationCache.get(t);try{let r=this.buildClassificationPrompt(e);console.log("AIQuestionClassifier: Classifying question with AI");let o=await this.aiSettingsManager.callAI({prompt:r,max_tokens:200,temperature:.1,stream:!1}),s=this.parseClassificationResponse(o);return s=this.validateClassification(s,e),this.classificationCache.set(t,s),console.log("AIQuestionClassifier: Classification result:",s),s}catch(r){return console.error("AIQuestionClassifier: Error classifying question:",r),this.getFallbackClassification(e)}}buildClassificationPrompt(e){return'You are an expert at analyzing job application questions. Classify the following question and extract relevant keywords.\n\nQUESTION: "'.concat(e,'"\n\nAnalyze and return ONLY a JSON object with these fields:\n{\n  "question_type": "one of: language_proficiency|skill_level|years_experience|education|personal|salary|availability|notice_period|visa_status|general",\n  "keywords": ["array", "of", "relevant", "keywords"],\n  "confidence": 0.95,\n  "language": "en|de|fr|es",\n  "expected_format": "text|number|selection|boolean"\n}\n\nCLASSIFICATION RULES:\n- language_proficiency: Questions about language skills (German, English, etc.)\n- skill_level: Questions about proficiency in technologies/tools\n- years_experience: Questions asking for number of years of experience\n- education: Questions about degrees, universities, graduation\n- personal: Questions about name, contact, location, citizenship\n- salary: Questions about salary expectations or current salary\n- availability: Questions about start date, availability\n- notice_period: Questions about notice period or current employment\n- visa_status: Questions about visa, work permit, citizenship\n- general: Any other questions\n\nKEYWORD EXTRACTION:\n- Extract specific technologies, languages, skills mentioned\n- Normalize to common terms (e.g., "JS" \u2192 "JavaScript", "Deutsch" \u2192 "German")\n- Include variations and synonyms\n\nEXAMPLES:\nQ: "Wie gut beherrschen Sie Deutsch?" \u2192 {"question_type":"language_proficiency","keywords":["German"],"confidence":0.95,"language":"de","expected_format":"selection"}\nQ: "How many years of experience do you have with Python?" \u2192 {"question_type":"years_experience","keywords":["Python"],"confidence":0.9,"language":"en","expected_format":"number"}\nQ: "What is your proficiency level in SAP?" \u2192 {"question_type":"skill_level","keywords":["SAP"],"confidence":0.9,"language":"en","expected_format":"selection"}\n\nReturn ONLY the JSON object:')}parseClassificationResponse(e){var t,r,o;try{let s="";if(e!=null&&e.response)s=e.response.trim();else if((o=(r=(t=e==null?void 0:e.choices)==null?void 0:t[0])==null?void 0:r.message)!=null&&o.content)s=e.choices[0].message.content.trim();else throw new Error("Unexpected AI response format");let n=s.match(/\{[\s\S]*\}/);if(n)return JSON.parse(n[0]);throw new Error("No JSON found in response")}catch(s){throw console.error("AIQuestionClassifier: Error parsing classification response:",s),s}}validateClassification(e,t){return{question_type:["language_proficiency","skill_level","years_experience","education","personal","salary","availability","notice_period","visa_status","general"].includes(e.question_type)?e.question_type:"general",keywords:Array.isArray(e.keywords)?e.keywords:[],confidence:typeof e.confidence=="number"?e.confidence:.5,language:e.language||"en",expected_format:e.expected_format||"text"}}getFallbackClassification(e){let t=e.toLowerCase();return t.includes("deutsch")||t.includes("german")||t.includes("english")||t.includes("sprache")||t.includes("language")?{question_type:"language_proficiency",keywords:this.extractLanguageKeywords(t),confidence:.7,language:t.includes("deutsch")?"de":"en",expected_format:"selection"}:t.includes("jahr")||t.includes("year")||t.includes("erfahrung")||t.includes("experience")?{question_type:"years_experience",keywords:[],confidence:.6,language:t.includes("jahr")?"de":"en",expected_format:"number"}:{question_type:"general",keywords:[],confidence:.3,language:"en",expected_format:"text"}}extractLanguageKeywords(e){let t={deutsch:"German",german:"German",english:"English",englisch:"English",french:"French",franz\u00F6sisch:"French",spanish:"Spanish",spanisch:"Spanish",arabic:"Arabic",arabisch:"Arabic"},r=[];for(let[o,s]of Object.entries(t))e.includes(o)&&r.push(s);return r}clearCache(){this.classificationCache.clear(),console.log("AIQuestionClassifier: Cache cleared")}getCacheStats(){return{size:this.classificationCache.size,keys:Array.from(this.classificationCache.keys())}}},Ee=Z});var ee,Ce,Pe=S(()=>{ee=class{constructor(){this.dataCache=new Map}async getRelevantData(e,t){if(!e||!t)return console.log("AISmartDataRetriever: Missing classification or resumeId"),null;let r="".concat(t,"_").concat(e.question_type,"_").concat(e.keywords.join(","));if(this.dataCache.has(r))return console.log("AISmartDataRetriever: Using cached data"),this.dataCache.get(r);try{console.log("AISmartDataRetriever: Retrieving data for type: ".concat(e.question_type,", keywords: ").concat(e.keywords.join(", ")));let o=null;switch(console.log('AISmartDataRetriever: Switch statement with question_type: "'.concat(e.question_type,'"')),e.question_type){case"language_proficiency":console.log("AISmartDataRetriever: Matched language_proficiency case"),o=await this.getLanguageData(t,e.keywords),console.log("AISmartDataRetriever: getLanguageData returned:",o?Object.keys(o):"null");break;case"skill_level":case"years_experience":o=await this.getSkillExperienceData(t,e.keywords);break;case"education":o=await this.getEducationData(t,e.keywords);break;case"personal":case"visa_status":o=await this.getPersonalData(t);break;case"salary":case"availability":case"notice_period":o=await this.getEmploymentData(t);break;default:console.log('AISmartDataRetriever: Hit default case for question_type: "'.concat(e.question_type,'"')),o=await this.getGeneralData(t,e.keywords)}return o&&this.dataCache.set(r,o),console.log("AISmartDataRetriever: Retrieved data:",o?Object.keys(o):"null"),o}catch(o){return console.error("AISmartDataRetriever: Error retrieving relevant data:",o),null}}async getLanguageData(e,t){try{console.log("AISmartDataRetriever: getLanguageData called with keywords:",t);let r=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/resumes/".concat(e,"/relevant-data?questionType=language_proficiency")});if(console.log("AISmartDataRetriever: API response:",r),r&&r.success&&r.relevantData){let o=r.relevantData;if(console.log("AISmartDataRetriever: languageData received:",o),t.length>0&&o.languages){let s=o.languages.filter(n=>{var i;let a=((i=n.language)==null?void 0:i.toLowerCase())||"";return t.some(c=>a.includes(c.toLowerCase())||c.toLowerCase().includes(a))});if(s.length>0)return{languages:s}}return o}return null}catch(r){return console.error("AISmartDataRetriever: Error getting language data:",r),null}}async getSkillExperienceData(e,t){try{let r=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/resumes/".concat(e,"/relevant-data?questionType=skills")});if(r&&r.success&&r.relevantData){let o=r.relevantData,s={};if(t.length>0&&o.skills){let n=o.skills.filter(a=>{var u,p;let i=((u=a.name)==null?void 0:u.toLowerCase())||"",c=((p=a.category)==null?void 0:p.toLowerCase())||"";return t.some(b=>i.includes(b.toLowerCase())||c.includes(b.toLowerCase())||b.toLowerCase().includes(i))});n.length>0&&(s.skills=n)}if(t.length>0&&o.experiences){let n=o.experiences.filter(a=>{let i=JSON.stringify(a).toLowerCase();return t.some(c=>i.includes(c.toLowerCase()))});n.length>0&&(s.experiences=n.map(a=>{var i;return{company:a.company,position:a.position,employment_period:a.employment_period,skills_acquired:a.skills_acquired||[],key_responsibilities:((i=a.key_responsibilities)==null?void 0:i.filter(c=>{var p;let u=((p=c.description)==null?void 0:p.toLowerCase())||"";return t.some(b=>u.includes(b.toLowerCase()))}))||[]}}))}return o.personal_info&&(s.personal_info={years_of_experience:o.personal_info.years_of_experience}),Object.keys(s).length>0?s:o}return null}catch(r){return console.error("AISmartDataRetriever: Error getting skill/experience data:",r),null}}async getEducationData(e,t){try{let r=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/resumes/".concat(e,"/relevant-data?questionType=education")});return r&&r.success&&r.relevantData?r.relevantData:null}catch(r){return console.error("AISmartDataRetriever: Error getting education data:",r),null}}async getPersonalData(e){try{let t=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/resumes/".concat(e,"/relevant-data?questionType=personal")});return t&&t.success&&t.relevantData?t.relevantData:null}catch(t){return console.error("AISmartDataRetriever: Error getting personal data:",t),null}}async getEmploymentData(e){try{let t=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/resumes/".concat(e,"/relevant-data?questionType=personal")});if(t&&t.success&&t.relevantData){let r=t.relevantData.personal_info||{};return{personal_info:{salary:r.salary,location:r.location,visa_required:r.visa_required,years_of_experience:r.years_of_experience}}}return null}catch(t){return console.error("AISmartDataRetriever: Error getting employment data:",t),null}}async getGeneralData(e,t){var r,o,s,n,a;try{let i=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/resumes/".concat(e,"/relevant-data?questionType=general")});if(i&&i.success&&i.relevantData){let c=i.relevantData;return{personal_info:{name:(r=c.personal_info)==null?void 0:r.name,years_of_experience:(o=c.personal_info)==null?void 0:o.years_of_experience,location:(s=c.personal_info)==null?void 0:s.location},summary:c.summary,skills:((n=c.skills)==null?void 0:n.slice(0,5))||[],experiences:((a=c.experiences)==null?void 0:a.slice(0,2))||[]}}return null}catch(i){return console.error("AISmartDataRetriever: Error getting general data:",i),null}}generateFallbackResponse(e,t=null){if(!t||!Array.isArray(t)||t.length===0)return null;switch(console.log("AISmartDataRetriever: Generating fallback response for:",e.question_type),e.question_type){case"language_proficiency":if(t.includes("Gut"))return"Gut";if(t.includes("Verhandlungssicher"))return"Verhandlungssicher";if(t.includes("Good"))return"Good";if(t.includes("Intermediate"))return"Intermediate";break;case"years_experience":return"5";case"skill_level":if(t.includes("Intermediate"))return"Intermediate";if(t.includes("Good"))return"Good";if(t.includes("Mittel"))return"Mittel";break;case"visa_status":if(t.includes("No"))return"No";if(t.includes("Nein"))return"Nein";break}return t.length>1?t[1]:t[0]}clearCache(){this.dataCache.clear(),console.log("AISmartDataRetriever: Cache cleared")}getCacheStats(){return{size:this.dataCache.size,keys:Array.from(this.dataCache.keys())}}},Ce=ee});var te,re,Ie=S(()=>{ve();xe();Pe();te=class{constructor(e=null){this.userId=e,this.user_data=null,this.formatted_text=null,this.aiSettingsManager=new ke,this.settingsLoadPromise=null,this.questionClassifier=new Ee(this.aiSettingsManager),this.smartDataRetriever=new Ce,e&&(this.settingsLoadPromise=this.aiSettingsManager.loadAISettings(e))}async setUserId(e){this.userId=e,e&&(this.settingsLoadPromise=this.aiSettingsManager.loadAISettings(e),await this.settingsLoadPromise)}async ensureSettingsLoaded(){this.settingsLoadPromise&&(await this.settingsLoadPromise,this.settingsLoadPromise=null)}setModel(e){if(e&&typeof e=="string"){let t=this.aiSettingsManager.getCurrentSettings(),r=E(w({},t),{model:e});this.aiSettingsManager.setSettings(r),console.log("AIQuestionAnswerer: Model overridden to: ".concat(e))}}async setUserContext(e,t=null){try{if(typeof e=="object"&&e!==null)this.user_data=e,this.formatted_text=t||this.formatUserDataAsText(),console.log("User context set with structured data");else if(typeof e=="string")this.user_data=null,this.formatted_text=e,console.log("User context set with formatted text only");else throw new Error("Invalid user data format");return console.log("User context set successfully"),{success:!0}}catch(r){return console.error("Error in setUserContext:",r),{success:!1,error:r.message}}}async answerQuestion(e,t=null,r=null,o=null){var s,n,a;try{await this.ensureSettingsLoaded(),console.log("AIQuestionAnswerer: Processing question: ".concat(e));let i=null,c=null;try{i=await this.questionClassifier.classifyQuestion(e),console.log("AIQuestionAnswerer: Question classified as:",i)}catch(d){console.error("AIQuestionAnswerer: Classification failed, using fallback:",d),i={question_type:"general",keywords:[],confidence:.3}}if(o&&i)try{c=await this.smartDataRetriever.getRelevantData(i,o),console.log("AIQuestionAnswerer: Retrieved relevant data:",c?Object.keys(c):"null")}catch(d){console.error("AIQuestionAnswerer: Smart data retrieval failed:",d)}let u=this.getDirectAnswer(e,c);if(u)return console.log("AIQuestionAnswerer: Found direct answer:",u),t&&Array.isArray(t)&&t.length>0?{success:!0,answer:this.matchToOption(u,t)}:{success:!0,answer:u};if(!c||Object.keys(c).length===0){console.log("AIQuestionAnswerer: No relevant data found, trying intelligent fallback");let d=this.smartDataRetriever.generateFallbackResponse(i,t);if(d)return console.log("AIQuestionAnswerer: Using intelligent fallback answer:",d),{success:!0,answer:d}}if(r){let d=!1;if(typeof r=="function"?d=await r():r&&r.value!==void 0?d=r.value:d=!!r,d)return console.log("AIQuestionAnswerer: Stop requested before AI processing"),{success:!1,stopped:!0}}let p=this.buildSmartPrompt(e,t,c,i);console.log("=== SMART PROMPT BEING SENT ==="),console.log(p),console.log("=== END SMART PROMPT ===");let b=this.aiSettingsManager.getTokenAnalysis({prompt:p});console.log("Token Analysis:",b);let f=await this.aiSettingsManager.callAIWithStop({prompt:p,stream:!1},r);if(f&&f.stopped)return{success:!1,stopped:!0};let L="";if(f!=null&&f.response?L=f.response.trim():(a=(n=(s=f==null?void 0:f.choices)==null?void 0:s[0])==null?void 0:n.message)!=null&&a.content?L=f.choices[0].message.content.trim():(console.warn("AIQuestionAnswerer: Unexpected AI response format:",f),L=""),console.log("AIQuestionAnswerer: Raw AI response:",L),i.question_type==="years_experience"&&/^\d+$/.test(L)){let d=parseInt(L);d<5&&(L="5",console.log("AIQuestionAnswerer: Enforced minimum 5 years for experience question, was: ".concat(d)))}return t&&Array.isArray(t)&&t.length>0&&(L=this.matchToOption(L,t)),{success:!0,answer:L||"Information not available"}}catch(i){console.error("AIQuestionAnswerer: Error in answerQuestion:",i);let c="Information not available";return classification&&t&&(c=this.smartDataRetriever.generateFallbackResponse(classification,t)),!c&&t&&Array.isArray(t)&&t.length>0&&(c=t.length>1?t[1]:t[0]),console.log("AIQuestionAnswerer: Using fallback answer:",c),{success:!1,answer:c,error:i.message}}}detectQuestionType(e){let t=e.toLowerCase();return t.includes("level of")||t.includes("proficiency in")||t.includes("fluent in")?"language_level":t.includes("skill")||t.includes("experience")||t.includes("years")||t.includes("technology")||t.includes("programming")||t.includes("language")||t.includes("c++")||t.includes("python")||t.includes("java")?"skills":t.includes("education")||t.includes("degree")||t.includes("study")||t.includes("university")||t.includes("college")?"education":t.includes("language")||t.includes("speak")||t.includes("fluent")?"languages":t.includes("certification")||t.includes("certified")?"certifications":t.includes("name")||t.includes("email")||t.includes("phone")||t.includes("contact")||t.includes("location")?"personal":t.includes("visa")||t.includes("sponsorship")||t.includes("work permit")?"visa":t.includes("salary")||t.includes("compensation")||t.includes("pay")||t.includes("expectation")?"salary":t.includes("notice")||t.includes("period")||t.includes("availability")||t.includes("start date")?"notice":"general"}getDirectAnswer(e,t=null){var s;if(t){let n=e.toLowerCase();if(t.languages&&(n.includes("level of")||n.includes("proficiency"))){for(let a of["german","english","french","arabic","spanish"])if(n.includes(a)){let i=t.languages.find(c=>{var u;return((u=c.language)==null?void 0:u.toLowerCase())===a});if(i)return i.proficiency||"Unknown"}}if(t.personal_info){if(n.includes("email")||n.includes("e-mail"))return t.personal_info.email||null;if(n.includes("phone")||n.includes("telephone")||n.includes("mobile"))return t.personal_info.phone||null;if(n.includes("name"))return t.personal_info.name||null;if(n.includes("location")||n.includes("address"))return t.personal_info.location||null;if(n.includes("citizenship"))return t.personal_info.citizenship||null;if(n.includes("visa")||n.includes("sponsorship"))return t.personal_info.visa_required||null;if(n.includes("salary")||n.includes("compensation")||n.includes("pay"))return t.personal_info.salary||null}}if(!((s=this.user_data)!=null&&s.personal_information))return null;let r=this.user_data.personal_information,o=e.toLowerCase();return o.includes("email")||o.includes("e-mail")?r.email||null:o.includes("phone")||o.includes("mobile")||o.includes("telefon")?(r.phone_prefix?"".concat(r.phone_prefix).concat(r.phone):r.phone)||null:o.includes("first name")||o.includes("vorname")?r.name||null:o.includes("last name")||o.includes("surname")||o.includes("nachname")?r.surname||null:o.includes("country")&&!o.includes("code")?r.country||null:this.isNoticePeriodOrStartDateQuestion(e)?o.includes("notice period")||o.includes("k\xFCndigungsfrist")||o.includes("kuendigungsfrist")?o.includes("monate")||o.includes("deutsch")?"2 Monate":"2 months":this.calculateDateTwoMonthsFromNow():null}buildSmartPrompt(e,t,r,o){let s;r&&Object.keys(r).length>0?(s=this.formatRelevantDataAsText(r),console.log("AIQuestionAnswerer: Using focused relevant data for prompt")):(s="No specific relevant data available in resume.",console.log("AIQuestionAnswerer: No relevant data - using fallback prompt"));let n='You are a job applicant filling out a job application form. Answer questions based on your resume information in first person (as "I" not "he/she").\n\nRELEVANT RESUME DATA:\n'.concat(s,"\n\nQUESTION: ").concat(e,'\n\nIMPORTANT GENERAL RULES:\n- Answer as the job applicant (use "I", "my", "me" - NOT "he", "she", "Sami", or third person)\n- Be concise and direct\n- Only provide the specific information requested\n- Do not mention your name unless explicitly asked');switch(o.question_type){case"years_experience":n+='\n\nIMPORTANT RULES FOR YEARS OF EXPERIENCE:\n- If asked for years of experience, provide ONLY a number between 5-99\n- MINIMUM is always 5 years - never return 0, 1, 2, 3, or 4\n- Do NOT include words like "years", "Jahre", or descriptions\n- Calculate based on work experience and skill level\n- If no specific experience found, default to 5 years minimum\n- Example: "5" not "5 years" or "5 Jahre"';break;case"language_proficiency":n+="\n\nIMPORTANT RULES FOR LANGUAGE PROFICIENCY:\n- Choose the most accurate proficiency level based on resume data\n- If no specific language data available, choose a realistic favorable level\n- Common levels: Beginner, Intermediate, Advanced, Professional, Native";break;case"skill_level":n+="\n\nIMPORTANT RULES FOR SKILL LEVELS:\n- Base skill level on experience with the technology/tool\n- If no specific experience found, choose a moderate favorable level\n- Consider years of experience and project involvement";break}return t&&Array.isArray(t)&&t.length>0&&(n+="\n\nAvailable Options: ".concat(JSON.stringify(t),"\n\nIMPORTANT: You MUST choose EXACTLY ONE option from the list above. Your answer should match one of the options EXACTLY as written.")),n+="\n\nANSWER:",n}buildEnhancedPrompt(e,t,r=null){let o;r&&Object.keys(r).length>0?(o=this.formatRelevantDataAsText(r),console.log("Using relevant data sections for prompt")):(o=this.formatUserDataAsText(),console.log("Using full resume for prompt (no relevant data available)"));let s='You are a job applicant filling out a job application form. Answer questions based on your resume information in first person (as "I" not "he/she").\n\nMY RESUME:\n'.concat(o,"\n\nQUESTION: ").concat(e,'\n\nIMPORTANT GENERAL RULES:\n- Answer as the job applicant (use "I", "my", "me" - NOT "he", "she", "Sami", or third person)\n- Be concise and direct\n- Only provide the specific information requested\n- Do not mention your name unless explicitly asked');if(this.isDecimalNumberQuestion(e)&&(s+='\n\nIMPORTANT RULES FOR DECIMAL NUMBERS:\n- If asked for a decimal number, provide ONLY a decimal number (e.g., "3.5", "2.0", "1.2")\n- Do NOT include explanations, descriptions, or additional text\n- The number should be greater than 0.0 as requested\n- Example: "3.0" not "3.0 years" or explanations'),this.isYearsOfExperienceQuestion(e)&&(s+='\n\nIMPORTANT RULES FOR YEARS OF EXPERIENCE:\n- If asked for years of experience, provide ONLY a number between 5-99\n- MINIMUM is always 5 years - never return 0, 1, 2, 3, or 4\n- Do NOT include words like "years", "Jahre", or descriptions\n- For skill levels: Beginner=5, Intermediate=7, Advanced=10+ years\n- Calculate based on work experience and skill level\n- If no specific experience found, default to 5 years minimum\n- If unclear or no data, always answer at least 5 years to maximize job prospects\n- Example: "5" not "5 years" or "5 Jahre"\n- Better to overestimate than underestimate for better interview chances'),this.isDegreeQuestion(e)&&(s+='\n\nIMPORTANT RULES FOR DEGREE QUESTIONS:\n- Check education section carefully for exact degree matches\n- "Bachelor" = "Bachelor of Engineering" or "Bachelor of Science"\n- "Master" = "Master of Engineering" or "Master of Science"\n- Answer "Ja" for German forms, "Yes" for English forms\n- If degree is found, answer positively\n- Look for exact degree names in education section'),this.isSkillLevelQuestion(e)&&(s+="\n\nIMPORTANT RULES FOR SKILL LEVEL QUESTIONS:\n- Check the skills section for exact skill matches\n- Look for the skill name and its level (Beginner/Intermediate/Advanced)\n- Be precise about the level mentioned in the resume\n- Do not guess or estimate levels"),this.isNoticePeriodOrStartDateQuestion(e)){let n=this.calculateDateTwoMonthsFromNow();s+='\n\nIMPORTANT RULES FOR NOTICE PERIOD AND START DATE:\n- For notice period questions, answer "2 months" or "2 Monate"\n- For starting date questions, provide the exact date: '.concat(n,'\n- Use the format DD.MM.YYYY for German forms (e.g., "15.03.2024")\n- Use the format MM/DD/YYYY for English forms (e.g., "03/15/2024")\n- Current calculated start date (2 months from today): ').concat(n,"\n- Be consistent with the date format expected by the form")}if(t&&Array.isArray(t)&&t.length>0){let n=t.map(a=>'"'.concat(a,'"')).join(", ");s+="\n\nAvailable Options: [".concat(n,"]\n\nIMPORTANT: You MUST choose EXACTLY ONE option from the list above. Your answer should match one of the options EXACTLY as written.")}return s+="\n\nANSWER:",s}isDecimalNumberQuestion(e){let t=e.toLowerCase();return t.includes("decimal")||t.includes("dezimal")||t.includes("gr\xF6\xDFer als 0.0")||t.includes("greater than 0.0")||t.includes("decimal zahl")||t.includes("decimal number")}isYearsOfExperienceQuestion(e){let t=e.toLowerCase();return t.includes("jahre")||t.includes("years")||t.includes("experience")||t.includes("erfahrung")||t.includes("how many")||t.includes("wie viele")}isDegreeQuestion(e){let t=e.toLowerCase();return t.includes("bachelor")||t.includes("master")||t.includes("degree")||t.includes("abschluss")||t.includes("bildung")||t.includes("education")}isSkillLevelQuestion(e){let t=e.toLowerCase();return t.includes("level")||t.includes("niveau")||t.includes("skill")||t.includes("f\xE4higkeit")||t.includes("experience with")||t.includes("erfahrung mit")}isNoticePeriodOrStartDateQuestion(e){let t=e.toLowerCase();return t.includes("notice period")||t.includes("starting date")||t.includes("start date")||t.includes("startdatum")||t.includes("beginn")||t.includes("beginnen")||t.includes("k\xFCndigungsfrist")||t.includes("kuendigungsfrist")||t.includes("verf\xFCgbar")||t.includes("verfuegbar")||t.includes("available")||t.includes("wann k\xF6nnen sie")||t.includes("when can you")||t.includes("earliest start")||t.includes("fr\xFChester beginn")||t.includes("fruehester beginn")}calculateDateTwoMonthsFromNow(){let e=new Date;e.setMonth(e.getMonth()+2);let t=String(e.getDate()).padStart(2,"0"),r=String(e.getMonth()+1).padStart(2,"0"),o=e.getFullYear();return"".concat(t,".").concat(r,".").concat(o)}formatUserDataAsText(){return this.formatted_text?this.formatted_text:this.user_data?typeof this.user_data=="string"?this.user_data:this.formatObject(this.user_data,0):"No user data available."}formatRelevantDataAsText(e){let t="";for(let r in e)if(Object.prototype.hasOwnProperty.call(e,r)){let o=e[r];o&&Object.keys(o).length>0&&(t+="\n".concat(r.toUpperCase().replace(/_/g," "),":\n"),t+=this.formatObject(o,1))}return t||"No relevant data available."}formatObject(e,t=0){let r="  ".repeat(t),o="";if(typeof e=="object"&&e!==null)if(Array.isArray(e))for(let s of e)typeof s=="object"&&s!==null?o+="".concat(r,"- ").concat(this.formatObject(s,t+1)):o+="".concat(r,"- ").concat(s,"\n");else for(let[s,n]of Object.entries(e)){let a=s.toUpperCase().replace(/_/g," ");o+="".concat(r).concat(a,":\n"),typeof n=="object"&&n!==null?o+=this.formatObject(n,t+1):o+="".concat(r,"  ").concat(n,"\n")}else o+="".concat(r).concat(e,"\n");return o}matchToOption(e,t){if(!e||!t||t.length===0)return(t==null?void 0:t.length)>0?t[0]:"Not available";if(this.isDecimalNumberQuestion(e)||/^\d+\.\d+$/.test(e.trim())){let r=e.match(/\d+\.\d+/);if(r){let o=r[0];for(let s of t)if(s.includes(o))return s;return o}}if(this.isYearsOfExperienceQuestion(e)||/^\d+$/.test(e.trim())){let r=e.match(/\d+/);if(r){let o=parseInt(r[0]);this.isYearsOfExperienceQuestion(e)&&o<5&&(o=5);let s=o.toString();for(let n of t)if(n.includes(s))return n;return s}}if(this.isNoticePeriodOrStartDateQuestion(e)){if(e.toLowerCase().includes("2 months")||e.toLowerCase().includes("2 monate")){for(let o of t)if(o.toLowerCase().includes("2 months")||o.toLowerCase().includes("2 monate")||o.toLowerCase().includes("2 month"))return o;return e}let r=e.match(/\d{1,2}[.\/-]\d{1,2}[.\/-]\d{4}/);if(r){let o=r[0];for(let s of t)if(s.includes(o))return s;return o}}for(let r of t)if(r.toLowerCase()===e.toLowerCase())return r;for(let r of t)if(r.toLowerCase().includes(e.toLowerCase())||e.toLowerCase().includes(r.toLowerCase()))return r;if(e.toLowerCase().includes("germany")||e.toLowerCase().includes("deutsch")){for(let r of t)if(r.toLowerCase().includes("deutsch")||r.toLowerCase().includes("germany")||r.includes("+49"))return r}return t.length>1?t[1]:t[0]}async testConnection(){try{return await this.ensureSettingsLoaded(),(await this.aiSettingsManager.testConnection()).success}catch(e){return console.error("Error testing AI connection:",e),!1}}getAISettings(){return this.aiSettingsManager.getCurrentSettings()}clear(){this.user_data=null,this.formatted_text=null,this.aiSettingsManager.clear(),this.settingsLoadPromise=null}},re=te});var oe,Ge,$e,qe=S(()=>{P();oe=class extends A{constructor(){super()}debugLog(e,...t){console.log("[ApplicationTracker] ".concat(e),...t)}errorLog(e,t){console.error("[ApplicationTracker] ".concat(e,":"),t)}async createSuccessfulApplication(e,t,r,o,s=[]){try{this.debugLog("Creating successful application record...");let n=await this.createOrFindCompany(e),a=await this.createOrFindJob(e,n.id),i=await this.createApplication({user_id:t.id,job_id:a.id,ai_settings_id:r.id,resume_id:o,status:"applied",notes:null});return this.debugLog("Successful application saved: ".concat(i.id)),s&&s.length>0&&(this.debugLog("Saving ".concat(s.length," questions/answers for application ").concat(i.id)),await this.saveQuestionsAnswers(i.id,s)),i}catch(n){throw this.errorLog("Error creating successful application:",n),n}}async saveQuestionsAnswers(e,t){try{for(let r of t){let o={application_id:e,question:r.question,answer:r.answer,question_type:r.question_type||"general",ai_model_used:r.ai_model_used||"unknown",confidence_score:r.confidence_score||.95,is_skipped:r.is_skipped||!1},s=await chrome.runtime.sendMessage({action:"apiRequest",method:"POST",url:"/questions-answers",data:o});s&&s.success?this.debugLog("Question/answer saved: ".concat(s.question_answer.id)):this.debugLog("Failed to save question/answer: ".concat(s==null?void 0:s.error))}this.debugLog("Successfully saved ".concat(t.length," questions/answers for application ").concat(e))}catch(r){this.errorLog("Error saving questions/answers:",r)}}async createOrFindCompany(e){try{if(this.debugLog("Creating/finding company for job info:",e),this.debugLog("Job info type:",typeof e),this.debugLog("Job info keys:",e?Object.keys(e):"null"),!e||!e.company)throw this.debugLog("Job info or company name is missing:",{jobInfo:e,company:e==null?void 0:e.company}),new Error("Company name is required");let t=await this.findCompanyByName(e.company);if(t)return this.debugLog("Found existing company: ".concat(t.name)),t;let r={name:e.company,industry:null,size:null,location:e.location,website:null,linkedin_url:null};this.debugLog("Creating new company with data:",r);let o=await this.createCompany(r);if(!o)throw new Error("Failed to create company - API request returned null");return this.debugLog("Created new company: ".concat(o.name)),o}catch(t){throw this.errorLog("Error creating/finding company:",t),t}}async createOrFindJob(e,t){var r;try{if(!e.title)throw new Error("Job title is required");if(e.jobId){let s=await this.findJobByPlatformId("linkedin",e.jobId);if(s)return this.debugLog("Found existing job: ".concat(s.title)),s}let o=await this.createJob({company_id:t,title:e.title,location:e.location,is_remote:((r=e.remoteType)==null?void 0:r.toLowerCase().includes("remote"))||!1,job_type:this.normalizeJobType(e.jobType),platform:"linkedin",platform_job_id:e.jobId,job_url:window.location.href,job_description:e.description,applicant_count:this.parseApplicantCount(e.applicantCount),posted_date:this.parsePostedDate(e.postedDate),status:"active"});if(!o)throw new Error("Failed to create job - API request returned null");return this.debugLog("Created new job: ".concat(o.title)),o}catch(o){throw this.errorLog("Error creating/finding job:",o),o}}async createApplication(e){try{this.debugLog("Creating application with data:",e);let t=await chrome.runtime.sendMessage({action:"apiRequest",method:"POST",url:"/applications",data:e});if(this.debugLog("Application creation response:",t),t&&t.success)return this.debugLog("Application created: ".concat(t.application.id)),t.application;if(t!=null&&t.error&&t.error.includes('duplicate key value violates unique constraint "applications_user_id_job_id_key"')){this.debugLog("Application already exists, fetching existing application...");let r=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/applications/user/".concat(e.user_id,"/job/").concat(e.job_id)});if(r&&r.success)return this.debugLog("Found existing application: ".concat(r.application.id)),r.application;throw this.debugLog("Failed to fetch existing application, falling back to error"),new Error((t==null?void 0:t.error)||"Failed to create application")}else throw this.debugLog("Failed to create application: ".concat(t==null?void 0:t.error)),new Error((t==null?void 0:t.error)||"Failed to create application")}catch(t){throw this.errorLog("Error creating application:",t),t}}async findCompanyByName(e){try{this.debugLog("Searching for company by name:",e);let t=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/companies/name/".concat(encodeURIComponent(e))});return this.debugLog("Company search response:",t),t!=null&&t.success?t.company:null}catch(t){return this.debugLog("Error finding company:",t),null}}async createCompany(e){try{this.debugLog("Sending API request to create company:",e);let t=await chrome.runtime.sendMessage({action:"apiRequest",method:"POST",url:"/companies",data:e});if(this.debugLog("Company creation API response:",t),!t)throw new Error("No response received from API");if(!t.success)throw new Error("API request failed: ".concat(t.error||"Unknown error"));if(!t.company)throw new Error("API returned success but no company data");return t.company}catch(t){throw this.errorLog("Error creating company:",t),t}}async findJobByPlatformId(e,t){try{this.debugLog("Searching for job by platform ID:",{platform:e,platformJobId:t});let r=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/jobs/platform/".concat(e,"/").concat(t)});return this.debugLog("Job search response:",r),r!=null&&r.success?r.job:null}catch(r){return this.debugLog("Error finding job:",r),null}}async createJob(e){try{this.debugLog("Sending API request to create job:",e);let t=await chrome.runtime.sendMessage({action:"apiRequest",method:"POST",url:"/jobs",data:e});if(this.debugLog("Job creation API response:",t),!t)throw new Error("No response received from API");if(!t.success)throw new Error("API request failed: ".concat(t.error||"Unknown error"));if(!t.job)throw new Error("API returned success but no job data");return t.job}catch(t){throw this.errorLog("Error creating job:",t),t}}normalizeJobType(e){if(!e)return"full-time";let t=e.toLowerCase();return t.includes("full")?"full-time":t.includes("part")?"part-time":t.includes("contract")?"contract":t.includes("intern")?"internship":"full-time"}parseApplicantCount(e){if(!e)return 0;let t=e.match(/(\d+)/);return t?parseInt(t[1]):0}parsePostedDate(e){if(!e)return new Date;let t=new Date;if(e.includes("today"))return t;if(e.includes("yesterday")){let o=new Date(t);return o.setDate(o.getDate()-1),o}let r=e.match(/(\d+)\s*days?\s*ago/);if(r){let o=parseInt(r[1]),s=new Date(t);return s.setDate(s.getDate()-o),s}return t}getCurrentApplicationData(){return{application:this.currentApplication,questionsAnswers:this.questionsAnswers}}},Ge=new oe,$e=Ge});var se,I,ne=S(()=>{P();Ie();qe();se=class extends A{static async closeForm(e=!1){var t,r;try{let o=document.querySelector('button[aria-label="Dismiss"]');if(o||(o=document.querySelector('button[aria-label="Close"]')||document.querySelector('button[aria-label="Cancel"]')||document.querySelector("button[data-test-modal-close-btn]")),o){if(o.click(),await this.wait(),e){let s=document.querySelector('button[data-control-name="save_application_btn"]');s&&(s.click(),this.debugLog("Closed form and saved application"))}else{let s=document.querySelector('button[data-control-name="discard_application_confirm_btn"]')||document.querySelector("button[data-test-dialog-secondary-btn]");s&&(s.click(),this.debugLog("Closed form and discarded application"))}await this.wait()}}catch(o){this.errorLog("Error closing form",o);try{let s=document.querySelectorAll("button");for(let n of s)(n.textContent.toLowerCase().includes("close")||n.textContent.toLowerCase().includes("cancel")||(t=n.getAttribute("aria-label"))!=null&&t.toLowerCase().includes("close")||(r=n.getAttribute("aria-label"))!=null&&r.toLowerCase().includes("dismiss"))&&(n.click(),await this.wait(500))}catch(s){this.errorLog("Failed final attempt to close form",s)}}}static async clickNextPage(){try{await this.wait();let e=document.querySelector('button[aria-label="Continue to next step"]');e&&(e.click(),this.debugLog("Clicked on next page button"))}catch(e){this.errorLog("Error clicking on next page button",e)}}static async clickPreviousPage(){try{await this.wait();let e=document.querySelector('button[aria-label="Back to previous step"]');e&&(e.click(),this.debugLog("Clicked on previous page button"))}catch(e){this.errorLog("Error clicking on previous page button",e)}}static async clickReviewApplication(){try{await this.wait();let e=document.querySelector('button[aria-label="Review your application"]');e&&(e.click(),this.debugLog("Clicked on review button"))}catch(e){this.errorLog("Error clicking on review button",e)}}static async clickSubmitApplication(){try{await this.wait();let e=document.querySelector('button[aria-label="Submit application"]');e&&(e.click(),this.debugLog("Clicked on submit button"))}catch(e){this.errorLog("Error clicking on submit button",e)}}static async clickDoneAfterSubmit(){try{let e=document.querySelector('button[aria-label="Done"]');if(!e&&(e=document.querySelector(".artdeco-modal__actionbar button.artdeco-button--primary"),e)){let t=e.querySelector("span.artdeco-button__text");!t||t.textContent.trim()!=="Done"?e=null:this.debugLog("Found Done button in modal actionbar")}if(!e){let t=document.querySelectorAll("button.artdeco-button.artdeco-button--primary");for(let r of t){let o=r.querySelector("span.artdeco-button__text");if(o&&o.textContent.trim()==="Done"){e=r,this.debugLog("Found Done button by primary button search");break}}}e?(this.debugLog("Clicking Done button to complete submission"),e.click(),this.debugLog("Successfully clicked Done button")):this.debugLog("Done button not found - may not be required for this form type")}catch(e){this.errorLog("Error clicking on Done button",e)}}static async clickDismissAfterSubmit(){try{let e=document.querySelector('button[aria-label="Dismiss"]');if(e||(e=document.querySelector("button[data-test-modal-close-btn]")),!e){let t=document.querySelectorAll("button.artdeco-button--circle.artdeco-modal__dismiss");for(let r of t)if(r.querySelector('svg use[href="#close-medium"]')){e=r;break}}e?(e.click(),this.debugLog("Clicked on Dismiss button")):this.debugLog("Dismiss button not found")}catch(e){this.errorLog("Error clicking on Dismiss button",e)}}static async findReviewButton(){try{return document.querySelector('button[aria-label="Review your application"]')}catch(e){return this.errorLog("Error finding review button",e),null}}static async findNextButton(){try{return document.querySelector('button[aria-label="Continue to next step"]')}catch(e){return this.errorLog("Error finding next button",e),null}}static async findSubmitButton(){try{return document.querySelector('button[aria-label="Submit application"]')}catch(e){return this.errorLog("Error finding submit button",e),null}}static async findDoneButton(){try{let e=document.querySelector('button[aria-label="Done"]');if(!e){let t=document.querySelectorAll("button.artdeco-button");for(let r of t){let o=r.querySelector("span.artdeco-button__text");if(o&&o.textContent.trim()==="Done"){e=r;break}}}return e}catch(e){return this.errorLog("Error finding done button",e),null}}static async processForm(e,t=null){let r=null;try{this.debugLog("Starting form processing"),this.currentJobInfo=t,this.collectedQuestionsAnswers=[],this.lastProgressTime=Date.now(),this.noProgressCount=0,this.debugLog("Job info stored for successful completion"),r=setTimeout(async()=>{this.debugLog("Form processing timeout reached - closing form automatically");try{await this.closeForm(!1),this.debugLog("Form closed due to timeout")}catch(n){this.errorLog("Error closing form after timeout:",n)}typeof e=="object"&&e.hasOwnProperty("value")&&(e.value=!0)},3*60*1e3);let o=!1,s=!1;for(;!s;){if(typeof e=="function"?s=await e():e&&e.value!==void 0?s=e.value:s=!!e,s){this.debugLog("Stop requested during form processing");break}try{if(await this.findReviewButton()){this.debugLog("Found review button"),this.lastProgressTime=Date.now(),this.noProgressCount=0;let u=setTimeout(()=>{this.debugLog("Review processing timeout reached"),e.value=!0},1*60*1e3);if(document.querySelectorAll("div.fb-dash-form-element").length>0&&!o){this.debugLog("Found questions on current page, processing before review");let f=await this.processFormQuestions(e);if(f.stopped){this.debugLog("Form questions processing stopped by user");break}f.success||this.debugLog("Form questions processing failed"),o=!0,this.debugLog("Current page form questions processed, will not reprocess")}else o?this.debugLog("Skipping redundant form processing for current page"):this.debugLog("No form questions found on current page");if(await this.clickReviewApplication(),await this.wait(2e3),typeof e=="function"?s=await e():e&&e.value!==void 0?s=e.value:s=!!e,s){this.debugLog("Stop requested after clicking review");break}if(document.querySelectorAll("div.fb-dash-form-element").length>0){this.debugLog("Found questions on review page");let f=await this.processFormQuestions(e);if(f.stopped){this.debugLog("Review questions processing stopped by user");break}f.success||this.debugLog("Review questions processing failed")}else this.debugLog("No questions found on review page");await this.clickSubmitApplication(),await this.wait(2e3),await this.clickDoneAfterSubmit(),await this.wait(1e3),await this.clickDismissAfterSubmit(),await this.saveSuccessfulApplication(),this.debugLog("Clicked submit button after review"),clearTimeout(u);break}if(document.querySelectorAll("div.fb-dash-form-element").length>0&&!o){this.debugLog("Found form questions, processing..."),this.lastProgressTime=Date.now(),this.noProgressCount=0;let u=await this.processFormQuestions(e);if(u.stopped){this.debugLog("Form questions processing stopped by user");break}u.success||this.debugLog("Form questions processing failed"),o=!0,this.debugLog("Form questions processed")}if(await this.findNextButton()){if(this.debugLog("Found next button, moving to next page"),this.lastProgressTime=Date.now(),this.noProgressCount=0,await this.clickNextPage(),await this.wait(2e3),typeof e=="function"?s=await e():e&&e.value!==void 0?s=e.value:s=!!e,s){this.debugLog("Stop requested after navigation");break}o=!1;continue}if(await this.findSubmitButton()){if(this.debugLog("Found submit button, submitting application"),this.lastProgressTime=Date.now(),this.noProgressCount=0,typeof e=="function"?s=await e():e&&e.value!==void 0?s=e.value:s=!!e,s){this.debugLog("Stop requested before final submit");break}await this.clickSubmitApplication(),await this.wait(2e3),await this.clickDoneAfterSubmit(),await this.wait(1e3),await this.clickDismissAfterSubmit(),await this.saveSuccessfulApplication();break}if(this.debugLog("No navigation buttons found, waiting..."),await this.wait(1e3),!this.lastProgressTime)this.lastProgressTime=Date.now(),this.noProgressCount=0;else if(this.noProgressCount=(this.noProgressCount||0)+1,this.noProgressCount>=30){this.debugLog("No progress for 30 seconds - closing form automatically");try{await this.closeForm(!1),this.debugLog("Form closed due to no progress")}catch(u){this.errorLog("Error closing form after no progress:",u)}break}}catch(n){this.errorLog("Error in form processing loop",n),await this.wait(2e3)}}return clearTimeout(r),this.lastProgressTime=null,this.noProgressCount=0,this.debugLog("Form processing completed successfully"),!0}catch(o){this.errorLog("Error processing form",o),r&&clearTimeout(r),this.lastProgressTime=null,this.noProgressCount=0,this.debugLog("Closing form due to critical processing error");try{await this.closeForm(!1),this.debugLog("Form closed due to processing error")}catch(s){this.errorLog("Error closing form after processing error:",s)}return!1}}static async saveSuccessfulApplication(){var e;try{if(this.debugLog("Saving successful application"),!this.currentJobInfo){this.debugLog("No job info available, skipping application save");return}let t=await chrome.storage.local.get(["currentUser"]);if(!t.currentUser){this.debugLog("No current user found, skipping application save");return}let r=window.currentAiSettings;if(!r){this.debugLog("No AI settings found, skipping application save");return}let o=await chrome.storage.local.get(["currentResumeId"]);if(!o.currentResumeId){this.debugLog("No current resume ID found, skipping application save");return}await $e.createSuccessfulApplication(this.currentJobInfo,t.currentUser,r,o.currentResumeId,this.collectedQuestionsAnswers||[]),this.debugLog("Successful application saved with ".concat(((e=this.collectedQuestionsAnswers)==null?void 0:e.length)||0," questions/answers"))}catch(t){this.errorLog("Error saving successful application:",t)}}static shouldSkipQuestion(e){let t=e.toLowerCase();return this.shouldSkipQuestionDirect(t)}static shouldSkipQuestionDirect(e){return!!(e.includes("email")||e.includes("e-mail")||e.includes("e-mail-adresse")||["phone","mobile","cell","telephone","handy","telefon","handynummer","handynumer","mobilnummer","handy","tel\xE9fono","m\xF3vil","celular","tel\xE9fono m\xF3vil","t\xE9l\xE9phone","portable","mobile","t\xE9l\xE9phone portable","telefono","cellulare","mobile","telefono cellulare"].some(n=>e.includes(n))||["country code","area code","phone prefix","calling code","prefix","landsvorwahl","vorwahl","l\xE4ndercode","vorwahl","c\xF3digo de pa\xEDs","c\xF3digo de \xE1rea","prefijo","c\xF3digo","indicatif pays","indicatif","pr\xE9fixe","indicatif t\xE9l\xE9phonique","prefisso","codice paese","prefisso telefonico"].some(n=>e.includes(n))||["contact information","contact details","contact","kontaktinformation","kontaktdaten","kontakt","informaci\xF3n de contacto","datos de contacto","contacto","coordonn\xE9es","informations de contact","contact","informazioni di contatto","dati di contatto","contatto"].some(n=>e.includes(n))||["first name","last name","full name","name","given name","family name","vorname","nachname","vollst\xE4ndiger name","name","familienname","nombre","apellido","nombre completo","primer nombre","segundo nombre","pr\xE9nom","nom","nom complet","nom de famille","nome","cognome","nome completo","nome di battesimo"].some(n=>e.includes(n)))}static getHardcodedAnswer(e,t=[]){let r=e.toLowerCase();if(r.includes("comfortable commuting")||r.includes("commute to this")||r.includes("willing to commute")||r.includes("able to commute")||r.includes("commuting to this job")||r.includes("travel to this location")||r.includes("comfortable traveling")||r.includes("commut")&&r.includes("location")||r.includes("travel")&&r.includes("job")&&r.includes("location")){for(let o of t)if(o.toLowerCase().trim()==="yes"||o.toLowerCase().trim()==="ja"||o.toLowerCase().trim()==="oui"||o.toLowerCase().trim()==="s\xED")return o.trim();return"Yes"}return null}static async processFormQuestions(e=null){try{this.debugLog("Processing form questions");let t=document.querySelectorAll("div.fb-dash-form-element");this.debugLog("Found ".concat(t.length," form elements"));for(let r of t){if(e){let o=!1;if(typeof e=="function"?o=await e():e&&e.value!==void 0?o=e.value:o=!!e,o)return this.debugLog("Stop requested during form questions processing"),{stopped:!0}}try{let o=r.querySelector("legend span.fb-dash-form-element__label span")||r.querySelector("label");if(!o){this.debugLog("No label found for form element");continue}let s=o.textContent.trim();if(s=s.replace(/(.+?)\1/,"$1"),this.debugLog("Processing question: ".concat(s)),this.shouldSkipQuestion(s)){this.debugLog("Skipping prefilled question: ".concat(s));continue}let n=r.querySelector("input, textarea, select");if(!n){this.debugLog("No input field found for question");continue}let a=[];switch(n.tagName.toLowerCase()){case"input":n.type==="radio"&&r.querySelectorAll('input[type="radio"]').forEach(u=>{let p=r.querySelector('label[for="'.concat(u.id,'"]'));p&&a.push(p.textContent.trim())});break;case"select":a=Array.from(n.options).map(c=>c.text.trim());break}a.length>0&&this.debugLog('Available options for "'.concat(s,'":'));let i=await this.answerQuestion(s,a,n,r,e);if(i.stopped)return this.debugLog("Form questions processing stopped by user"),{stopped:!0};i.success||this.debugLog("Failed to answer question: ".concat(s))}catch(o){this.errorLog("Error processing form element: ".concat(o.message),o)}}return this.debugLog("Completed processing form questions"),{success:!0}}catch(t){return this.errorLog("Error in processFormQuestions",t),{success:!1}}}static async answerQuestion(e,t=[],r,o,s=null){var n;try{let a=this.getHardcodedAnswer(e,t);if(a){this.debugLog("Using hardcoded answer for question: ".concat(e," -> ").concat(a)),await this.fillFieldWithAnswer(r,o,a,e);try{let m=this.detectQuestionType(e),q=this.shouldSkipQuestion(e);this.collectedQuestionsAnswers.push({question:e,answer:a,question_type:m,ai_model_used:"hardcoded",confidence_score:1,is_skipped:q}),this.debugLog("Collected hardcoded question/answer (".concat(this.collectedQuestionsAnswers.length," total)"))}catch(m){this.errorLog("Error collecting hardcoded question/answer:",m)}await this.wait(1500);let d=await this.handleValidationErrorsWithRetry(e,t,r,o,s,null,a);return d.stopped?{stopped:!0}:{success:d.success}}let i=null;window.currentAiSettings&&(i=window.currentAiSettings,this.debugLog("Using AI settings from current settings:",i));let c=null;try{let d=await chrome.storage.local.get(["currentUser"]);d.currentUser&&d.currentUser.id&&(c=d.currentUser.id,this.debugLog("Using user ID: ".concat(c)))}catch(d){this.errorLog("Error getting current user:",d)}let u=new re(c);if(i){let d={ai_provider:i.provider,ai_model:i.model,apiKey:i.apiKey,is_default:!0};u.aiSettingsManager.setSettings(d),this.debugLog("Set AI settings directly: provider=".concat(d.ai_provider,", model=").concat(d.ai_model))}this.debugLog("Answering question: ".concat(e)),this.debugLog("Available options:",t);try{let d=await chrome.storage.local.get(["userResumeData","userResumeText","userResumeType"]);d&&(d.userResumeData||d.userResumeText)?(this.debugLog("Found user resume data in storage"),d.userResumeData?(await u.setUserContext(d.userResumeData,d.userResumeText),this.debugLog("Set structured user context in AI instance")):(await u.setUserContext(d.userResumeText),this.debugLog("Set text user context in AI instance"))):this.debugLog("No user resume found in storage")}catch(d){this.errorLog("Error loading user resume from storage:",d)}let p=null;try{this.debugLog("=== RESUME ID RETRIEVAL DEBUG ===");let d=await chrome.storage.local.get(["currentResumeId"]);if(this.debugLog("Resume result from storage:",d),d.currentResumeId)p=d.currentResumeId,this.debugLog("Using resume ID from storage: ".concat(p));else if(this.debugLog("No resume ID in storage, fetching from database..."),c){this.debugLog("Fetching default resume for user: ".concat(c));let m=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/users/".concat(c,"/resumes/default")});this.debugLog("Default resume API response:",m),this.debugLog("Response success:",m==null?void 0:m.success),this.debugLog("Response resume:",m==null?void 0:m.resume),this.debugLog("Response error:",m==null?void 0:m.error),m&&m.success&&m.resume?(p=m.resume.id,this.debugLog("Got resume ID from database: ".concat(p)),await chrome.storage.local.set({currentResumeId:p}),this.debugLog("Stored resume ID in storage for future use")):(this.debugLog("Failed to get default resume from database:",m),this.debugLog("Response details:",{success:m==null?void 0:m.success,error:m==null?void 0:m.error,status:m==null?void 0:m.status,message:m==null?void 0:m.message}))}else this.debugLog("No user ID available for resume fetch")}catch(d){this.errorLog("Error getting current resume ID:",d)}let b=await u.answerQuestion(e,t,s,p);if(b.stopped)return this.debugLog("Question answering stopped by user"),{stopped:!0};if(!b.success||!b.answer)return this.debugLog("No answer generated for question"),{success:!1};let f=b.answer;this.debugLog("AI Answer: ".concat(f));try{let d=this.detectQuestionType(e),m=((n=window.currentAiSettings)==null?void 0:n.model)||"unknown",q=this.shouldSkipQuestion(e);this.collectedQuestionsAnswers.push({question:e,answer:f,question_type:d,ai_model_used:m,confidence_score:.95,is_skipped:q}),this.debugLog("Collected question/answer (".concat(this.collectedQuestionsAnswers.length," total)"))}catch(d){this.errorLog("Error collecting question/answer:",d)}switch(r.tagName.toLowerCase()){case"input":switch(r.type){case"text":case"tel":case"email":case"number":r.getAttribute("role")==="combobox"&&r.getAttribute("aria-autocomplete")==="list"?(this.debugLog("Detected typeahead field for question: ".concat(e)),await this.handleTypeaheadField(r,f,o)):(r.value=f,r.dispatchEvent(new Event("input",{bubbles:!0})));break;case"radio":let d=o.querySelectorAll('input[type="radio"]');for(let m of d){let q=o.querySelector('label[for="'.concat(m.id,'"]'));if(q&&q.textContent.trim()===f){m.click(),this.debugLog("Selected radio option: ".concat(f));break}}break;case"checkbox":r.checked=!0,r.dispatchEvent(new Event("change",{bubbles:!0}));break}break;case"textarea":r.value=f,r.dispatchEvent(new Event("input",{bubbles:!0}));break;case"select":for(let d=0;d<r.options.length;d++)if(r.options[d].text.trim()===f){r.selectedIndex=d,r.dispatchEvent(new Event("change",{bubbles:!0})),this.debugLog("Selected option: ".concat(f));break}break}await this.wait(1500);let L=await this.handleValidationErrorsWithRetry(e,t,r,o,s,p,f);return L.stopped?{stopped:!0}:{success:L.success}}catch(a){return this.errorLog('Error answering question "'.concat(e,'"'),a),{success:!1}}}static async detectValidationError(e){try{let t=['.artdeco-inline-feedback--error[role="alert"]',".artdeco-inline-feedback.artdeco-inline-feedback--error",'[role="alert"][class*="error"]',".fb-dash-form-element__error-text",".error-message"],r=null;for(let o of t)if(r=e.querySelector(o),r){this.debugLog("Found error element with selector: ".concat(o));break}if(!r){let o=e.parentElement;if(o){for(let s of t)if(r=o.querySelector(s),r){this.debugLog("Found error element in parent with selector: ".concat(s));break}}}if(r){let o=[".artdeco-inline-feedback__message",".error-message-text",".fb-dash-form-element__error-text",'span[class*="message"]','span[class*="error"]'],s="";for(let n of o){let a=r.querySelector(n);if(a&&a.textContent.trim()){s=a.textContent.trim();break}}if(!s&&r.textContent.trim()&&(s=r.textContent.trim()),s)return this.debugLog("Validation error detected: ".concat(s)),{hasError:!0,errorMessage:s,errorType:"validation"}}return{hasError:!1}}catch(t){return this.errorLog("Error detecting validation error:",t),{hasError:!1}}}static async handleValidationErrorsWithRetry(e,t,r,o,s,n,a){try{let c=0;for(;c<3;){let u=await this.detectValidationError(o);if(!u.hasError)return this.debugLog("No validation errors detected, field filled successfully"),{success:!0};if(c++,this.debugLog("Validation error attempt ".concat(c,"/3: ").concat(u.errorMessage)),c>=3){this.errorLog("Max retries (3) reached for question: ".concat(e)),this.errorLog("Final validation error: ".concat(u.errorMessage)),this.debugLog("Closing form due to validation retry exhaustion");try{await this.closeForm(!1),this.debugLog("Form closed due to validation failure")}catch(m){this.errorLog("Error closing form after validation failure:",m)}return{success:!1,formClosed:!0}}if(s){let m=!1;if(typeof s=="function"?m=await s():s&&s.value!==void 0?m=s.value:m=!!s,m)return this.debugLog("Stop requested during validation retry"),{stopped:!0}}let p=this.createRetryPrompt(e,u.errorMessage,a,c);this.debugLog("Retry attempt ".concat(c," with enhanced prompt: ").concat(p));let b=await this.getCurrentUserId(),f=new re(b);if(window.currentAiSettings){let m={ai_provider:window.currentAiSettings.provider,ai_model:window.currentAiSettings.model,apiKey:window.currentAiSettings.apiKey,is_default:!0};f.aiSettingsManager.setSettings(m)}await this.loadUserContextForAI(f);let L=await f.answerQuestion(p,t,s,n);if(L.stopped)return{stopped:!0};if(!L.success||!L.answer){this.debugLog("Retry attempt ".concat(c," failed - no answer generated"));continue}let d=L.answer;this.debugLog("Retry attempt ".concat(c," - AI answer: ").concat(d)),await this.fillFieldWithAnswer(r,o,d,e),await this.wait(1500)}return{success:!1}}catch(i){this.errorLog("Error in validation retry logic:",i),this.debugLog("Closing form due to validation retry error");try{await this.closeForm(!1),this.debugLog("Form closed due to validation retry error")}catch(c){this.errorLog("Error closing form after validation retry error:",c)}return{success:!1,formClosed:!0}}}static createRetryPrompt(e,t,r,o){let s="",n=t.toLowerCase();if(n.includes("zwischen")||n.includes("between")){let i=t.match(/(\d+)\s*(?:und|and|to|-)\s*(\d+)/);i&&(s="Provide only a number between ".concat(i[1]," and ").concat(i[2],"."))}if((n.includes("whole")||n.includes("ganze")||n.includes("integer"))&&(s+=" Use only whole numbers (no decimals or text)."),n.includes("decimal number")&&(s+=" Provide a decimal number (with decimals allowed)."),n.includes("larger than")||n.includes("greater than")||n.includes("above")){let i=t.match(/(?:larger than|greater than|above)\s*(\d+(?:\.\d+)?)/i);i&&(s+=" The number must be larger than ".concat(i[1],"."))}if(n.includes("smaller than")||n.includes("less than")||n.includes("below")){let i=t.match(/(?:smaller than|less than|below)\s*(\d+(?:\.\d+)?)/i);i&&(s+=" The number must be smaller than ".concat(i[1],"."))}(n.includes("positive")||n.includes("larger than")&&n.includes("0"))&&(s+=" Provide only positive numbers (greater than 0)."),(n.includes("format")||n.includes("invalid"))&&(s+=" Follow the exact format required."),(n.includes("date")||n.includes("datum"))&&(s+=" Provide date in the correct format."),(n.includes("email")||n.includes("e-mail"))&&(s+=" Provide a valid email format."),s||(s="Follow this requirement: ".concat(t));let a="".concat(s," Answer this question with ONLY the required value, no extra text: ").concat(e);return o>1&&(a+=' (Previous answer "'.concat(r,'" was rejected - provide a different answer that meets the requirements)')),a}static async getCurrentUserId(){var e;try{return((e=(await chrome.storage.local.get(["currentUser"])).currentUser)==null?void 0:e.id)||null}catch(t){return this.errorLog("Error getting current user ID:",t),null}}static async loadUserContextForAI(e){try{let t=await chrome.storage.local.get(["userResumeData","userResumeText","userResumeType"]);t&&(t.userResumeData||t.userResumeText)&&(t.userResumeData?await e.setUserContext(t.userResumeData,t.userResumeText):await e.setUserContext(t.userResumeText))}catch(t){this.errorLog("Error loading user context for AI:",t)}}static async fillFieldWithAnswer(e,t,r,o){try{switch(e.value="",e.dispatchEvent(new Event("input",{bubbles:!0})),await this.wait(300),e.tagName.toLowerCase()){case"input":switch(e.type){case"text":case"tel":case"email":case"number":e.getAttribute("role")==="combobox"&&e.getAttribute("aria-autocomplete")==="list"?await this.handleTypeaheadField(e,r,t):(e.value=r,e.dispatchEvent(new Event("input",{bubbles:!0})),e.dispatchEvent(new Event("change",{bubbles:!0})));break;case"radio":let s=t.querySelectorAll('input[type="radio"]');for(let n of s){let a=t.querySelector('label[for="'.concat(n.id,'"]'));if(a&&a.textContent.trim()===r){n.click(),this.debugLog("Selected radio option: ".concat(r));break}}break;case"checkbox":e.checked=!0,e.dispatchEvent(new Event("change",{bubbles:!0}));break}break;case"textarea":e.value=r,e.dispatchEvent(new Event("input",{bubbles:!0})),e.dispatchEvent(new Event("change",{bubbles:!0}));break;case"select":for(let s=0;s<e.options.length;s++)if(e.options[s].text.trim()===r){e.selectedIndex=s,e.dispatchEvent(new Event("change",{bubbles:!0})),this.debugLog("Selected option: ".concat(r));break}break}}catch(s){this.errorLog('Error filling field with retry answer "'.concat(r,'":'),s)}}static detectQuestionType(e){let t=e.toLowerCase();return t.includes("level of")||t.includes("proficiency in")||t.includes("fluent in")?"language_level":t.includes("skill")||t.includes("experience")||t.includes("years")||t.includes("technology")||t.includes("programming")||t.includes("language")||t.includes("c++")||t.includes("python")||t.includes("java")?"skills":t.includes("education")||t.includes("degree")||t.includes("study")||t.includes("university")||t.includes("college")?"education":t.includes("language")||t.includes("speak")||t.includes("fluent")?"languages":t.includes("notice")||t.includes("period")||t.includes("availability")||t.includes("start date")?"notice":t.includes("salary")||t.includes("compensation")||t.includes("pay")?"salary":t.includes("visa")||t.includes("citizenship")||t.includes("work permit")?"visa":t.includes("certification")||t.includes("certificate")?"certifications":"general"}static async checkEasyApplyLimit(){var e,t;try{this.debugLog("Checking for Easy Apply daily limit message..."),this.debugLog("Checking cached daily limit info...");try{let s=await chrome.storage.local.get(["dailyLimitReached","dailyLimitMessage","dailyLimitTime"]);if(s.dailyLimitReached){let n=new Date(s.dailyLimitTime),a=new Date;if(n.toDateString()===a.toDateString())return this.debugLog("Easy Apply daily limit detected from cached info (previously detected today)"),{hasLimit:!0,message:s.dailyLimitMessage,type:"cached_daily_limit"};await chrome.storage.local.remove(["dailyLimitReached","dailyLimitMessage","dailyLimitTime"]),this.debugLog("Cleared old daily limit info from previous day")}else this.debugLog("No cached daily limit info found, checking DOM...")}catch(s){this.debugLog("Error checking cached daily limit info:",s)}this.debugLog("Checking DOM for daily limit messages...");let r=document.querySelectorAll('.artdeco-inline-feedback--error[role="alert"]');this.debugLog("Found ".concat(r.length," error elements in DOM"));for(let s of r){let n=s.querySelector(".artdeco-inline-feedback__message");if(n){let a=n.textContent.trim();if(this.debugLog("Found error message: ".concat(a)),a.toLowerCase().includes("easy apply limit")||a.toLowerCase().includes("daily submissions")||a.toLowerCase().includes("reached today's")||a.toLowerCase().includes("continue applying tomorrow"))return this.debugLog("Easy Apply daily limit detected from DOM!"),{hasLimit:!0,message:a,type:"dom_daily_limit"}}}let o=document.querySelector(".jobs-s-apply button");if(o&&o.disabled){this.debugLog("Easy Apply button is disabled - may indicate limit reached");let s=(e=o.closest(".jobs-s-apply"))==null?void 0:e.querySelector(".artdeco-inline-feedback--error");if(s){let n=(t=s.querySelector(".artdeco-inline-feedback__message"))==null?void 0:t.textContent.trim();if(n)return{hasLimit:!0,message:n,type:"button_disabled"}}return{hasLimit:!0,message:"Easy Apply button is disabled",type:"button_disabled"}}return this.debugLog("No Easy Apply limit detected (checked both cached info and DOM)"),{hasLimit:!1}}catch(r){return this.errorLog("Error checking Easy Apply limit:",r),{hasLimit:!1}}}static async handleTypeaheadField(e,t,r){try{this.debugLog("Handling typeahead field with answer: ".concat(t)),e.value="",e.focus(),e.value=t,e.dispatchEvent(new Event("input",{bubbles:!0})),e.dispatchEvent(new Event("keyup",{bubbles:!0})),e.dispatchEvent(new KeyboardEvent("keydown",{key:t.slice(-1),bubbles:!0})),e.dispatchEvent(new Event("focus",{bubbles:!0})),e.dispatchEvent(new Event("click",{bubbles:!0})),this.debugLog("Waiting for suggestions to appear...");let o=0,s=null;for(;o<5&&!s;){await this.wait(300+o*200);let n=e.getAttribute("aria-owns")||e.getAttribute("aria-controls");if(n&&(s=document.getElementById(n)),s||(s=r.querySelector('[role="listbox"]')||r.parentElement.querySelector('[role="listbox"]')||document.querySelector('[role="listbox"]')),s&&s.querySelectorAll('[role="option"]').length>0)break;s=null,o++,o<5&&(this.debugLog("Attempt ".concat(o,": No suggestions found, retrying...")),e.dispatchEvent(new Event("input",{bubbles:!0})))}if(s){this.debugLog("Found suggestions container");let n=s.querySelectorAll('[role="option"]');if(this.debugLog("Found ".concat(n.length," suggestions")),n.length>0){let a=null,i=t.toLowerCase();for(let c of n){let u=c.textContent.trim().toLowerCase();if(u.startsWith(i)&&(u.includes("germany")||u.includes("united states")||u.includes("united kingdom")||u.includes("canada")||u.includes("france")||u.includes("netherlands")||u.includes("switzerland")||u.includes("austria"))){a=c;break}}if(!a){for(let c of n)if(c.textContent.trim().toLowerCase().startsWith(i)){a=c;break}}if(a||(a=n[0]),a){let c=a.textContent.trim();return this.debugLog("Selecting suggestion: ".concat(c)),a.scrollIntoView({behavior:"smooth",block:"nearest"}),a.style.backgroundColor="#e6f3ff",a.click(),a.dispatchEvent(new MouseEvent("click",{bubbles:!0})),await this.wait(500),this.debugLog('Input field value after selection: "'.concat(e.value,'"')),e.dispatchEvent(new Event("change",{bubbles:!0})),e.dispatchEvent(new Event("blur",{bubbles:!0})),{success:!0,selectedValue:c}}}}else this.debugLog("No suggestions container found, falling back to normal input"),e.dispatchEvent(new Event("change",{bubbles:!0})),e.dispatchEvent(new Event("blur",{bubbles:!0}));return{success:!0}}catch(o){return this.errorLog("Error handling typeahead field:",o),e.value=t,e.dispatchEvent(new Event("input",{bubbles:!0})),e.dispatchEvent(new Event("change",{bubbles:!0})),{success:!1,error:o.message}}}},I=se});function g(l,e=null){let t=new Date().toISOString().split("T")[1],r="[EasyJob Debug ".concat(t,"] ").concat(l);e?console.log(r,e):console.log(r)}function h(l,e="info"){g("Status Update: ".concat(e," - ").concat(l)),typeof chrome<"u"&&chrome.runtime&&chrome.runtime.sendMessage({action:"STATUS_UPDATE",text:l,status:e})}async function y(l){if(typeof window<"u"&&window.isStopRequested&&window.isStopRequested())return g("Auto-apply process stopped by immediate request"),h("Auto-apply process stopped","info"),typeof chrome<"u"&&chrome.runtime&&chrome.runtime.sendMessage({action:"PROCESS_COMPLETE"}),!0;if(!l)return g("Auto-apply process stopped by user (local check)"),h("Auto-apply process stopped","info"),typeof chrome<"u"&&chrome.runtime&&chrome.runtime.sendMessage({action:"PROCESS_COMPLETE"}),!0;try{if(typeof chrome<"u"&&chrome.runtime){let e=await chrome.runtime.sendMessage({action:"getAutoApplyState"});if(e&&e.success&&!e.isRunning)return g("Auto-apply process stopped by user (background check)"),h("Auto-apply process stopped","info"),chrome.runtime.sendMessage({action:"PROCESS_COMPLETE"}),!0}}catch(e){g("Failed to check background state, using local state",e)}return!1}var R=S(()=>{typeof chrome<"u"&&chrome.runtime&&chrome.runtime.onMessage.addListener((l,e,t)=>{if(l.action==="START_AUTO_APPLY")return startAutoApplyProcess().then(()=>{t({success:!0})}).catch(r=>{console.error("Error in auto-apply process:",r),t({success:!1,error:r.message})}),!0})});var ae,ie,Te,_e=S(()=>{P();Y();V();X();ne();R();ae=class extends A{static async processJobPage(e,t,r,o){this.debugLog("Processing page ".concat(e,"/").concat(t)),h("Processing page ".concat(e," of ").concat(t),"info");let s=await x.getListOfJobsOnPage(r);g("Found ".concat(s.length," jobs on page ").concat(e));let n=0,a=5;for(let i of s){if(await y(o))return this.debugLog("Stop requested during job processing - breaking job loop"),!1;try{let c=await ie.processJob(i,o);if(c==="disabled_button"){if(n++,this.debugLog("Consecutive disabled buttons: ".concat(n,"/").concat(a)),n>=a){this.debugLog("Hit threshold of ".concat(a," consecutive disabled buttons - checking for daily limit"));let u=await I.checkEasyApplyLimit();if(u.hasLimit){this.debugLog("Daily limit detected after ".concat(n," disabled buttons: ").concat(u.message)),h("Auto-apply completed - Daily limit reached","info");try{await chrome.storage.local.set({dailyLimitReached:!0,dailyLimitMessage:u.message,dailyLimitTime:new Date().toISOString()})}catch(p){this.debugLog("Error storing daily limit info:",p)}typeof window<"u"&&window.requestAutoApplyStop&&window.requestAutoApplyStop("daily_limit_reached");try{await chrome.runtime.sendMessage({action:"stopAutoApply",reason:"daily_limit_reached"})}catch(p){this.debugLog("Error sending stop message to background:",p)}return this.debugLog("Auto-apply stopped gracefully due to daily limit detected from consecutive disabled buttons"),!1}else this.debugLog("".concat(n," consecutive disabled buttons but no daily limit detected - continuing"))}}else if(c==="success")n=0,this.debugLog("Job processed successfully");else{if(c==="daily_limit_reached")return!1;if(c==="stopped")return!1;n=0}}catch(c){if(n=0,await y(o))return this.debugLog("Stop requested after job error - breaking job loop"),!1;this.debugLog("Error in job processing, continuing to next job:",c.message)}if(await y(o))return this.debugLog("Stop requested after job processing - breaking job loop"),!1}if(e<t)if(g("Finished processing page ".concat(e,", navigating to next page...")),h("Moving to page ".concat(e+1," of ").concat(t,"..."),"info"),await x.goToNextPage())g("Successfully navigated to page ".concat(e+1));else return g("Failed to navigate to next page or reached last page"),await x.isOnLastPage()?(g("Confirmed: reached the last page"),h("Reached the last page of results","info")):(g("Navigation failed but not on last page - stopping process"),h("Failed to navigate to next page - stopping","error")),!1;else g("Finished processing last page (".concat(e,"/").concat(t,")"));return!0}},ie=class extends A{static async processJob(e,t){try{let r=await _.getJobClickableElement(e);if(await _.clickOnJob(r),g("Clicked on job"),await _.scrollDownToLoadNextJob(e),g("Scrolled to job"),await y(t))return"stopped";let o=await _.isEasyButtonAvailable();if(g("Is Easy Apply button available:",o),!o){g("Job already applied or button disabled. Checking if this might be due to daily limit...");let i=await I.checkEasyApplyLimit();if(i.hasLimit){g("Daily limit detected while checking disabled button: ".concat(i.message)),h("Auto-apply completed - Daily limit reached","info");try{await chrome.storage.local.set({dailyLimitReached:!0,dailyLimitMessage:i.message,dailyLimitTime:new Date().toISOString()})}catch(c){g("Error storing daily limit info:",c)}typeof window<"u"&&window.requestAutoApplyStop&&window.requestAutoApplyStop("daily_limit_reached");try{await chrome.runtime.sendMessage({action:"stopAutoApply",reason:"daily_limit_reached"})}catch(c){g("Error sending stop message to background:",c)}return g("Auto-apply stopped gracefully due to daily limit detected from disabled button"),"daily_limit_reached"}return g("Job already applied (not due to daily limit). Skipping..."),h("Job already applied. Skipping...","info"),"disabled_button"}let s=await M.getAllJobInfo();if(!s)return g("ERROR: Job info is null, cannot proceed"),"no_job_info";window.currentUserData&&await chrome.storage.local.set({currentUser:window.currentUserData});try{if(!(await chrome.storage.local.get(["currentResumeId"])).currentResumeId&&window.currentUserData){let c=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/users/".concat(window.currentUserData.id,"/resumes/default")});c&&c.success&&c.resume&&await chrome.storage.local.set({currentResumeId:c.resume.id})}}catch(i){g("Error storing resume ID:",i)}let n=await I.checkEasyApplyLimit();if(n.hasLimit){g("Easy Apply limit reached: ".concat(n.message)),h("Auto-apply completed - Daily limit reached","info");try{await chrome.storage.local.set({dailyLimitReached:!0,dailyLimitMessage:n.message,dailyLimitTime:new Date().toISOString()})}catch(i){g("Error storing daily limit info:",i)}typeof window<"u"&&window.requestAutoApplyStop&&window.requestAutoApplyStop("daily_limit_reached");try{await chrome.runtime.sendMessage({action:"stopAutoApply",reason:"daily_limit_reached"})}catch(i){g("Error sending stop message to background:",i)}g("Auto-apply stopped gracefully due to daily limit");return}if(await _.clickEasyApply(),await new Promise(i=>setTimeout(i,3e3)),await y(t))return this.debugLog("Stop requested before form processing"),"stopped";console.log("=== CALLING PROCESS FORM ==="),console.log("About to call processForm with jobInfo:",s),console.log("Current URL before form processing:",window.location.href),console.log("=== END CALLING PROCESS FORM ===");let a=async()=>await y(t);return await I.processForm(a,s),g("Processed application form"),"success"}catch(r){return console.error("Error processing job:",r),g("Error processing job:",{error:r.message,stack:r.stack}),h("Error processing job. Continuing to next one...","error"),"error"}}},Te=ae});var Re={};B(Re,{default:()=>Ye});var ce,Ye,je=S(()=>{N();Y();_e();X();ne();V();R();ce=class extends T{constructor(){super("LinkedIn"),this.config={maxJobsPerPage:25,maxPages:40,waitBetweenApplications:2e3,waitBetweenPages:3e3,supportedFileTypes:["pdf","doc","docx"]},this.selectors={searchContainer:".scaffold-layout.jobs-search-two-pane__layout",jobListings:".jobs-search-results-list .jobs-search-results__list-item",jobTitle:".job-title",company:".job-details-jobs-unified-top-card__company-name",applyButton:".jobs-apply-button",nextPageButton:".artdeco-pagination__button--next"}}async startAutoApply(){try{if(this.debugLog("Starting LinkedIn auto-apply process"),this.setAutoApplyRunning(!0),this.resetStopFlag(),!this.isCurrentPlatform())throw new Error("Not on LinkedIn platform");let e=document.querySelector(this.selectors.searchContainer);if(!e)throw h("Could not find jobs list. Please make sure you are on LinkedIn jobs page.","error"),new Error("LinkedIn jobs search container not found");let t=await this.getTotalJobsCount(e);if(h("Found ".concat(t," jobs to process"),"info"),t===0){h("No jobs found to process","warning");return}let r=await this.getAvailablePages(e,t);for(let o=1;o<=r;o++){if(this.isStopRequested()||await y(this.isAutoApplyRunning)){this.debugLog("Stop requested during page processing");return}if(await this.processJobPage(o,r,e,this.isAutoApplyRunning)===!1){this.debugLog("Page processing returned false - stopping auto-apply");break}if(this.isStopRequested()||await y(this.isAutoApplyRunning)){this.debugLog("Stop requested after page processing");break}}this.debugLog("LinkedIn auto-apply process completed"),h("Auto-apply process completed","success")}catch(e){throw this.errorLog("Error in LinkedIn auto-apply process",e),h("Auto-apply error: ".concat(e.message),"error"),e}finally{this.setAutoApplyRunning(!1)}}async getTotalJobsCount(e){try{return await x.getTotalJobsSearchCount(e)}catch(t){return this.errorLog("Error getting LinkedIn job count",t),0}}async getAvailablePages(e,t){try{return await x.getAvailablePages(e,t)}catch(r){return this.errorLog("Error getting LinkedIn available pages",r),1}}async processJobPage(e,t,r,o){try{return await Te.processJobPage(e,t,r,o)}catch(s){return this.errorLog("Error processing LinkedIn page ".concat(e),s),!1}}async fillApplicationForm(e,t){try{return this.debugLog("Filling LinkedIn application form for: ".concat(e.title," at ").concat(e.company)),!0}catch(r){return this.errorLog("Error filling LinkedIn application form",r),!1}}async extractJobInfo(){try{return await M.extractJobInfo()}catch(e){return this.errorLog("Error extracting LinkedIn job info",e),null}}async navigateToNextPage(e){try{return this.debugLog("Navigating to LinkedIn page ".concat(e+1)),!0}catch(t){return this.errorLog("Error navigating to LinkedIn page ".concat(e+1),t),!1}}isCurrentPlatform(e=window.location.href){return/linkedin\.com/i.test(e)||/linkedin\.[a-z]{2,3}/i.test(e)}getSelectors(){return w({},this.selectors)}getConfig(){return w({},this.config)}hasFeature(e){return["advancedSearch","saveJob","companyFollow","experienceLevel","salaryFilter"].includes(e)}async trackApplication(e,t,r){try{this.debugLog("Tracking LinkedIn application: ".concat(e.title," - Success: ").concat(t)),!t&&r&&this.debugLog("Application failed: ".concat(r))}catch(o){this.errorLog("Error tracking LinkedIn application",o)}}async handleError(e,t){return this.errorLog("LinkedIn error in ".concat(t),e),e.message.includes("daily limit")?(this.debugLog("Daily limit reached - stopping auto-apply"),this.requestStop("daily_limit"),!1):((e.message.includes("not found")||e.message.includes("selector"))&&(this.debugLog("DOM element not found - possibly page structure changed"),await this.wait(3e3)),!0)}async attemptRecovery(){try{return this.debugLog("Attempting LinkedIn recovery"),await this.wait(2e3),this.isCurrentPlatform()?document.querySelector(this.selectors.searchContainer)?(this.debugLog("LinkedIn recovery successful"),!0):(this.debugLog("Search container not found after recovery"),!1):(this.debugLog("Not on LinkedIn page after recovery attempt"),!1)}catch(e){return this.errorLog("LinkedIn recovery failed",e),!1}}getAnalytics(){return{platform:"linkedin",processedPages:0,processedJobs:0,successfulApplications:0,errors:0}}isJobSearchPage(e=window.location.href){return this.isCurrentPlatform(e)&&(e.includes("/jobs/")||e.includes("/job/"))}getCurrentSearchQuery(){return new URLSearchParams(window.location.search).get("keywords")||""}getCurrentLocationFilter(){return new URLSearchParams(window.location.search).get("location")||""}async getJobElementsOnPage(){let e=document.querySelector(this.selectors.searchContainer);return e?await x.getListOfJobsOnPage(e):[]}async checkEasyApplyLimit(){try{return await I.checkEasyApplyLimit()}catch(e){return this.errorLog("Error checking LinkedIn Easy Apply limit",e),{hasLimit:!1,message:""}}}},Ye=ce});var Je={};B(Je,{default:()=>Ke});var le,Ke,De=S(()=>{N();le=class extends T{constructor(){super("Indeed"),this.config={maxJobsPerPage:15,maxPages:50,waitBetweenApplications:3e3,waitBetweenPages:2e3,supportedFileTypes:["pdf","doc","docx"]},this.selectors={searchContainer:".jobsearch-SerpJobCard",jobListings:".job_seen_beacon",jobTitle:".jobTitle",company:".companyName",applyButton:".indeedApplyButton"}}async startAutoApply(){throw this.debugLog("Indeed auto-apply not yet implemented"),new Error("Indeed platform is not yet implemented. Please use LinkedIn for now.")}async getTotalJobsCount(e){return this.debugLog("Getting Indeed job count - not implemented yet"),0}async getAvailablePages(e,t){return this.debugLog("Getting Indeed available pages - not implemented yet"),1}async processJobPage(e,t,r,o){return this.debugLog("Processing Indeed page ".concat(e," - not implemented yet")),!1}async fillApplicationForm(e,t){return this.debugLog("Filling Indeed application form - not implemented yet"),!1}async extractJobInfo(){return this.debugLog("Extracting Indeed job info - not implemented yet"),null}async navigateToNextPage(e){return this.debugLog("Navigating to Indeed page ".concat(e+1," - not implemented yet")),!1}isCurrentPlatform(e=window.location.href){return/indeed\.com/i.test(e)||/indeed\.[a-z]{2,3}/i.test(e)||/indeed\.[a-z]{2,3}\.[a-z]{2,3}/i.test(e)}getSelectors(){return w({},this.selectors)}getConfig(){return w({},this.config)}hasFeature(e){return!1}},Ke=le});var ue,v,de=S(()=>{ue=class{static async getTotalJobsSearchCount(e=document){try{await this.wait(2e3);let t=['[data-at="search-jobs-count"]',".at-facet-header-total-results",'.at-facets-header-title [data-at="search-jobs-count"]'],r=null,o=0,s=3;for(;o<s&&!r;){for(let a of t)if(r=e.querySelector(a),r){console.log("[StepstoneJobSearch] Found job count with selector: ".concat(a," (attempt ").concat(o+1,")"));break}r||(o++,o<s&&(console.log("[StepstoneJobSearch] Job count not found, retrying in ".concat(o*1e3,"ms...")),await this.wait(o*1e3)))}if(r){let a=r.textContent.trim(),i=parseInt(a.replace(/\./g,"").replace(/\s/g,"").replace(/[^\d]/g,""));return console.log("[StepstoneJobSearch] Total jobs found: ".concat(i,' (raw: "').concat(a,'")')),isNaN(i)?0:i}let n=['[class*="total-results"]','[class*="job-count"]','[data-genesis-element="BASE"]:has([data-at="search-jobs-count"])',"h1 span:first-child",".at-facets-header-title span:first-child"];for(let a of n){let i=e.querySelector(a);if(i){let c=i.textContent.trim(),u=parseInt(c.replace(/\./g,"").replace(/[^\d]/g,""));if(!isNaN(u)&&u>0)return console.log('[StepstoneJobSearch] Found job count with fallback selector "'.concat(a,'": ').concat(u,' (raw: "').concat(c,'")')),u}}return console.log("[StepstoneJobSearch] No job count found"),0}catch(t){return console.error("[StepstoneJobSearch] Error getting total jobs count:",t),0}}static async getAvailablePages(e=document,t){try{await this.wait(500);let r=20,o=['[role="navigation"][aria-label*="pagination"]','[role="navigation"][aria-label*="Pagination"]','nav[class*="pagination"]',".pagination",'[class*="pagination"]','[data-testid*="pagination"]','[aria-label*="Pagination"]','nav[class*="pager"]',".paging"],s=1;for(let n of o){let a=e.querySelector(n);if(a){a.querySelectorAll("a, button, span").forEach(u=>{let p=u.textContent.trim(),b=parseInt(p);!isNaN(b)&&b>s&&(s=b)});let c=a.querySelector('[aria-label*="next"], [aria-label*="weiter"], [title*="weiter"]');c&&!c.disabled&&(s=Math.max(s,2));break}}return s===1&&t>r&&(s=Math.ceil(t/r),s=Math.min(s,50)),console.log("[StepstoneJobSearch] Available pages: ".concat(s," (based on ").concat(t," total jobs)")),s}catch(r){return console.error("[StepstoneJobSearch] Error getting available pages:",r),1}}static async getListOfJobsOnPage(e=document){try{await this.wait(1e3);let t=document.querySelectorAll('article[data-testid="job-item"]');if(t.length>0)return console.log("[StepstoneJobSearch] Found ".concat(t.length,' jobs with verified selector: article[data-testid="job-item"]')),t;let r=['[data-testid="job-item"]','article[data-testid*="job"]',".job-element",'[class*="job-item"]',".resultlist-item"];for(let o of r){let s=e.querySelectorAll(o);if(s.length>0)return console.log("[StepstoneJobSearch] Found ".concat(s.length," jobs with fallback selector: ").concat(o)),s}return console.log("[StepstoneJobSearch] No job elements found on page"),[]}catch(t){return console.error("[StepstoneJobSearch] Error getting job list:",t),[]}}static async navigateToNextPage(e){try{console.log("[StepstoneJobSearch] Navigating to page ".concat(e));let t=[".pagination",'[class*="pagination"]','[class*="pager"]',".paging"];for(let n of t){let a=document.querySelector(n);if(!a)continue;let i=a.querySelector('a[href*="page='.concat(e,'"], button[data-page="').concat(e,'"]'));if(i)return i.click(),await this.wait(2e3),!0;let c=['a[aria-label*="next"]','button[aria-label*="next"]','a[title*="weiter"]','button[title*="weiter"]',".next",'[class*="next"]'];for(let u of c){let p=a.querySelector(u);if(p&&!p.disabled)return p.click(),await this.wait(2e3),!0}}let r=new URL(window.location.href),o=r.searchParams,s=["page","p","offset"];for(let n of s)if(o.has(n)||n==="page")return o.set(n,e.toString()),window.location.href=r.toString(),!0;return console.log("[StepstoneJobSearch] Could not find pagination controls"),!1}catch(t){return console.error("[StepstoneJobSearch] Error navigating to next page:",t),!1}}static getCurrentSearchInfo(){try{let e={query:"",location:"",totalResults:0},t=[".at-facets-header-title",'h1[class*="facets-header"]','[data-genesis-element="TEXT"]:has([data-at="search-jobs-count"])','h1:has([data-at="search-jobs-count"])'],r=null;for(let o of t)if(r=document.querySelector(o),r)break;if(r){let o=['a[href*="/jobs/"][href*="q="]','a[href*="/jobs/"]:first-of-type','a[href*="/stellenangebote/"]:first-of-type'];for(let a of o){let i=r.querySelector(a);if(i){e.query=i.textContent.trim();break}}let s=['a[href*="/jobs/in-"]','a[href*="/jobs/"][href*="deutschland"]','a[href*="/jobs/"]:last-of-type'];for(let a of s){let i=r.querySelector(a);if(i){e.location=i.textContent.trim();break}}let n=r.querySelector('[data-at="search-jobs-count"]');if(n){let a=parseInt(n.textContent.replace(/\./g,"").replace(/[^\d]/g,""));isNaN(a)||(e.totalResults=a)}}return e}catch(e){return console.error("[StepstoneJobSearch] Error getting search info:",e),{query:"",location:"",totalResults:0}}}static async wait(e=1e3){await new Promise(t=>setTimeout(t,e))}static debugLog(e){console.log("[StepstoneJobSearch] ".concat(e))}static errorLog(e,t){console.error("[StepstoneJobSearch] ".concat(e,":"),t)}},v=ue});var ge,D,pe=S(()=>{ge=class{static async extractJobInfo(){try{console.log("[StepstoneJobInfo] Extracting job information from current page");let e={title:await this.extractJobTitle(),company:await this.extractCompanyName(),location:await this.extractLocation(),url:window.location.href,description:await this.extractJobDescription(),requirements:await this.extractJobRequirements(),salary:await this.extractSalary(),jobType:await this.extractJobType(),remote:await this.isRemoteJob(),postedDate:await this.extractPostedDate(),benefits:await this.extractBenefits(),contactInfo:await this.extractContactInfo()};return console.log("[StepstoneJobInfo] Extracted job info:",e),e}catch(e){return console.error("[StepstoneJobInfo] Error extracting job info:",e),null}}static async extractJobTitle(){try{let e=['h1[data-testid="job-title"]',".job-title",'h1[class*="title"]','h1[class*="job"]','[data-testid*="title"] h1',".header h1","header h1","h1"];for(let t of e){let r=document.querySelector(t);if(r&&r.textContent.trim()){let o=r.textContent.trim();return console.log('[StepstoneJobInfo] Found job title: "'.concat(o,'"')),o}}return""}catch(e){return console.error("[StepstoneJobInfo] Error extracting job title:",e),""}}static async extractCompanyName(){try{let e=['[data-testid="company-name"]',".company-name",'[class*="company"] h2','[class*="company"] span','[class*="employer"]',".job-company",'a[href*="/company/"]','a[href*="/unternehmen/"]'];for(let t of e){let r=document.querySelector(t);if(r&&r.textContent.trim()){let o=r.textContent.trim();return console.log('[StepstoneJobInfo] Found company: "'.concat(o,'"')),o}}return""}catch(e){return console.error("[StepstoneJobInfo] Error extracting company name:",e),""}}static async extractLocation(){try{let e=['[data-testid="job-location"]',".job-location",'[class*="location"]','[class*="ort"]','[class*="standort"]','span[title*="Location"]'];for(let t of e){let r=document.querySelector(t);if(r&&r.textContent.trim()){let o=r.textContent.trim();return console.log('[StepstoneJobInfo] Found location: "'.concat(o,'"')),o}}return""}catch(e){return console.error("[StepstoneJobInfo] Error extracting location:",e),""}}static async extractJobDescription(){try{let e=['[data-testid="job-description"]',".job-description",'[class*="description"]','[class*="content"]',".job-content",'[role="main"] div[class*="text"]','section[class*="description"]'];for(let t of e){let r=document.querySelector(t);if(r&&r.textContent.trim()){let o=r.textContent.trim();if(o.length>100)return console.log("[StepstoneJobInfo] Found job description (".concat(o.length," chars)")),o.substring(0,2e3)}}return""}catch(e){return console.error("[StepstoneJobInfo] Error extracting job description:",e),""}}static async extractJobRequirements(){try{let e=['[data-testid="requirements"]',".requirements",'[class*="requirement"]','[class*="qualification"]','[class*="skill"]','section:contains("Anforderungen")','section:contains("Qualifikation")','div:contains("Sie bringen mit")'];for(let t of e){let r=document.querySelector(t);if(r&&r.textContent.trim()){let o=r.textContent.trim();if(o.length>50)return console.log("[StepstoneJobInfo] Found requirements (".concat(o.length," chars)")),o.substring(0,1e3)}}return""}catch(e){return console.error("[StepstoneJobInfo] Error extracting requirements:",e),""}}static async extractSalary(){try{let e=['[data-testid="salary"]',".salary",'[class*="salary"]','[class*="gehalt"]','span:contains("\u20AC")','div:contains("\u20AC")'];for(let s of e){let n=document.querySelector(s);if(n&&n.textContent.includes("\u20AC")){let a=n.textContent.trim();return console.log('[StepstoneJobInfo] Found salary: "'.concat(a,'"')),a}}let t=document.body.textContent,r=/(\d{1,3}(?:\.\d{3})*(?:\s*-\s*\d{1,3}(?:\.\d{3})*)?\s*€(?:\/Jahr|\/Monat|\/Tag)?)/g,o=t.match(r);if(o&&o.length>0){let s=o[0];return console.log('[StepstoneJobInfo] Found salary in text: "'.concat(s,'"')),s}return""}catch(e){return console.error("[StepstoneJobInfo] Error extracting salary:",e),""}}static async extractJobType(){try{let e=['[data-testid="job-type"]',".job-type",'[class*="employment"]','[class*="arbeitszeit"]'];for(let o of e){let s=document.querySelector(o);if(s&&s.textContent.trim()){let n=s.textContent.trim();return console.log('[StepstoneJobInfo] Found job type: "'.concat(n,'"')),n}}let t=document.body.textContent.toLowerCase(),r={vollzeit:"Vollzeit",teilzeit:"Teilzeit",minijob:"Minijob",freelance:"Freelance",praktikum:"Praktikum",ausbildung:"Ausbildung"};for(let[o,s]of Object.entries(r))if(t.includes(o))return console.log('[StepstoneJobInfo] Found job type in text: "'.concat(s,'"')),s;return""}catch(e){return console.error("[StepstoneJobInfo] Error extracting job type:",e),""}}static async isRemoteJob(){try{let e=document.body.textContent.toLowerCase(),r=["remote","homeoffice","home office","home-office","von zuhause","mobiles arbeiten","telearbeit"].some(o=>e.includes(o));return console.log("[StepstoneJobInfo] Remote job: ".concat(r)),r}catch(e){return console.error("[StepstoneJobInfo] Error checking remote status:",e),!1}}static async extractPostedDate(){try{let e=['[data-testid="posted-date"]',".posted-date",'[class*="date"]',"time","[datetime]"];for(let t of e){let r=document.querySelector(t);if(r){let o=r.textContent.trim()||r.getAttribute("datetime");if(o)return console.log('[StepstoneJobInfo] Found posted date: "'.concat(o,'"')),o}}return""}catch(e){return console.error("[StepstoneJobInfo] Error extracting posted date:",e),""}}static async extractBenefits(){try{let e=['[data-testid="benefits"]',".benefits",'[class*="benefit"]','[class*="vorteile"]','section:contains("Benefits")','section:contains("Vorteile")'],t=[];for(let r of e){let o=document.querySelector(r);if(o){let s=o.textContent.trim();s&&t.push(s)}}return console.log("[StepstoneJobInfo] Found ".concat(t.length," benefits")),t}catch(e){return console.error("[StepstoneJobInfo] Error extracting benefits:",e),[]}}static async extractContactInfo(){try{let e={email:"",phone:"",contactPerson:""},t=/[\w.-]+@[\w.-]+\.\w+/g,r=document.body.textContent,o=r.match(t);o&&o.length>0&&(e.email=o[0]);let s=/(?:\+49|0)[0-9\s\-\/\(\)]{8,}/g,n=r.match(s);n&&n.length>0&&(e.phone=n[0].trim());let a=['[data-testid="contact-person"]',".contact-person",'[class*="ansprechpartner"]','[class*="kontakt"]'];for(let i of a){let c=document.querySelector(i);if(c&&c.textContent.trim()){e.contactPerson=c.textContent.trim();break}}return console.log("[StepstoneJobInfo] Extracted contact info:",e),e}catch(e){return console.error("[StepstoneJobInfo] Error extracting contact info:",e),{email:"",phone:"",contactPerson:""}}}static async extractJobInfoFromListing(e){try{if(!e)return null;let t={title:"",company:"",location:"",url:"",workType:"",remote:!1},r=e.querySelector('[data-testid="job-item-title"]');if(r){t.title=r.textContent.trim();let i=r.getAttribute("href");i&&(t.url=i.startsWith("http")?i:"https://www.stepstone.de".concat(i))}let o=e.querySelector('[data-at="job-item-company-name"]');o&&(t.company=o.textContent.trim());let s=e.querySelector('[data-at="job-item-location"]');s&&(t.location=s.textContent.trim());let n=e.querySelector('[data-at="job-item-work-from-home"]');n&&(t.workType=n.textContent.trim(),t.remote=t.workType.toLowerCase().includes("home")||t.workType.toLowerCase().includes("remote"));let a=['[data-at*="salary"]','[data-testid*="salary"]','[class*="salary"]','[class*="gehalt"]'];for(let i of a){let c=e.querySelector(i);if(c&&c.textContent.includes("\u20AC")){t.salary=c.textContent.trim();break}}return console.log("[StepstoneJobInfo] Extracted listing info:",t),t}catch(t){return console.error("[StepstoneJobInfo] Error extracting job info from listing:",t),null}}static async extractJobInfoFromListings(e){try{if(!e||e.length===0)return console.log("[StepstoneJobInfo] No job elements provided for bulk extraction"),[];console.log("[StepstoneJobInfo] Extracting info from ".concat(e.length," job listings"));let t=[];for(let r of e)try{let o=await this.extractJobInfoFromListing(r);o&&o.title&&t.push(o)}catch(o){console.error("[StepstoneJobInfo] Error extracting individual job info:",o)}return console.log("[StepstoneJobInfo] Successfully extracted ".concat(t.length," job listings")),t}catch(t){return console.error("[StepstoneJobInfo] Error in bulk job extraction:",t),[]}}static async getJobListingsFromPage(){try{let e=document.querySelectorAll('article[data-testid="job-item"]');if(e.length===0)return console.log("[StepstoneJobInfo] No job cards found on page"),[];console.log("[StepstoneJobInfo] Found ".concat(e.length," job cards on page"));let t=Array.from(e).map(r=>{try{let o=r.querySelector('[data-testid="job-item-title"]'),s=o==null?void 0:o.textContent.trim(),n=o==null?void 0:o.getAttribute("href"),a=n!=null&&n.startsWith("http")?n:"https://www.stepstone.de".concat(n),i=r.querySelector('[data-at="job-item-company-name"]'),c=i==null?void 0:i.textContent.trim(),u=r.querySelector('[data-at="job-item-location"]'),p=u==null?void 0:u.textContent.trim(),b=r.querySelector('[data-at="job-item-work-from-home"]'),f=b==null?void 0:b.textContent.trim();return{title:s,company:c,companyName:c,url:a,jobUrl:a,location:p,workType:f,remote:(f==null?void 0:f.toLowerCase().includes("home"))||(f==null?void 0:f.toLowerCase().includes("remote"))||!1}}catch(o){return console.error("[StepstoneJobInfo] Error extracting job info from card:",o),null}}).filter(r=>r&&r.title);return console.log("[StepstoneJobInfo] Successfully extracted ".concat(t.length," jobs from page")),t}catch(e){return console.error("[StepstoneJobInfo] Error getting job listings from page:",e),[]}}},D=ge});var fe,$,me=S(()=>{fe=class{static async isApplicationFormAvailable(){try{let e=['form[class*="application"]','form[class*="bewerbung"]','[data-testid="application-form"]',".application-form",'form[action*="apply"]','form[action*="bewerbung"]',".quick-apply",'[class*="quick-apply"]'];for(let r of e)if(document.querySelector(r))return console.log("[StepstoneForm] Application form found with selector: ".concat(r)),!0;let t=['button[class*="apply"]','button[class*="bewerbung"]','[data-testid*="apply"]','a[class*="apply"]',".apply-button",".bewerbung-button"];for(let r of t)if(document.querySelector(r))return console.log("[StepstoneForm] Apply button found with selector: ".concat(r)),!0;return!1}catch(e){return console.error("[StepstoneForm] Error checking form availability:",e),!1}}static async fillApplicationForm(e,t){try{return console.log("[StepstoneForm] Starting form fill process"),await this.openApplicationForm()?(await this.wait(2e3),await this.fillFormFields(t)?(t.resume&&await this.handleResumeUpload(t.resume),t.coverLetter&&await this.fillCoverLetter(t.coverLetter),console.log("[StepstoneForm] Form filling completed successfully"),!0):(console.log("[StepstoneForm] Could not fill form fields"),!1)):(console.log("[StepstoneForm] Could not open application form"),!1)}catch(r){return console.error("[StepstoneForm] Error filling application form:",r),!1}}static async openApplicationForm(){try{let e=['button[class*="apply"]:not([disabled])','button[class*="bewerbung"]:not([disabled])','[data-testid*="apply"]:not([disabled])','a[class*="apply"]',".apply-button:not([disabled])",".bewerbung-button:not([disabled])",'[role="button"][class*="apply"]'];for(let t of e){let r=document.querySelector(t);if(r&&r.offsetParent!==null)return console.log("[StepstoneForm] Clicking apply button: ".concat(t)),r.click(),await this.wait(3e3),!0}return console.log("[StepstoneForm] No clickable apply button found"),!1}catch(e){return console.error("[StepstoneForm] Error opening application form:",e),!1}}static async fillFormFields(e){try{let t=0,r={firstName:['input[name*="firstname"]','input[name*="vorname"]','input[placeholder*="Vorname"]'],lastName:['input[name*="lastname"]','input[name*="nachname"]','input[placeholder*="Nachname"]'],email:['input[type="email"]','input[name*="email"]','input[placeholder*="E-Mail"]'],phone:['input[type="tel"]','input[name*="phone"]','input[name*="telefon"]','input[placeholder*="Telefon"]'],address:['input[name*="address"]','input[name*="adresse"]','input[placeholder*="Adresse"]'],city:['input[name*="city"]','input[name*="stadt"]','input[placeholder*="Stadt"]'],zipCode:['input[name*="zip"]','input[name*="plz"]','input[placeholder*="PLZ"]'],country:['select[name*="country"]','select[name*="land"]','input[name*="country"]'],currentPosition:['input[name*="position"]','input[name*="stelle"]','input[placeholder*="Position"]'],experience:['input[name*="experience"]','input[name*="erfahrung"]','select[name*="experience"]'],salary:['input[name*="salary"]','input[name*="gehalt"]','input[placeholder*="Gehalt"]'],availability:['input[name*="availability"]','input[name*="verf\xFCgbar"]','select[name*="start"]']};for(let[o,s]of Object.entries(r))if(e[o])for(let n of s){let a=document.querySelector(n);if(a&&a.offsetParent!==null){await this.fillField(a,e[o]),t++,console.log("[StepstoneForm] Filled ".concat(o,": ").concat(e[o]));break}}return console.log("[StepstoneForm] Filled ".concat(t," form fields")),t>0}catch(t){return console.error("[StepstoneForm] Error filling form fields:",t),!1}}static async fillField(e,t){try{if(!e||!t)return;if(e.focus(),await this.wait(200),e.tagName.toLowerCase()==="select"){let r=e.querySelectorAll("option");for(let o of r)if(o.textContent.toLowerCase().includes(t.toLowerCase())){e.value=o.value,e.dispatchEvent(new Event("change",{bubbles:!0}));break}}else e.value=t,e.dispatchEvent(new Event("input",{bubbles:!0})),e.dispatchEvent(new Event("change",{bubbles:!0}));await this.wait(200)}catch(r){console.error("[StepstoneForm] Error filling field:",r)}}static async handleResumeUpload(e){try{console.log("[StepstoneForm] Handling resume upload");let t=['input[type="file"][accept*="pdf"]','input[type="file"][name*="resume"]','input[type="file"][name*="cv"]','input[type="file"][name*="lebenslauf"]','.file-upload input[type="file"]','[data-testid*="upload"] input[type="file"]'];for(let r of t)if(document.querySelector(r)){if(console.log("[StepstoneForm] Found file upload input: ".concat(r)),e.file)return console.log("[StepstoneForm] Resume upload would be triggered here"),!0;break}return!1}catch(t){return console.error("[StepstoneForm] Error handling resume upload:",t),!1}}static async fillCoverLetter(e){try{console.log("[StepstoneForm] Filling cover letter");let t=['textarea[name*="cover"]','textarea[name*="anschreiben"]','textarea[name*="motivation"]','textarea[placeholder*="Anschreiben"]','textarea[placeholder*="Motivation"]',".cover-letter textarea",'[data-testid*="cover"] textarea'];for(let r of t){let o=document.querySelector(r);if(o&&o.offsetParent!==null)return await this.fillField(o,e),console.log("[StepstoneForm] Cover letter filled successfully"),!0}return!1}catch(t){return console.error("[StepstoneForm] Error filling cover letter:",t),!1}}static async submitApplication(){try{console.log("[StepstoneForm] Attempting to submit application");let e=['button[type="submit"]','button[class*="submit"]','button[class*="send"]','button[class*="senden"]','input[type="submit"]',".submit-button",'[data-testid*="submit"]'];for(let t of e){let r=document.querySelector(t);if(r&&!r.disabled)return console.log("[StepstoneForm] Clicking submit button: ".concat(t)),r.click(),await this.wait(3e3),!0}return!1}catch(e){return console.error("[StepstoneForm] Error submitting application:",e),!1}}static async hasValidationErrors(){try{let e=[".error",".validation-error",'[class*="error"]',".field-error",'[aria-invalid="true"]'];for(let t of e){let r=document.querySelector(t);if(r&&r.offsetParent!==null)return console.log("[StepstoneForm] Validation error found: ".concat(r.textContent)),!0}return!1}catch(e){return console.error("[StepstoneForm] Error checking validation errors:",e),!1}}static async wait(e=1e3){await new Promise(t=>setTimeout(t,e))}},$=fe});var he,be,Fe=S(()=>{de();pe();me();R();he=class{static async processJobPage(e,t,r,o){try{console.log("[StepstoneJobPage] Processing page ".concat(e,"/").concat(t)),h("Processing StepStone page ".concat(e," of ").concat(t),"info");let s=await v.getListOfJobsOnPage(r);if(g("Found ".concat(s.length," jobs on StepStone page ").concat(e)),s.length===0)return console.log("[StepstoneJobPage] No jobs found on page ".concat(e)),h("No jobs found on current page","warning"),!0;let n=0,a=0,i=0,c=0;for(let[p,b]of s.entries()){if(await y(o))return console.log("[StepstoneJobPage] Stop requested during job processing - breaking job loop"),!1;try{console.log("[StepstoneJobPage] Processing job ".concat(p+1,"/").concat(s.length," on page ").concat(e)),h("Processing job ".concat(p+1,"/").concat(s.length," on page ").concat(e),"info");let f=await this.processJob(b,o);switch(n++,f){case"success":a++,g("[StepstoneJobPage] Job ".concat(p+1," processed successfully"));break;case"skipped":i++,g("[StepstoneJobPage] Job ".concat(p+1," skipped"));break;case"error":c++,g("[StepstoneJobPage] Job ".concat(p+1," had an error"));break;case"stopped":return console.log("[StepstoneJobPage] Stop requested during job processing"),!1;default:g("[StepstoneJobPage] Job ".concat(p+1," returned unknown result: ").concat(f))}p<s.length-1&&await this.wait(2e3)}catch(f){if(console.error("[StepstoneJobPage] Error processing job ".concat(p+1,":"),f),c++,await y(o))return console.log("[StepstoneJobPage] Stop requested after job error - breaking job loop"),!1}}let u="Page ".concat(e," completed: ").concat(n," processed, ").concat(a," successful, ").concat(i," skipped, ").concat(c," errors");if(console.log("[StepstoneJobPage] ".concat(u)),h(u,"info"),e<t){if(console.log("[StepstoneJobPage] Navigating to page ".concat(e+1)),!await v.navigateToNextPage(e+1))return console.log("[StepstoneJobPage] Failed to navigate to page ".concat(e+1)),h("Could not navigate to page ".concat(e+1),"warning"),!1;await this.wait(3e3)}return!0}catch(s){return console.error("[StepstoneJobPage] Error processing page ".concat(e,":"),s),h("Error processing page ".concat(e,": ").concat(s.message),"error"),!1}}static async processJob(e,t){try{if(await y(t))return"stopped";let r=await D.extractJobInfoFromListing(e);if(!r||!r.title)return console.log("[StepstoneJobPage] Could not extract job information, skipping"),"skipped";if(g("[StepstoneJobPage] Processing job: ".concat(r.title," at ").concat(r.company)),await this.shouldSkipJob(r))return g("[StepstoneJobPage] Skipping job based on criteria: ".concat(r.title)),"skipped";if(!await this.openJobDetails(e))return console.log("[StepstoneJobPage] Could not open job details"),"error";if(await this.wait(2e3),await y(t))return"stopped";let s=await D.extractJobInfo(),n=w(w({},r),s);if(!await $.isApplicationFormAvailable())return g("[StepstoneJobPage] No application form available for: ".concat(n.title)),await this.goBackToJobList(),"skipped";let i=await this.applyForJob(n,t);return await this.goBackToJobList(),i}catch(r){return console.error("[StepstoneJobPage] Error processing job:",r),await this.goBackToJobList(),"error"}}static async applyForJob(e,t){try{if(g("[StepstoneJobPage] Attempting to apply for: ".concat(e.title)),await y(t))return"stopped";let r=window.currentUserData||{},o=window.currentAiSettings||{};return r.username?await $.fillApplicationForm(e,r)?(await this.wait(1e3),await $.hasValidationErrors()?(console.log("[StepstoneJobPage] Form has validation errors for: ".concat(e.title)),"error"):(g("[StepstoneJobPage] Form filled successfully for: ".concat(e.title," (submission disabled for safety)")),await this.trackApplication(e,!0,"Application completed successfully"),h("Applied to ".concat(e.title," at ").concat(e.company),"success"),"success")):(console.log("[StepstoneJobPage] Could not fill application form for: ".concat(e.title)),"error"):(console.log("[StepstoneJobPage] No user data available for application"),"error")}catch(r){return console.error("[StepstoneJobPage] Error applying for job:",r),await this.trackApplication(e,!1,r.message),"error"}}static async shouldSkipJob(e){try{return!e.title||!e.company}catch(t){return console.error("[StepstoneJobPage] Error checking skip criteria:",t),!1}}static async openJobDetails(e){try{let t=['a[href*="/job/"]','a[href*="/stelle/"]',"h2 a","h3 a",".job-title a",'[class*="title"] a'];for(let r of t){let o=e.querySelector(r);if(o)return console.log("[StepstoneJobPage] Clicking job link: ".concat(r)),o.click(),await this.wait(2e3),!0}return e.tagName.toLowerCase()==="a"?(e.click(),await this.wait(2e3),!0):(e.click(),await this.wait(2e3),!0)}catch(t){return console.error("[StepstoneJobPage] Error opening job details:",t),!1}}static async goBackToJobList(){try{if(window.history.length>1)return window.history.back(),await this.wait(2e3),!0;let e=['button[aria-label*="back"]','button[aria-label*="zur\xFCck"]','a[aria-label*="back"]','a[aria-label*="zur\xFCck"]',".back-button",'[class*="back"]','button:contains("Zur\xFCck")','a:contains("Zur\xFCck")'];for(let t of e){let r=document.querySelector(t);if(r)return console.log("[StepstoneJobPage] Clicking back button: ".concat(t)),r.click(),await this.wait(2e3),!0}return!1}catch(e){return console.error("[StepstoneJobPage] Error going back to job list:",e),!1}}static async trackApplication(e,t,r=""){try{let o={platform:"stepstone",jobTitle:e.title,company:e.company,location:e.location,url:e.url,success:t,reason:r,timestamp:new Date().toISOString()};chrome&&chrome.runtime&&chrome.runtime.sendMessage({action:"trackApplication",data:o}),g("[StepstoneJobPage] Tracked application: ".concat(e.title," - Success: ").concat(t))}catch(o){console.error("[StepstoneJobPage] Error tracking application:",o)}}static async wait(e=1e3){await new Promise(t=>setTimeout(t,e))}static debugLog(e){console.log("[StepstoneJobPage] ".concat(e))}static errorLog(e,t){console.error("[StepstoneJobPage] ".concat(e,":"),t)}},be=he});var Ne={};B(Ne,{default:()=>Ve});var ye,Ve,Me=S(()=>{N();de();Fe();pe();me();R();ye=class extends T{constructor(){super("StepStone"),this.config={maxJobsPerPage:20,maxPages:50,waitBetweenApplications:2500,waitBetweenPages:2500,supportedFileTypes:["pdf","doc","docx"]},this.selectors={searchContainer:".at-facets-header-title",jobCountElement:'[data-at="search-jobs-count"]',jobListings:'article[data-testid="job-item"]',jobTitle:'[data-testid="job-item-title"]',company:'[data-at="job-item-company-name"]',location:'[data-at="job-item-location"]',workType:'[data-at="job-item-work-from-home"]',applyButton:'button[class*="apply"], .apply-button, [data-testid*="apply"]'}}async startAutoApply(){try{if(this.isAutoApplyRunning()){this.debugLog("StepStone auto-apply already running, skipping duplicate start");return}if(this.debugLog("Starting StepStone auto-apply process"),this.setAutoApplyRunning(!0),this.resetStopFlag(),!this.isCurrentPlatform())throw new Error("Not on StepStone platform");let e=document.querySelector(this.selectors.searchContainer);if(!e){let o=['h1[class*="facets-header"]','[data-genesis-element="TEXT"]:has([data-at="search-jobs-count"])','h1:has([data-at="search-jobs-count"])','[class*="search-results"]','[class*="job-results"]',"main",'[role="main"]',"body"];for(let s of o)if(e=document.querySelector(s),e){this.debugLog("Using fallback search container: ".concat(s));break}}if(!e)throw h("Could not find jobs list. Please make sure you are on StepStone jobs page.","error"),new Error("StepStone jobs search container not found");let t=await this.getTotalJobsCount(e);if(h("Found ".concat(t," jobs to process on StepStone"),"info"),t===0){h("No jobs found to process on StepStone","warning");return}let r=await this.getAvailablePages(e,t);for(let o=1;o<=r;o++){if(this.isStopRequested()||await y(this.isAutoApplyRunning)){this.debugLog("Stop requested during page processing");return}if(await this.processJobPage(o,r,e,this.isAutoApplyRunning)===!1){this.debugLog("Page processing returned false - stopping auto-apply");break}if(this.isStopRequested()||await y(this.isAutoApplyRunning)){this.debugLog("Stop requested after page processing");break}}this.debugLog("StepStone auto-apply process completed"),h("StepStone auto-apply process completed","success")}catch(e){throw this.errorLog("Error in StepStone auto-apply process",e),h("StepStone auto-apply error: ".concat(e.message),"error"),e}finally{this.setAutoApplyRunning(!1)}}async getTotalJobsCount(e){try{return await v.getTotalJobsSearchCount(e)}catch(t){return this.errorLog("Error getting StepStone job count",t),0}}async getAvailablePages(e,t){try{return await v.getAvailablePages(e,t)}catch(r){return this.errorLog("Error getting StepStone available pages",r),1}}async processJobPage(e,t,r,o){try{return await be.processJobPage(e,t,r,o)}catch(s){return this.errorLog("Error processing StepStone page ".concat(e),s),!1}}async fillApplicationForm(e,t){try{return this.debugLog("Filling StepStone application form for: ".concat(e.title," at ").concat(e.company)),await $.fillApplicationForm(e,t)}catch(r){return this.errorLog("Error filling StepStone application form",r),!1}}async extractJobInfo(){try{return await D.extractJobInfo()}catch(e){return this.errorLog("Error extracting StepStone job info",e),null}}async navigateToNextPage(e){try{return await v.navigateToNextPage(e+1)}catch(t){return this.errorLog("Error navigating to StepStone page ".concat(e+1),t),!1}}isCurrentPlatform(e=window.location.href){return/stepstone\.de/i.test(e)||/stepstone\.com/i.test(e)||/stepstone\.[a-z]{2,3}/i.test(e)}getSelectors(){return w({},this.selectors)}getConfig(){return w({},this.config)}hasFeature(e){return["advancedSearch","salaryFilter","locationFilter","experienceLevel","jobType","companySize"].includes(e)}async trackApplication(e,t,r){try{this.debugLog("Tracking StepStone application: ".concat(e.title," - Success: ").concat(t)),!t&&r&&this.debugLog("Application failed: ".concat(r)),await be.trackApplication(e,t,r)}catch(o){this.errorLog("Error tracking StepStone application",o)}}async handleError(e,t){return this.errorLog("StepStone error in ".concat(t),e),e.message.includes("rate limit")||e.message.includes("zu viele")?(this.debugLog("Rate limit detected - slowing down"),await this.wait(5e3),!0):e.message.includes("not found")||e.message.includes("selector")?(this.debugLog("DOM element not found - possibly page structure changed"),await this.wait(3e3),!0):e.message.includes("blocked")||e.message.includes("gesperrt")?(this.debugLog("Account blocked - stopping auto-apply"),this.requestStop("account_blocked"),!1):!0}async attemptRecovery(){try{if(this.debugLog("Attempting StepStone recovery"),await this.wait(2e3),!this.isCurrentPlatform())return this.debugLog("Not on StepStone page after recovery attempt"),!1;let e=document.querySelector(this.selectors.searchContainer);if(!e){let t=['h1[class*="facets-header"]','[data-genesis-element="TEXT"]:has([data-at="search-jobs-count"])','h1:has([data-at="search-jobs-count"])','[class*="search-results"]',"main","body"];for(let r of t)if(e=document.querySelector(r),e){this.debugLog("Recovery using fallback selector: ".concat(r));break}}return e?(this.debugLog("StepStone recovery successful"),!0):(this.debugLog("Search container not found after recovery"),!1)}catch(e){return this.errorLog("StepStone recovery failed",e),!1}}getAnalytics(){return{platform:"stepstone",processedPages:0,processedJobs:0,successfulApplications:0,errors:0}}isJobSearchPage(e=window.location.href){return this.isCurrentPlatform(e)&&(e.includes("/jobs")||e.includes("/job/")||e.includes("/stellenangebote")||e.includes("/stellenanzeige"))}getCurrentSearchQuery(){try{let e=new URLSearchParams(window.location.search),t=e.get("q")||e.get("query")||"";return t||(t=v.getCurrentSearchInfo().query||""),t}catch(e){return this.errorLog("Error getting StepStone search query",e),""}}getCurrentLocationFilter(){try{return v.getCurrentSearchInfo().location||""}catch(e){return this.errorLog("Error getting StepStone location filter",e),""}}async getJobElementsOnPage(){try{let e=document.querySelector(this.selectors.searchContainer);if(!e){let t=['h1[class*="facets-header"]','[data-genesis-element="TEXT"]:has([data-at="search-jobs-count"])',"main",'[role="main"]'];for(let r of t)if(e=document.querySelector(r),e)break}return await v.getListOfJobsOnPage(e||document.body)}catch(e){return this.errorLog("Error getting StepStone job elements",e),[]}}async checkApplicationFormAvailability(){try{return await $.isApplicationFormAvailable()}catch(e){return this.errorLog("Error checking StepStone form availability",e),!1}}},Ve=ye});var J=class{static detectPlatform(e=window.location.href){if(e==="about:blank"||e==="chrome://newtab/"||e.startsWith("chrome://"))return console.log("[PlatformDetector] Special URL detected: ".concat(e,", returning 'unknown'")),"unknown";let t=e.toLowerCase();for(let[r,o]of Object.entries(this.PLATFORM_PATTERNS))for(let s of o)if(s.test(t))return console.log("[PlatformDetector] Detected platform: ".concat(r," from URL: ").concat(e)),r;return console.warn("[PlatformDetector] No platform detected from URL: ".concat(e,", returning 'unknown'")),"unknown"}static getCurrentPlatform(){return this.detectPlatform()}static isSupportedPlatform(e=window.location.href){let t=this.detectPlatform(e);return t!=="unknown"&&Object.keys(this.PLATFORM_PATTERNS).includes(t)}static getSupportedPlatforms(){return Object.keys(this.PLATFORM_PATTERNS)}static isPlatform(e,t=window.location.href){return this.detectPlatform(t)===e.toLowerCase()}static isLinkedIn(e=window.location.href){return this.isPlatform("linkedin",e)}static isIndeed(e=window.location.href){return this.isPlatform("indeed",e)}static isStepStone(e=window.location.href){return this.isPlatform("stepstone",e)}static getPlatformDisplayName(e){return{linkedin:"LinkedIn",indeed:"Indeed",stepstone:"StepStone"}[e.toLowerCase()]||e}static isJobSearchPage(e=window.location.href){let t=this.detectPlatform(e);if(t==="unknown")return!1;let r=e.toLowerCase();switch(t){case"linkedin":return r.includes("/jobs/")||r.includes("/job/");case"indeed":return r.includes("/jobs")||r.includes("/viewjob")||r.includes("q=")||r.includes("/job/");case"stepstone":return r.includes("/jobs")||r.includes("/job/")||r.includes("/stellenangebote")||r.includes("/stellenanzeige");default:return!1}}static debugDetection(e=window.location.href){console.group("[PlatformDetector] Detection Details"),console.log("URL:",e),console.log("Detected Platform:",this.detectPlatform(e)),console.log("Is Supported:",this.isSupportedPlatform(e)),console.log("Is Job Search Page:",this.isJobSearchPage(e)),console.log("Display Name:",this.getPlatformDisplayName(this.detectPlatform(e))),console.groupEnd()}};j(J,"PLATFORM_PATTERNS",{linkedin:[/linkedin\.com/i,/linkedin\.[a-z]{2,3}/i],indeed:[/indeed\.com/i,/indeed\.[a-z]{2,3}/i,/indeed\.[a-z]{2,3}\.[a-z]{2,3}/i],stepstone:[/stepstone\.de/i,/stepstone\.com/i,/stepstone\.[a-z]{2,3}/i]}),j(J,"DEFAULT_PLATFORM","linkedin");var C=J;var O=class{static async createPlatform(e=window.location.href){let t=C.detectPlatform(e);return await this.createPlatformByName(t)}static async createPlatformByName(e){let t=e.toLowerCase();try{if(this.platformCache.has(t)){let s=this.platformCache.get(t);return console.log("[PlatformFactory] Using cached ".concat(t," platform")),new s}let r=await this.loadPlatformClass(t);this.platformCache.set(t,r);let o=new r;return console.log("[PlatformFactory] Created ".concat(t," platform instance")),o}catch(r){throw console.error("[PlatformFactory] Failed to create platform '".concat(e,"':"),r),new Error("Failed to load platform '".concat(e,"': ").concat(r.message))}}static async loadPlatformClass(e){switch(e){case"linkedin":console.log("[PlatformFactory] Loading LinkedIn platform...");let{default:t}=await Promise.resolve().then(()=>(je(),Re));return t;case"indeed":console.log("[PlatformFactory] Loading Indeed platform...");let{default:r}=await Promise.resolve().then(()=>(De(),Je));return r;case"stepstone":console.log("[PlatformFactory] Loading StepStone platform...");let{default:o}=await Promise.resolve().then(()=>(Me(),Ne));return o;default:throw new Error("Unsupported platform: ".concat(e))}}static getAvailablePlatforms(){return C.getSupportedPlatforms()}static isPlatformSupported(e){return this.getAvailablePlatforms().includes(e.toLowerCase())}static async preloadAllPlatforms(){console.log("[PlatformFactory] Preloading all platforms...");let t=this.getAvailablePlatforms().map(async r=>{try{await this.createPlatformByName(r),console.log("[PlatformFactory] Preloaded ".concat(r," platform"))}catch(o){console.warn("[PlatformFactory] Failed to preload ".concat(r," platform:"),o)}});await Promise.allSettled(t),console.log("[PlatformFactory] Platform preloading completed")}static clearCache(){console.log("[PlatformFactory] Clearing platform cache"),this.platformCache.clear()}static async getCurrentPlatform(){return await this.createPlatform()}static isSupportedPage(e=window.location.href){return C.isSupportedPlatform(e)&&C.isJobSearchPage(e)}static getStatus(){let e=C.getCurrentPlatform(),t=this.isPlatformSupported(e),r=C.isJobSearchPage(),o=Array.from(this.platformCache.keys());return{currentUrl:window.location.href,detectedPlatform:e,isPlatformSupported:t,isJobSearchPage:r,availablePlatforms:this.getAvailablePlatforms(),cachedPlatforms:o}}static debugStatus(){let e=this.getStatus();console.group("[PlatformFactory] Status"),Object.entries(e).forEach(([t,r])=>{console.log("".concat(t,":"),r)}),console.groupEnd()}};j(O,"platformCache",new Map);var F=O;R();var k=!1,Se=!1,we=!1;window.requestAutoApplyStop=function(l="manual"){g("Immediate stop requested: ".concat(l)),Se=!0,k=!1};window.isStopRequested=function(){return Se};window.testContentScript=function(){return console.log("[Content Script Test] Content script is working!"),console.log("[Content Script Test] Current URL:",window.location.href),console.log("[Content Script Test] Platform detection:",F.isSupportedPage()),console.log("[Content Script Test] Auto-apply running:",k),{url:window.location.href,isSupported:F.isSupportedPage(),isAutoApplyRunning:k,isInitialized:we}};async function Oe(){let l=null;try{if(await y(k))return;if(!F.isSupportedPage()){let e=window.location.href;if(e==="about:blank"||e.startsWith("chrome://")){g("Skipping auto-apply on special URL: ".concat(e));return}h("This page is not supported. Please navigate to a job search page on LinkedIn, Indeed, or StepStone.","error");return}try{l=await F.createPlatform(),g("Platform detected: ".concat(l.getPlatformName())),h("Starting auto-apply on ".concat(l.getPlatformName()),"info")}catch(e){g("Failed to create platform: ".concat(e.message)),h("Unsupported platform or failed to initialize: ".concat(e.message),"error");return}await l.startAutoApply(),await y(k)||(h("Auto-apply process completed!","success"),chrome&&chrome.runtime&&chrome.runtime.sendMessage({action:"PROCESS_COMPLETE"}))}catch(e){if(console.error("Error in auto-apply process:",e),h("Error in auto-apply process: ".concat(e.message),"error"),l&&typeof l.handleError=="function")try{await l.handleError(e,"main_auto_apply")}catch(t){g("Platform error handling failed: ".concat(t.message))}}}typeof chrome>"u"||!chrome.runtime?console.log("Chrome extension APIs not available - script may be running in wrong context"):we?console.log("[Content Script] Already initialized, skipping duplicate setup"):(we=!0,console.log("[Content Script] Initializing on:",window.location.href),console.log("[Content Script] Message listener set up, ready to receive messages"),chrome.runtime.onMessage.addListener((l,e,t)=>(console.log("[Content Script] Received message:",l.action,"from:",e),(async()=>{try{l.action==="startAutoApply"?k?(g("Auto apply already running, ignoring duplicate start request"),t({success:!1,message:"Auto apply already running"})):(k=!0,Se=!1,window.currentUserData=l.userData,window.currentAiSettings=l.aiSettings,Oe(),t({success:!0,message:"Auto apply started"})):l.action==="stopAutoApply"?(window.requestAutoApplyStop("background_request"),t({success:!0,message:"Auto apply stopped"})):l.action==="GET_STATE"?t({isRunning:k}):l.action==="START_AUTO_APPLY"?k?t({success:!1,message:"Auto apply already running"}):(k=!0,Oe(),t({success:!0,message:"Auto apply started"})):l.action==="STOP_AUTO_APPLY"?(k=!1,t({success:!0,message:"Auto apply stopped"})):t({success:!1,message:"Unknown action"})}catch(r){console.error("Error handling message in content script:",r),t({success:!1,error:r.message})}})(),!0)));
