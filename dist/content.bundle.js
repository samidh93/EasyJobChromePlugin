(()=>{var a=class{static async getTotalJobsSearchCount(o){try{await new Promise(t=>setTimeout(t,1e3));let e=o.querySelector(".jobs-search-results-list__subtitle");if(e){let t=e.textContent.trim(),n=parseInt(t.split(" ")[0].replace(/,/g,"").replace(/\./g,"").replace(/\+/g,""));return console.log(`Total jobs found: ${n}`),n}else return console.log("No results found"),0}catch(e){return console.error("An error occurred while fetching total jobs count:",e),0}}static async getAvailablePages(o){try{await new Promise(c=>setTimeout(c,1e3));let e=o.querySelector('ul[class*="artdeco-pagination__pages--number"]');if(!e)return console.log("Pagination list not found."),0;let t=e.querySelectorAll("li");if(t.length===0)return console.log("No pagination items found."),0;let l=t[t.length-1].getAttribute("data-test-pagination-page-btn");if(l){let c=parseInt(l,10);return console.log(`Total pages available: ${c}`),c}else return console.log("Could not find 'data-test-pagination-page-btn' attribute."),0}catch(e){return console.error("Exception occurred while fetching available pages:",e),0}}static async getListOfJobsOnPage(o){try{await new Promise(n=>setTimeout(n,1e3));let e=o.querySelector(".scaffold-layout__list");if(!e)return console.log("Jobs container not found."),[];let t=e.querySelectorAll("li[class*='scaffold-layout__list-item']");return console.log(`Found ${t.length} jobs on this page.`),Array.from(t)}catch(e){return console.error("Exception occurred while fetching the list of jobs:",e),[]}}static async getJobClickableElement(o){try{await new Promise(t=>setTimeout(t,1e3));let e=o.querySelector("a");return e||(console.log("Could not find clickable element for job"),null)}catch(e){return console.error("Exception occurred while fetching clickable element:",e),null}}static async scrollDownToLoadNextJob(o){try{await new Promise(e=>setTimeout(e,1e3)),o.scrollIntoView({behavior:"smooth",block:"center"}),console.log("Scrolled down to load next job")}catch(e){console.error("Error while scrolling down to load next job",e)}}static async getJobElements(o){try{await new Promise(t=>setTimeout(t,1e3));let e=o.querySelector(".jobs-search__job-details");return e?(console.log("Found job elements"),e):(console.log("Could not find job elements"),null)}catch(e){return console.error("Error while fetching job elements",e),null}}static async clickOnJob(o){try{o.click(),console.log("Clicked on job element")}catch(e){console.info("could not click on job element",e)}}static async clickEasyApply(){try{let o=document.querySelector(".jobs-s-apply button");o&&(o.click(),console.log("Clicked on easy apply button"))}catch(o){console.error("Error while clicking on apply button",o)}}static async closeForm(o=!1){try{let e=document.querySelector('button[aria-label="Dismiss"]');if(e)if(e.click(),await new Promise(t=>setTimeout(t,1e3)),o){let t=document.querySelector('button[data-control-name="save_application_btn"]');t&&(t.click(),console.log("closed form and saved application"))}else{let t=document.querySelector('button[data-control-name="discard_application_confirm_btn"]');t&&(t.click(),console.log("closed form and discarded application"))}}catch(e){console.error("Error while closing form",e)}}static async clickNextPage(){try{await new Promise(e=>setTimeout(e,1e3));let o=document.querySelector('button[aria-label="Continue to next step"]');o&&(o.click(),console.log("Clicked on next page button"))}catch(o){console.error("Error while clicking on next page button",o)}}static async clickPreviousPage(){try{await new Promise(e=>setTimeout(e,1e3));let o=document.querySelector('button[aria-label="Back to previous step"]');o&&(o.click(),console.log("Clicked on previous page button"))}catch(o){console.error("Error while clicking on previous page button",o)}}static async clickReviewApplication(){try{await new Promise(e=>setTimeout(e,1e3));let o=document.querySelector('button[aria-label="Review your application"]');o&&(o.click(),console.log("Clicked on review button"))}catch(o){console.error("Error while clicking on review button",o)}}static async clickSubmitApplication(){try{await new Promise(e=>setTimeout(e,1e3));let o=document.querySelector('button[aria-label="Submit application"]');o&&(o.click(),console.log("Clicked on submit button"))}catch(o){console.error("Error while clicking on submit button",o)}}},r=a;var u=new MutationObserver(async(i,o)=>{let e=document.querySelector(".scaffold-layout.jobs-search-two-pane__layout");if(e){o.disconnect();try{let t=await r.getTotalJobsSearchCount(e),n=await r.getAvailablePages(e),l=await r.getListOfJobsOnPage(e);for(let c of l){let s=await r.getJobClickableElement(c);await r.clickOnJob(s),await r.scrollDownToLoadNextJob(s),await r.clickEasyApply(),await r.clickNextPage(),await r.closeForm(!1);break}}catch(t){console.error("An error occurred while processing jobs:",t)}}});u.observe(document.body,{childList:!0,subtree:!0});})();
