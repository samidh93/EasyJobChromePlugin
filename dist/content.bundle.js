var z=Object.defineProperty,V=Object.defineProperties;var X=Object.getOwnPropertyDescriptors;var F=Object.getOwnPropertySymbols;var W=Object.prototype.hasOwnProperty,H=Object.prototype.propertyIsEnumerable;var Q=(u,e,t)=>e in u?z(u,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):u[e]=t,A=(u,e)=>{for(var t in e||(e={}))W.call(e,t)&&Q(u,t,e[t]);if(F)for(var t of F(e))H.call(e,t)&&Q(u,t,e[t]);return u},k=(u,e)=>V(u,X(e));var _=class{static async wait(e=1e3){await new Promise(t=>setTimeout(t,e))}static debugLog(e){console.log("[".concat(this.constructor.name,"] ").concat(e))}static errorLog(e,t){console.error("[".concat(this.constructor.name,"] ").concat(e,":"),t)}},y=_;var I=class extends y{static async getTotalJobsSearchCount(e){try{await this.wait();let t=e.querySelector(".jobs-search-results-list__subtitle");if(t){let r=t.textContent.trim(),n=parseInt(r.split(" ")[0].replace(/,/g,"").replace(/\./g,"").replace(/\+/g,""));return this.debugLog("Total jobs found: ".concat(n)),n}else return this.debugLog("No results found"),0}catch(t){return this.errorLog("Error fetching total jobs count",t),0}}static async getAvailablePages(e,t){try{await this.wait();let r=e.querySelector('ul[class*="jobs-search-pagination__pages"]');if(!r)return this.debugLog("Pagination list not found."),0;let n=r.querySelectorAll("li");if(n.length===0)return this.debugLog("No pagination items found."),0;let o=n[n.length-1];this.debugLog("Last page: ".concat(o));let s=Math.ceil(t/25);return this.debugLog("Total pages available: ".concat(s)),s}catch(r){return this.errorLog("Error fetching available pages",r),0}}static async getListOfJobsOnPage(e){try{await this.wait();let t=e.querySelector(".scaffold-layout__list");if(!t)return this.debugLog("Jobs container not found."),[];let r=t.querySelectorAll("li[class*='scaffold-layout__list-item']");return this.debugLog("Found ".concat(r.length," jobs on this page.")),Array.from(r)}catch(t){return this.errorLog("Error fetching list of jobs",t),[]}}static async goToNextPage(){try{await this.wait();let e=document.querySelector('button[aria-label="View next page"]')||document.querySelector("button.jobs-search-pagination__button--next")||document.querySelector('button[aria-label="Next"]');return e&&!e.disabled?(this.debugLog("Found next page button, clicking..."),e.click(),this.debugLog("Clicked next page button"),await this.wait(3e3),!0?(this.debugLog("Successfully navigated to next page"),!0):(this.debugLog("Jobs failed to load on next page"),!1)):(this.debugLog("Next page button not found or disabled - likely on last page"),!1)}catch(e){return this.errorLog("Error navigating to next page",e),!1}}static async isOnLastPage(){try{let e=document.querySelector('button[aria-label="View next page"]')||document.querySelector("button.jobs-search-pagination__button--next");return!e||e.disabled}catch(e){return this.errorLog("Error checking if on last page",e),!0}}},v=I;var C=class extends y{static async getJobClickableElement(e){try{await this.wait();let t=e.querySelector("a");return t||(this.debugLog("Could not find clickable element for job"),null)}catch(t){return this.errorLog("Error fetching clickable element",t),null}}static async scrollDownToLoadNextJob(e){try{await this.wait(),e.scrollIntoView({behavior:"smooth",block:"center"}),this.debugLog("Scrolled down to load next job")}catch(t){this.errorLog("Error scrolling down to load next job",t)}}static async clickOnJob(e){try{e.click(),this.debugLog("Clicked on job element")}catch(t){this.debugLog("Could not click on job element",t)}}static async isEasyButtonAvailable(){try{return document.querySelector(".jobs-s-apply button")?(this.debugLog("found easy apply button"),!0):(this.debugLog("easy apply button not found"),!1)}catch(e){return console.error("easy apply button not found error",e),!1}}static async clickEasyApply(){try{let e=document.querySelector(".jobs-s-apply button");if(e)return e.click(),this.debugLog("Clicked on easy apply button"),!0;throw new Error("Easy apply button not found")}catch(e){throw this.errorLog("Error clicking on easy apply button",e),e}}},E=C;var x=class extends y{static async getJobId(){try{let e=new URLSearchParams(window.location.search).get("currentJobId");return e?(this.debugLog("Found job ID: ".concat(e)),e):(this.debugLog("Job ID not found in URL"),null)}catch(e){return this.errorLog("Error getting job ID",e),null}}static async getJobTitle(){try{let e=document.querySelector(".job-details-jobs-unified-top-card__job-title h1");if(e){let t=e.textContent.trim();return this.debugLog("Found job title: ".concat(t)),t}return this.debugLog("Job title not found"),null}catch(e){return this.errorLog("Error getting job title",e),null}}static async getCompanyName(){try{let e=document.querySelector(".job-details-jobs-unified-top-card__company-name a");if(e){let t=e.textContent.trim();return this.debugLog("Found company name: ".concat(t)),t}return this.debugLog("Company name not found"),null}catch(e){return this.errorLog("Error getting company name",e),null}}static async getLocation(){try{let e=document.querySelector(".job-details-jobs-unified-top-card__tertiary-description-container .tvm__text");if(e){let t=e.textContent.trim();return this.debugLog("Found location: ".concat(t)),t}return this.debugLog("Location not found"),null}catch(e){return this.errorLog("Error getting location",e),null}}static async getJobType(){try{let e=document.querySelectorAll("button.job-details-preferences-and-skills .job-details-preferences-and-skills__pill");if(e.length>1){let r=e[1].querySelectorAll("span");if(r.length>0){let n=r[0].querySelectorAll("span");if(n.length>0){let o=n[0].textContent.trim();if(o)return this.debugLog("Found jobType type: ".concat(o)),o}}}return this.debugLog("jobType type not found"),null}catch(e){return this.errorLog("Error getting jobType type",e),null}}static async getRemoteType(){try{let e=document.querySelectorAll("button.job-details-preferences-and-skills .job-details-preferences-and-skills__pill");if(e.length>0){let r=e[0].querySelectorAll("span");if(r.length>0){let n=r[0].querySelectorAll("span");if(n.length>0){let o=n[0].textContent.trim();if(o)return this.debugLog("Found remote type: ".concat(o)),o}}}return this.debugLog("Remote type not found"),null}catch(e){return this.errorLog("Error getting remote type",e),null}}static async getJobDescription(){try{let e=document.querySelector(".jobs-description__content");if(e){let t=e.textContent.trim();return this.debugLog("Found job description"),t}return this.debugLog("Job description not found"),null}catch(e){return this.errorLog("Error getting job description",e),null}}static async getApplicantCount(){try{let e=document.querySelectorAll(".job-details-jobs-unified-top-card__tertiary-description-container .tvm__text"),t=e.length>0?e[e.length-1]:null;if(t){let r=t.textContent.trim();return this.debugLog("Found applicant count: ".concat(r)),r}return this.debugLog("Applicant count not found"),null}catch(e){return this.errorLog("Error getting applicant count",e),null}}static async getPostedDate(){try{let e=document.querySelectorAll(".job-details-jobs-unified-top-card__tertiary-description-container .tvm__text")[2];if(e){let t=e.textContent.trim();return this.debugLog("Found posted date: ".concat(t)),t}return this.debugLog("posted date not found"),null}catch(e){return this.errorLog("Error getting applicant count",e),null}}static async getAllJobInfo(){try{let e={jobId:await this.getJobId(),title:await this.getJobTitle(),company:await this.getCompanyName(),location:await this.getLocation(),jobType:await this.getJobType(),remoteType:await this.getRemoteType(),description:await this.getJobDescription(),applicantCount:await this.getApplicantCount(),postedDate:await this.getPostedDate()};return this.debugLog("Retrieved all job information"),e}catch(e){return this.errorLog("Error getting all job information",e),null}}},T=x;var q=class{constructor(){this.currentSettings=null,this.defaultModel="qwen2.5:3b",this.settingsLoadPromise=null}async loadAISettings(e){try{if(console.log("AISettingsManager: Loading AI settings for user:",e),!e||typeof e!="string"||e.length!==36)return console.error("AISettingsManager: Invalid user ID provided:",e),console.log("AISettingsManager: Returning default settings (ollama)"),this.getDefaultSettings();console.log("AISettingsManager: Making API request to load settings...");let t=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/users/".concat(e,"/ai-settings/default")});return t&&t.success?(this.currentSettings=t.ai_settings,console.log("AISettingsManager: Successfully loaded AI settings"),this.currentSettings):(console.warn("AISettingsManager: No AI settings found, using default"),console.log("AISettingsManager: Response was:",t),this.getDefaultSettings())}catch(t){return console.error("AISettingsManager: Error loading AI settings:",t),this.getDefaultSettings()}}getDefaultSettings(){return console.log("AISettingsManager: No AI settings configured - user must set up AI first"),null}getCurrentSettings(){return this.currentSettings}setSettings(e){this.currentSettings=e,console.log("AISettingsManager: Settings updated:",e)}getModel(){let e=this.getCurrentSettings();return e&&(e.ai_model||e.model)||null}getProvider(){let e=this.getCurrentSettings();return e&&(e.ai_provider||e.provider)||null}async getDecryptedApiKey(){let e=this.getCurrentSettings();if(!e)return null;if(e.apiKey&&e.apiKey!=="encrypted")return e.apiKey;if(e.api_key_encrypted&&e.id)try{let t=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/ai-settings/".concat(e.id,"/encrypted-key")});if(t&&t.success&&t.api_key_encrypted){let r=await chrome.runtime.sendMessage({action:"apiRequest",method:"POST",url:"/ai-settings/decrypt-api-key",data:{encryptedApiKey:t.api_key_encrypted}});if(r&&r.success)return e.apiKey=r.decryptedApiKey,r.decryptedApiKey}}catch(t){throw console.error("AISettingsManager: Error fetching/decrypting API key:",t),new Error("Failed to retrieve API key")}return null}async testConnection(){try{let e=this.getProvider();return e==="ollama"?await chrome.runtime.sendMessage({action:"testOllama"}):e==="openai"?await chrome.runtime.sendMessage({action:"testOpenAI"}):this.getCurrentSettings().apiKey?{success:!0,message:"".concat(e," settings validated")}:{success:!1,error:"API key required for ".concat(e)}}catch(e){return console.error("AISettingsManager: Error testing connection:",e),{success:!1,error:e.message}}}async callAI(e){try{let t=this.getProvider(),r=this.getModel(),n=0;if(e.prompt?n=this.estimateTokens(e.prompt):e.messages&&(n=this.estimateTokensFromMessages(e.messages)),t==="ollama"){let o=k(A({},e),{model:r}),s=await chrome.runtime.sendMessage({action:"callOllama",endpoint:"generate",data:o});if(s.success===!1)throw new Error(s.error||"Unknown error from Ollama API");return s.data}else if(t==="openai"){let o=await this.getDecryptedApiKey();if(!o)throw new Error("OpenAI API key is required");let s=k(A({},e),{model:r,apiKey:o});console.log("Sending OpenAI request:",k(A({},s),{apiKey:"[REDACTED]"}));let i=await chrome.runtime.sendMessage({action:"callOpenAI",data:s});if(i.success===!1)throw new Error(i.error||"Unknown error from OpenAI API");return i.data}else throw new Error("Provider ".concat(t," not yet implemented"))}catch(t){throw console.error("AISettingsManager: Error calling AI API:",t),t}}async callAIWithStop(e,t=null){try{let r=this.getProvider();if(r==="ollama"){let n=this.getModel(),o=k(A({},e),{model:n});return new Promise((s,i)=>{let c=null;t&&(c=setInterval(async()=>{try{let a=!1;typeof t=="function"?a=await t():t&&t.value!==void 0?a=t.value:a=!!t,a&&(console.log("Stop requested during AI API call"),c&&clearInterval(c),s({stopped:!0}))}catch(a){console.error("Error in stop check:",a)}},500)),chrome.runtime.sendMessage({action:"callOllama",endpoint:"generate",data:o},a=>{c&&clearInterval(c),chrome.runtime.lastError?i(new Error(chrome.runtime.lastError.message)):a.success===!1?i(new Error(a.error||"Unknown error from Ollama API")):s(a.data)})})}else if(r==="openai"){let n=this.getModel(),o=await this.getDecryptedApiKey();if(!o)throw new Error("OpenAI API key is required");return new Promise((s,i)=>{let c=null;t&&(c=setInterval(async()=>{try{let a=!1;typeof t=="function"?a=await t():t&&t.value!==void 0?a=t.value:a=!!t,a&&(console.log("Stop requested during OpenAI API call"),c&&clearInterval(c),s({stopped:!0}))}catch(a){console.error("Error in stop check:",a)}},500)),chrome.runtime.sendMessage({action:"callOpenAI",data:k(A({},e),{model:n,apiKey:o})},a=>{c&&clearInterval(c),chrome.runtime.lastError?i(new Error(chrome.runtime.lastError.message)):a.success===!1?i(new Error(a.error||"Unknown error from OpenAI API")):s(a.data)})})}else throw new Error("Provider ".concat(r," not yet implemented"))}catch(r){throw console.error("AISettingsManager: Error calling AI API with stop:",r),r}}async loadAvailableModels(){try{let e=this.getProvider();if(e==="ollama"){let t=await chrome.runtime.sendMessage({action:"ollamaRequest",method:"GET",url:"/api/tags"});if(t&&t.success)return t.models.map(r=>r.name);throw new Error((t==null?void 0:t.error)||"Failed to load Ollama models")}else throw new Error("Provider ".concat(e," not yet implemented"))}catch(e){throw console.error("AISettingsManager: Error loading models:",e),e}}estimateTokens(e){if(!e)return 0;let t=e.length;return Math.ceil(t/4)}estimateTokensFromMessages(e){if(!e||!Array.isArray(e))return 0;let t=0;for(let r of e)r.content&&(t+=this.estimateTokens(r.content)),t+=4;return t}getTokenAnalysis(e){let t={inputTokens:0,estimatedOutputTokens:0,maxTokens:e.max_tokens||1e3,provider:this.getProvider(),model:this.getModel()};return e.prompt?t.inputTokens=this.estimateTokens(e.prompt):e.messages&&(t.inputTokens=this.estimateTokensFromMessages(e.messages)),t.estimatedOutputTokens=Math.min(t.maxTokens,100),t}clear(){this.currentSettings=null,this.settingsLoadPromise=null}},J=q;var R=class{constructor(e){this.aiSettingsManager=e,this.classificationCache=new Map}async classifyQuestion(e){let t=e.toLowerCase().trim();if(this.classificationCache.has(t))return console.log("AIQuestionClassifier: Using cached classification"),this.classificationCache.get(t);try{let r=this.buildClassificationPrompt(e);console.log("AIQuestionClassifier: Classifying question with AI");let n=await this.aiSettingsManager.callAI({prompt:r,max_tokens:200,temperature:.1,stream:!1}),o=this.parseClassificationResponse(n);return o=this.validateClassification(o,e),this.classificationCache.set(t,o),console.log("AIQuestionClassifier: Classification result:",o),o}catch(r){return console.error("AIQuestionClassifier: Error classifying question:",r),this.getFallbackClassification(e)}}buildClassificationPrompt(e){return'You are an expert at analyzing job application questions. Classify the following question and extract relevant keywords.\n\nQUESTION: "'.concat(e,'"\n\nAnalyze and return ONLY a JSON object with these fields:\n{\n  "question_type": "one of: language_proficiency|skill_level|years_experience|education|personal|salary|availability|notice_period|visa_status|general",\n  "keywords": ["array", "of", "relevant", "keywords"],\n  "confidence": 0.95,\n  "language": "en|de|fr|es",\n  "expected_format": "text|number|selection|boolean"\n}\n\nCLASSIFICATION RULES:\n- language_proficiency: Questions about language skills (German, English, etc.)\n- skill_level: Questions about proficiency in technologies/tools\n- years_experience: Questions asking for number of years of experience\n- education: Questions about degrees, universities, graduation\n- personal: Questions about name, contact, location, citizenship\n- salary: Questions about salary expectations or current salary\n- availability: Questions about start date, availability\n- notice_period: Questions about notice period or current employment\n- visa_status: Questions about visa, work permit, citizenship\n- general: Any other questions\n\nKEYWORD EXTRACTION:\n- Extract specific technologies, languages, skills mentioned\n- Normalize to common terms (e.g., "JS" \u2192 "JavaScript", "Deutsch" \u2192 "German")\n- Include variations and synonyms\n\nEXAMPLES:\nQ: "Wie gut beherrschen Sie Deutsch?" \u2192 {"question_type":"language_proficiency","keywords":["German"],"confidence":0.95,"language":"de","expected_format":"selection"}\nQ: "How many years of experience do you have with Python?" \u2192 {"question_type":"years_experience","keywords":["Python"],"confidence":0.9,"language":"en","expected_format":"number"}\nQ: "What is your proficiency level in SAP?" \u2192 {"question_type":"skill_level","keywords":["SAP"],"confidence":0.9,"language":"en","expected_format":"selection"}\n\nReturn ONLY the JSON object:')}parseClassificationResponse(e){var t,r,n;try{let o="";if(e!=null&&e.response)o=e.response.trim();else if((n=(r=(t=e==null?void 0:e.choices)==null?void 0:t[0])==null?void 0:r.message)!=null&&n.content)o=e.choices[0].message.content.trim();else throw new Error("Unexpected AI response format");let s=o.match(/\{[\s\S]*\}/);if(s)return JSON.parse(s[0]);throw new Error("No JSON found in response")}catch(o){throw console.error("AIQuestionClassifier: Error parsing classification response:",o),o}}validateClassification(e,t){return{question_type:["language_proficiency","skill_level","years_experience","education","personal","salary","availability","notice_period","visa_status","general"].includes(e.question_type)?e.question_type:"general",keywords:Array.isArray(e.keywords)?e.keywords:[],confidence:typeof e.confidence=="number"?e.confidence:.5,language:e.language||"en",expected_format:e.expected_format||"text"}}getFallbackClassification(e){let t=e.toLowerCase();return t.includes("deutsch")||t.includes("german")||t.includes("english")||t.includes("sprache")||t.includes("language")?{question_type:"language_proficiency",keywords:this.extractLanguageKeywords(t),confidence:.7,language:t.includes("deutsch")?"de":"en",expected_format:"selection"}:t.includes("jahr")||t.includes("year")||t.includes("erfahrung")||t.includes("experience")?{question_type:"years_experience",keywords:[],confidence:.6,language:t.includes("jahr")?"de":"en",expected_format:"number"}:{question_type:"general",keywords:[],confidence:.3,language:"en",expected_format:"text"}}extractLanguageKeywords(e){let t={deutsch:"German",german:"German",english:"English",englisch:"English",french:"French",franz\u00F6sisch:"French",spanish:"Spanish",spanisch:"Spanish",arabic:"Arabic",arabisch:"Arabic"},r=[];for(let[n,o]of Object.entries(t))e.includes(n)&&r.push(o);return r}clearCache(){this.classificationCache.clear(),console.log("AIQuestionClassifier: Cache cleared")}getCacheStats(){return{size:this.classificationCache.size,keys:Array.from(this.classificationCache.keys())}}},B=R;var P=class{constructor(){this.dataCache=new Map}async getRelevantData(e,t){if(!e||!t)return console.log("AISmartDataRetriever: Missing classification or resumeId"),null;let r="".concat(t,"_").concat(e.question_type,"_").concat(e.keywords.join(","));if(this.dataCache.has(r))return console.log("AISmartDataRetriever: Using cached data"),this.dataCache.get(r);try{console.log("AISmartDataRetriever: Retrieving data for type: ".concat(e.question_type,", keywords: ").concat(e.keywords.join(", ")));let n=null;switch(console.log('AISmartDataRetriever: Switch statement with question_type: "'.concat(e.question_type,'"')),e.question_type){case"language_proficiency":console.log("AISmartDataRetriever: Matched language_proficiency case"),n=await this.getLanguageData(t,e.keywords),console.log("AISmartDataRetriever: getLanguageData returned:",n?Object.keys(n):"null");break;case"skill_level":case"years_experience":n=await this.getSkillExperienceData(t,e.keywords);break;case"education":n=await this.getEducationData(t,e.keywords);break;case"personal":case"visa_status":n=await this.getPersonalData(t);break;case"salary":case"availability":case"notice_period":n=await this.getEmploymentData(t);break;default:console.log('AISmartDataRetriever: Hit default case for question_type: "'.concat(e.question_type,'"')),n=await this.getGeneralData(t,e.keywords)}return n&&this.dataCache.set(r,n),console.log("AISmartDataRetriever: Retrieved data:",n?Object.keys(n):"null"),n}catch(n){return console.error("AISmartDataRetriever: Error retrieving relevant data:",n),null}}async getLanguageData(e,t){try{console.log("AISmartDataRetriever: getLanguageData called with keywords:",t);let r=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/resumes/".concat(e,"/relevant-data?questionType=language_proficiency")});if(console.log("AISmartDataRetriever: API response:",r),r&&r.success&&r.relevantData){let n=r.relevantData;if(console.log("AISmartDataRetriever: languageData received:",n),t.length>0&&n.languages){let o=n.languages.filter(s=>{var c;let i=((c=s.language)==null?void 0:c.toLowerCase())||"";return t.some(a=>i.includes(a.toLowerCase())||a.toLowerCase().includes(i))});if(o.length>0)return{languages:o}}return n}return null}catch(r){return console.error("AISmartDataRetriever: Error getting language data:",r),null}}async getSkillExperienceData(e,t){try{let r=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/resumes/".concat(e,"/relevant-data?questionType=skills")});if(r&&r.success&&r.relevantData){let n=r.relevantData,o={};if(t.length>0&&n.skills){let s=n.skills.filter(i=>{var g,m;let c=((g=i.name)==null?void 0:g.toLowerCase())||"",a=((m=i.category)==null?void 0:m.toLowerCase())||"";return t.some(h=>c.includes(h.toLowerCase())||a.includes(h.toLowerCase())||h.toLowerCase().includes(c))});s.length>0&&(o.skills=s)}if(t.length>0&&n.experiences){let s=n.experiences.filter(i=>{let c=JSON.stringify(i).toLowerCase();return t.some(a=>c.includes(a.toLowerCase()))});s.length>0&&(o.experiences=s.map(i=>{var c;return{company:i.company,position:i.position,employment_period:i.employment_period,skills_acquired:i.skills_acquired||[],key_responsibilities:((c=i.key_responsibilities)==null?void 0:c.filter(a=>{var m;let g=((m=a.description)==null?void 0:m.toLowerCase())||"";return t.some(h=>g.includes(h.toLowerCase()))}))||[]}}))}return n.personal_info&&(o.personal_info={years_of_experience:n.personal_info.years_of_experience}),Object.keys(o).length>0?o:n}return null}catch(r){return console.error("AISmartDataRetriever: Error getting skill/experience data:",r),null}}async getEducationData(e,t){try{let r=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/resumes/".concat(e,"/relevant-data?questionType=education")});return r&&r.success&&r.relevantData?r.relevantData:null}catch(r){return console.error("AISmartDataRetriever: Error getting education data:",r),null}}async getPersonalData(e){try{let t=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/resumes/".concat(e,"/relevant-data?questionType=personal")});return t&&t.success&&t.relevantData?t.relevantData:null}catch(t){return console.error("AISmartDataRetriever: Error getting personal data:",t),null}}async getEmploymentData(e){try{let t=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/resumes/".concat(e,"/relevant-data?questionType=personal")});if(t&&t.success&&t.relevantData){let r=t.relevantData.personal_info||{};return{personal_info:{salary:r.salary,location:r.location,visa_required:r.visa_required,years_of_experience:r.years_of_experience}}}return null}catch(t){return console.error("AISmartDataRetriever: Error getting employment data:",t),null}}async getGeneralData(e,t){var r,n,o,s,i;try{let c=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/resumes/".concat(e,"/relevant-data?questionType=general")});if(c&&c.success&&c.relevantData){let a=c.relevantData;return{personal_info:{name:(r=a.personal_info)==null?void 0:r.name,years_of_experience:(n=a.personal_info)==null?void 0:n.years_of_experience,location:(o=a.personal_info)==null?void 0:o.location},summary:a.summary,skills:((s=a.skills)==null?void 0:s.slice(0,5))||[],experiences:((i=a.experiences)==null?void 0:i.slice(0,2))||[]}}return null}catch(c){return console.error("AISmartDataRetriever: Error getting general data:",c),null}}generateFallbackResponse(e,t=null){if(!t||!Array.isArray(t)||t.length===0)return null;switch(console.log("AISmartDataRetriever: Generating fallback response for:",e.question_type),e.question_type){case"language_proficiency":if(t.includes("Gut"))return"Gut";if(t.includes("Verhandlungssicher"))return"Verhandlungssicher";if(t.includes("Good"))return"Good";if(t.includes("Intermediate"))return"Intermediate";break;case"years_experience":return"5";case"skill_level":if(t.includes("Intermediate"))return"Intermediate";if(t.includes("Good"))return"Good";if(t.includes("Mittel"))return"Mittel";break;case"visa_status":if(t.includes("No"))return"No";if(t.includes("Nein"))return"Nein";break}return t.length>1?t[1]:t[0]}clearCache(){this.dataCache.clear(),console.log("AISmartDataRetriever: Cache cleared")}getCacheStats(){return{size:this.dataCache.size,keys:Array.from(this.dataCache.keys())}}},G=P;var D=class{constructor(e=null){this.userId=e,this.user_data=null,this.formatted_text=null,this.aiSettingsManager=new J,this.settingsLoadPromise=null,this.questionClassifier=new B(this.aiSettingsManager),this.smartDataRetriever=new G,e&&(this.settingsLoadPromise=this.aiSettingsManager.loadAISettings(e))}async setUserId(e){this.userId=e,e&&(this.settingsLoadPromise=this.aiSettingsManager.loadAISettings(e),await this.settingsLoadPromise)}async ensureSettingsLoaded(){this.settingsLoadPromise&&(await this.settingsLoadPromise,this.settingsLoadPromise=null)}setModel(e){if(e&&typeof e=="string"){let t=this.aiSettingsManager.getCurrentSettings(),r=k(A({},t),{model:e});this.aiSettingsManager.setSettings(r),console.log("AIQuestionAnswerer: Model overridden to: ".concat(e))}}async setUserContext(e,t=null){try{if(typeof e=="object"&&e!==null)this.user_data=e,this.formatted_text=t||this.formatUserDataAsText(),console.log("User context set with structured data");else if(typeof e=="string")this.user_data=null,this.formatted_text=e,console.log("User context set with formatted text only");else throw new Error("Invalid user data format");return console.log("User context set successfully"),{success:!0}}catch(r){return console.error("Error in setUserContext:",r),{success:!1,error:r.message}}}async answerQuestion(e,t=null,r=null,n=null){var o,s,i;try{await this.ensureSettingsLoaded(),console.log("AIQuestionAnswerer: Processing question: ".concat(e));let c=null,a=null;try{c=await this.questionClassifier.classifyQuestion(e),console.log("AIQuestionAnswerer: Question classified as:",c)}catch(p){console.error("AIQuestionAnswerer: Classification failed, using fallback:",p),c={question_type:"general",keywords:[],confidence:.3}}if(n&&c)try{a=await this.smartDataRetriever.getRelevantData(c,n),console.log("AIQuestionAnswerer: Retrieved relevant data:",a?Object.keys(a):"null")}catch(p){console.error("AIQuestionAnswerer: Smart data retrieval failed:",p)}let g=this.getDirectAnswer(e,a);if(g)return console.log("AIQuestionAnswerer: Found direct answer:",g),t&&Array.isArray(t)&&t.length>0?{success:!0,answer:this.matchToOption(g,t)}:{success:!0,answer:g};if(!a||Object.keys(a).length===0){console.log("AIQuestionAnswerer: No relevant data found, trying intelligent fallback");let p=this.smartDataRetriever.generateFallbackResponse(c,t);if(p)return console.log("AIQuestionAnswerer: Using intelligent fallback answer:",p),{success:!0,answer:p}}if(r){let p=!1;if(typeof r=="function"?p=await r():r&&r.value!==void 0?p=r.value:p=!!r,p)return console.log("AIQuestionAnswerer: Stop requested before AI processing"),{success:!1,stopped:!0}}let m=this.buildSmartPrompt(e,t,a,c);console.log("=== SMART PROMPT BEING SENT ==="),console.log(m),console.log("=== END SMART PROMPT ===");let h=this.aiSettingsManager.getTokenAnalysis({prompt:m});console.log("Token Analysis:",h);let l=await this.aiSettingsManager.callAIWithStop({prompt:m,stream:!1},r);if(l&&l.stopped)return{success:!1,stopped:!0};let d="";if(l!=null&&l.response?d=l.response.trim():(i=(s=(o=l==null?void 0:l.choices)==null?void 0:o[0])==null?void 0:s.message)!=null&&i.content?d=l.choices[0].message.content.trim():(console.warn("AIQuestionAnswerer: Unexpected AI response format:",l),d=""),console.log("AIQuestionAnswerer: Raw AI response:",d),c.question_type==="years_experience"&&/^\d+$/.test(d)){let p=parseInt(d);p<5&&(d="5",console.log("AIQuestionAnswerer: Enforced minimum 5 years for experience question, was: ".concat(p)))}return t&&Array.isArray(t)&&t.length>0&&(d=this.matchToOption(d,t)),{success:!0,answer:d||"Information not available"}}catch(c){console.error("AIQuestionAnswerer: Error in answerQuestion:",c);let a="Information not available";return classification&&t&&(a=this.smartDataRetriever.generateFallbackResponse(classification,t)),!a&&t&&Array.isArray(t)&&t.length>0&&(a=t.length>1?t[1]:t[0]),console.log("AIQuestionAnswerer: Using fallback answer:",a),{success:!1,answer:a,error:c.message}}}detectQuestionType(e){let t=e.toLowerCase();return t.includes("level of")||t.includes("proficiency in")||t.includes("fluent in")?"language_level":t.includes("skill")||t.includes("experience")||t.includes("years")||t.includes("technology")||t.includes("programming")||t.includes("language")||t.includes("c++")||t.includes("python")||t.includes("java")?"skills":t.includes("education")||t.includes("degree")||t.includes("study")||t.includes("university")||t.includes("college")?"education":t.includes("language")||t.includes("speak")||t.includes("fluent")?"languages":t.includes("certification")||t.includes("certified")?"certifications":t.includes("name")||t.includes("email")||t.includes("phone")||t.includes("contact")||t.includes("location")?"personal":t.includes("visa")||t.includes("sponsorship")||t.includes("work permit")?"visa":t.includes("salary")||t.includes("compensation")||t.includes("pay")||t.includes("expectation")?"salary":t.includes("notice")||t.includes("period")||t.includes("availability")||t.includes("start date")?"notice":"general"}getDirectAnswer(e,t=null){var o;if(t){let s=e.toLowerCase();if(t.languages&&(s.includes("level of")||s.includes("proficiency"))){for(let i of["german","english","french","arabic","spanish"])if(s.includes(i)){let c=t.languages.find(a=>{var g;return((g=a.language)==null?void 0:g.toLowerCase())===i});if(c)return c.proficiency||"Unknown"}}if(t.personal_info){if(s.includes("email")||s.includes("e-mail"))return t.personal_info.email||null;if(s.includes("phone")||s.includes("telephone")||s.includes("mobile"))return t.personal_info.phone||null;if(s.includes("name"))return t.personal_info.name||null;if(s.includes("location")||s.includes("address"))return t.personal_info.location||null;if(s.includes("citizenship"))return t.personal_info.citizenship||null;if(s.includes("visa")||s.includes("sponsorship"))return t.personal_info.visa_required||null;if(s.includes("salary")||s.includes("compensation")||s.includes("pay"))return t.personal_info.salary||null}}if(!((o=this.user_data)!=null&&o.personal_information))return null;let r=this.user_data.personal_information,n=e.toLowerCase();return n.includes("email")||n.includes("e-mail")?r.email||null:n.includes("phone")||n.includes("mobile")||n.includes("telefon")?(r.phone_prefix?"".concat(r.phone_prefix).concat(r.phone):r.phone)||null:n.includes("first name")||n.includes("vorname")?r.name||null:n.includes("last name")||n.includes("surname")||n.includes("nachname")?r.surname||null:n.includes("country")&&!n.includes("code")?r.country||null:this.isNoticePeriodOrStartDateQuestion(e)?n.includes("notice period")||n.includes("k\xFCndigungsfrist")||n.includes("kuendigungsfrist")?n.includes("monate")||n.includes("deutsch")?"2 Monate":"2 months":this.calculateDateTwoMonthsFromNow():null}buildSmartPrompt(e,t,r,n){let o;r&&Object.keys(r).length>0?(o=this.formatRelevantDataAsText(r),console.log("AIQuestionAnswerer: Using focused relevant data for prompt")):(o="No specific relevant data available in resume.",console.log("AIQuestionAnswerer: No relevant data - using fallback prompt"));let s='You are a job applicant filling out a job application form. Answer questions based on your resume information in first person (as "I" not "he/she").\n\nRELEVANT RESUME DATA:\n'.concat(o,"\n\nQUESTION: ").concat(e,'\n\nIMPORTANT GENERAL RULES:\n- Answer as the job applicant (use "I", "my", "me" - NOT "he", "she", "Sami", or third person)\n- Be concise and direct\n- Only provide the specific information requested\n- Do not mention your name unless explicitly asked');switch(n.question_type){case"years_experience":s+='\n\nIMPORTANT RULES FOR YEARS OF EXPERIENCE:\n- If asked for years of experience, provide ONLY a number between 5-99\n- MINIMUM is always 5 years - never return 0, 1, 2, 3, or 4\n- Do NOT include words like "years", "Jahre", or descriptions\n- Calculate based on work experience and skill level\n- If no specific experience found, default to 5 years minimum\n- Example: "5" not "5 years" or "5 Jahre"';break;case"language_proficiency":s+="\n\nIMPORTANT RULES FOR LANGUAGE PROFICIENCY:\n- Choose the most accurate proficiency level based on resume data\n- If no specific language data available, choose a realistic favorable level\n- Common levels: Beginner, Intermediate, Advanced, Professional, Native";break;case"skill_level":s+="\n\nIMPORTANT RULES FOR SKILL LEVELS:\n- Base skill level on experience with the technology/tool\n- If no specific experience found, choose a moderate favorable level\n- Consider years of experience and project involvement";break}return t&&Array.isArray(t)&&t.length>0&&(s+="\n\nAvailable Options: ".concat(JSON.stringify(t),"\n\nIMPORTANT: You MUST choose EXACTLY ONE option from the list above. Your answer should match one of the options EXACTLY as written.")),s+="\n\nANSWER:",s}buildEnhancedPrompt(e,t,r=null){let n;r&&Object.keys(r).length>0?(n=this.formatRelevantDataAsText(r),console.log("Using relevant data sections for prompt")):(n=this.formatUserDataAsText(),console.log("Using full resume for prompt (no relevant data available)"));let o='You are a job applicant filling out a job application form. Answer questions based on your resume information in first person (as "I" not "he/she").\n\nMY RESUME:\n'.concat(n,"\n\nQUESTION: ").concat(e,'\n\nIMPORTANT GENERAL RULES:\n- Answer as the job applicant (use "I", "my", "me" - NOT "he", "she", "Sami", or third person)\n- Be concise and direct\n- Only provide the specific information requested\n- Do not mention your name unless explicitly asked');if(this.isDecimalNumberQuestion(e)&&(o+='\n\nIMPORTANT RULES FOR DECIMAL NUMBERS:\n- If asked for a decimal number, provide ONLY a decimal number (e.g., "3.5", "2.0", "1.2")\n- Do NOT include explanations, descriptions, or additional text\n- The number should be greater than 0.0 as requested\n- Example: "3.0" not "3.0 years" or explanations'),this.isYearsOfExperienceQuestion(e)&&(o+='\n\nIMPORTANT RULES FOR YEARS OF EXPERIENCE:\n- If asked for years of experience, provide ONLY a number between 5-99\n- MINIMUM is always 5 years - never return 0, 1, 2, 3, or 4\n- Do NOT include words like "years", "Jahre", or descriptions\n- For skill levels: Beginner=5, Intermediate=7, Advanced=10+ years\n- Calculate based on work experience and skill level\n- If no specific experience found, default to 5 years minimum\n- If unclear or no data, always answer at least 5 years to maximize job prospects\n- Example: "5" not "5 years" or "5 Jahre"\n- Better to overestimate than underestimate for better interview chances'),this.isDegreeQuestion(e)&&(o+='\n\nIMPORTANT RULES FOR DEGREE QUESTIONS:\n- Check education section carefully for exact degree matches\n- "Bachelor" = "Bachelor of Engineering" or "Bachelor of Science"\n- "Master" = "Master of Engineering" or "Master of Science"\n- Answer "Ja" for German forms, "Yes" for English forms\n- If degree is found, answer positively\n- Look for exact degree names in education section'),this.isSkillLevelQuestion(e)&&(o+="\n\nIMPORTANT RULES FOR SKILL LEVEL QUESTIONS:\n- Check the skills section for exact skill matches\n- Look for the skill name and its level (Beginner/Intermediate/Advanced)\n- Be precise about the level mentioned in the resume\n- Do not guess or estimate levels"),this.isNoticePeriodOrStartDateQuestion(e)){let s=this.calculateDateTwoMonthsFromNow();o+='\n\nIMPORTANT RULES FOR NOTICE PERIOD AND START DATE:\n- For notice period questions, answer "2 months" or "2 Monate"\n- For starting date questions, provide the exact date: '.concat(s,'\n- Use the format DD.MM.YYYY for German forms (e.g., "15.03.2024")\n- Use the format MM/DD/YYYY for English forms (e.g., "03/15/2024")\n- Current calculated start date (2 months from today): ').concat(s,"\n- Be consistent with the date format expected by the form")}if(t&&Array.isArray(t)&&t.length>0){let s=t.map(i=>'"'.concat(i,'"')).join(", ");o+="\n\nAvailable Options: [".concat(s,"]\n\nIMPORTANT: You MUST choose EXACTLY ONE option from the list above. Your answer should match one of the options EXACTLY as written.")}return o+="\n\nANSWER:",o}isDecimalNumberQuestion(e){let t=e.toLowerCase();return t.includes("decimal")||t.includes("dezimal")||t.includes("gr\xF6\xDFer als 0.0")||t.includes("greater than 0.0")||t.includes("decimal zahl")||t.includes("decimal number")}isYearsOfExperienceQuestion(e){let t=e.toLowerCase();return t.includes("jahre")||t.includes("years")||t.includes("experience")||t.includes("erfahrung")||t.includes("how many")||t.includes("wie viele")}isDegreeQuestion(e){let t=e.toLowerCase();return t.includes("bachelor")||t.includes("master")||t.includes("degree")||t.includes("abschluss")||t.includes("bildung")||t.includes("education")}isSkillLevelQuestion(e){let t=e.toLowerCase();return t.includes("level")||t.includes("niveau")||t.includes("skill")||t.includes("f\xE4higkeit")||t.includes("experience with")||t.includes("erfahrung mit")}isNoticePeriodOrStartDateQuestion(e){let t=e.toLowerCase();return t.includes("notice period")||t.includes("starting date")||t.includes("start date")||t.includes("startdatum")||t.includes("beginn")||t.includes("beginnen")||t.includes("k\xFCndigungsfrist")||t.includes("kuendigungsfrist")||t.includes("verf\xFCgbar")||t.includes("verfuegbar")||t.includes("available")||t.includes("wann k\xF6nnen sie")||t.includes("when can you")||t.includes("earliest start")||t.includes("fr\xFChester beginn")||t.includes("fruehester beginn")}calculateDateTwoMonthsFromNow(){let e=new Date;e.setMonth(e.getMonth()+2);let t=String(e.getDate()).padStart(2,"0"),r=String(e.getMonth()+1).padStart(2,"0"),n=e.getFullYear();return"".concat(t,".").concat(r,".").concat(n)}formatUserDataAsText(){return this.formatted_text?this.formatted_text:this.user_data?typeof this.user_data=="string"?this.user_data:this.formatObject(this.user_data,0):"No user data available."}formatRelevantDataAsText(e){let t="";for(let r in e)if(Object.prototype.hasOwnProperty.call(e,r)){let n=e[r];n&&Object.keys(n).length>0&&(t+="\n".concat(r.toUpperCase().replace(/_/g," "),":\n"),t+=this.formatObject(n,1))}return t||"No relevant data available."}formatObject(e,t=0){let r="  ".repeat(t),n="";if(typeof e=="object"&&e!==null)if(Array.isArray(e))for(let o of e)typeof o=="object"&&o!==null?n+="".concat(r,"- ").concat(this.formatObject(o,t+1)):n+="".concat(r,"- ").concat(o,"\n");else for(let[o,s]of Object.entries(e)){let i=o.toUpperCase().replace(/_/g," ");n+="".concat(r).concat(i,":\n"),typeof s=="object"&&s!==null?n+=this.formatObject(s,t+1):n+="".concat(r,"  ").concat(s,"\n")}else n+="".concat(r).concat(e,"\n");return n}matchToOption(e,t){if(!e||!t||t.length===0)return(t==null?void 0:t.length)>0?t[0]:"Not available";if(this.isDecimalNumberQuestion(e)||/^\d+\.\d+$/.test(e.trim())){let r=e.match(/\d+\.\d+/);if(r){let n=r[0];for(let o of t)if(o.includes(n))return o;return n}}if(this.isYearsOfExperienceQuestion(e)||/^\d+$/.test(e.trim())){let r=e.match(/\d+/);if(r){let n=parseInt(r[0]);this.isYearsOfExperienceQuestion(e)&&n<5&&(n=5);let o=n.toString();for(let s of t)if(s.includes(o))return s;return o}}if(this.isNoticePeriodOrStartDateQuestion(e)){if(e.toLowerCase().includes("2 months")||e.toLowerCase().includes("2 monate")){for(let n of t)if(n.toLowerCase().includes("2 months")||n.toLowerCase().includes("2 monate")||n.toLowerCase().includes("2 month"))return n;return e}let r=e.match(/\d{1,2}[.\/-]\d{1,2}[.\/-]\d{4}/);if(r){let n=r[0];for(let o of t)if(o.includes(n))return o;return n}}for(let r of t)if(r.toLowerCase()===e.toLowerCase())return r;for(let r of t)if(r.toLowerCase().includes(e.toLowerCase())||e.toLowerCase().includes(r.toLowerCase()))return r;if(e.toLowerCase().includes("germany")||e.toLowerCase().includes("deutsch")){for(let r of t)if(r.toLowerCase().includes("deutsch")||r.toLowerCase().includes("germany")||r.includes("+49"))return r}return t.length>1?t[1]:t[0]}async testConnection(){try{return await this.ensureSettingsLoaded(),(await this.aiSettingsManager.testConnection()).success}catch(e){return console.error("Error testing AI connection:",e),!1}}getAISettings(){return this.aiSettingsManager.getCurrentSettings()}clear(){this.user_data=null,this.formatted_text=null,this.aiSettingsManager.clear(),this.settingsLoadPromise=null}},Y=D;var M=class extends y{constructor(){super(),this.currentApplication=null,this.questionsAnswers=[]}debugLog(e,...t){console.log("[ApplicationTracker] ".concat(e),...t)}errorLog(e,t){console.error("[ApplicationTracker] ".concat(e,":"),t)}async startApplication(e,t,r,n){try{this.debugLog("Starting application tracking...");let o=await this.createOrFindCompany(e),s=await this.createOrFindJob(e,o.id);return this.currentApplication=await this.createApplication({user_id:t.id,job_id:s.id,ai_settings_id:r.id,resume_id:n,status:"applied",notes:"Applied via EasyJob extension"}),this.questionsAnswers=[],this.debugLog("Application tracking started: ".concat(this.currentApplication.id)),this.currentApplication}catch(o){throw this.errorLog("Error starting application tracking:",o),o}}async createOrFindCompany(e){try{if(this.debugLog("Creating/finding company for job info:",e),this.debugLog("Job info type:",typeof e),this.debugLog("Job info keys:",e?Object.keys(e):"null"),!e||!e.company)throw this.debugLog("Job info or company name is missing:",{jobInfo:e,company:e==null?void 0:e.company}),new Error("Company name is required");let t=await this.findCompanyByName(e.company);if(t)return this.debugLog("Found existing company: ".concat(t.name)),t;let r={name:e.company,industry:null,size:null,location:e.location,website:null,linkedin_url:null};this.debugLog("Creating new company with data:",r);let n=await this.createCompany(r);if(!n)throw new Error("Failed to create company - API request returned null");return this.debugLog("Created new company: ".concat(n.name)),n}catch(t){throw this.errorLog("Error creating/finding company:",t),t}}async createOrFindJob(e,t){var r;try{if(!e.title)throw new Error("Job title is required");if(e.jobId){let o=await this.findJobByPlatformId("linkedin",e.jobId);if(o)return this.debugLog("Found existing job: ".concat(o.title)),o}let n=await this.createJob({company_id:t,title:e.title,location:e.location,is_remote:((r=e.remoteType)==null?void 0:r.toLowerCase().includes("remote"))||!1,job_type:this.normalizeJobType(e.jobType),platform:"linkedin",platform_job_id:e.jobId,job_url:window.location.href,job_description:e.description,applicant_count:this.parseApplicantCount(e.applicantCount),posted_date:this.parsePostedDate(e.postedDate),status:"active"});if(!n)throw new Error("Failed to create job - API request returned null");return this.debugLog("Created new job: ".concat(n.title)),n}catch(n){throw this.errorLog("Error creating/finding job:",n),n}}async createApplication(e){try{this.debugLog("Creating application with data:",e);let t=await chrome.runtime.sendMessage({action:"apiRequest",method:"POST",url:"/applications",data:e});if(this.debugLog("Application creation response:",t),t&&t.success)return this.debugLog("Application created: ".concat(t.application.id)),t.application;throw this.debugLog("Failed to create application: ".concat(t==null?void 0:t.error)),new Error((t==null?void 0:t.error)||"Failed to create application")}catch(t){throw this.errorLog("Error creating application:",t),t}}async addQuestionAnswer(e,t,r,n,o=!1){try{if(!this.currentApplication){this.debugLog("No current application, skipping question/answer save");return}if(!e||!t){this.debugLog("Invalid question or answer, skipping save");return}let s={application_id:this.currentApplication.id,question:e,answer:t,question_type:r||"general",ai_model_used:n||"unknown",confidence_score:.95,is_skipped:o},i=await chrome.runtime.sendMessage({action:"apiRequest",method:"POST",url:"/questions-answers",data:s});i&&i.success?(this.questionsAnswers.push(i.question_answer),this.debugLog("Question/answer saved: ".concat(i.question_answer.id))):this.debugLog("Failed to save question/answer: ".concat(i==null?void 0:i.error))}catch(s){this.errorLog("Error adding question/answer:",s)}}async updateApplicationStatus(e,t=null){try{if(!this.currentApplication){this.debugLog("No current application to update");return}let r=await chrome.runtime.sendMessage({action:"apiRequest",method:"PUT",url:"/applications/".concat(this.currentApplication.id,"/status"),data:{status:e,notes:t}});r&&r.success?(this.currentApplication=r.application,this.debugLog("Application status updated to: ".concat(e))):this.debugLog("Failed to update application status: ".concat(r==null?void 0:r.error))}catch(r){this.errorLog("Error updating application status:",r)}}async completeApplication(e=!0){try{if(!this.currentApplication){this.debugLog("No current application to complete");return}let t=e?"applied":"failed",r=e?"Application submitted successfully":"Application failed or was cancelled";await this.updateApplicationStatus(t,r),this.debugLog("Application tracking completed: ".concat(t)),this.currentApplication=null,this.questionsAnswers=[]}catch(t){this.errorLog("Error completing application:",t)}}async findCompanyByName(e){try{this.debugLog("Searching for company by name:",e);let t=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/companies/name/".concat(encodeURIComponent(e))});return this.debugLog("Company search response:",t),t!=null&&t.success?t.company:null}catch(t){return this.debugLog("Error finding company:",t),null}}async createCompany(e){try{this.debugLog("Sending API request to create company:",e);let t=await chrome.runtime.sendMessage({action:"apiRequest",method:"POST",url:"/companies",data:e});if(this.debugLog("Company creation API response:",t),!t)throw new Error("No response received from API");if(!t.success)throw new Error("API request failed: ".concat(t.error||"Unknown error"));if(!t.company)throw new Error("API returned success but no company data");return t.company}catch(t){throw this.errorLog("Error creating company:",t),t}}async findJobByPlatformId(e,t){try{this.debugLog("Searching for job by platform ID:",{platform:e,platformJobId:t});let r=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/jobs/platform/".concat(e,"/").concat(t)});return this.debugLog("Job search response:",r),r!=null&&r.success?r.job:null}catch(r){return this.debugLog("Error finding job:",r),null}}async createJob(e){try{this.debugLog("Sending API request to create job:",e);let t=await chrome.runtime.sendMessage({action:"apiRequest",method:"POST",url:"/jobs",data:e});if(this.debugLog("Job creation API response:",t),!t)throw new Error("No response received from API");if(!t.success)throw new Error("API request failed: ".concat(t.error||"Unknown error"));if(!t.job)throw new Error("API returned success but no job data");return t.job}catch(t){throw this.errorLog("Error creating job:",t),t}}normalizeJobType(e){if(!e)return"full-time";let t=e.toLowerCase();return t.includes("full")?"full-time":t.includes("part")?"part-time":t.includes("contract")?"contract":t.includes("intern")?"internship":"full-time"}parseApplicantCount(e){if(!e)return 0;let t=e.match(/(\d+)/);return t?parseInt(t[1]):0}parsePostedDate(e){if(!e)return new Date;let t=new Date;if(e.includes("today"))return t;if(e.includes("yesterday")){let n=new Date(t);return n.setDate(n.getDate()-1),n}let r=e.match(/(\d+)\s*days?\s*ago/);if(r){let n=parseInt(r[1]),o=new Date(t);return o.setDate(o.getDate()-n),o}return t}getCurrentApplicationData(){return{application:this.currentApplication,questionsAnswers:this.questionsAnswers}}},Z=new M,S=Z;var O=class extends y{static async closeForm(e=!1){var t,r;try{let n=document.querySelector('button[aria-label="Dismiss"]');if(n||(n=document.querySelector('button[aria-label="Close"]')||document.querySelector('button[aria-label="Cancel"]')||document.querySelector("button[data-test-modal-close-btn]")),n){if(n.click(),await this.wait(),e){let o=document.querySelector('button[data-control-name="save_application_btn"]');o&&(o.click(),this.debugLog("Closed form and saved application"))}else{let o=document.querySelector('button[data-control-name="discard_application_confirm_btn"]')||document.querySelector("button[data-test-dialog-secondary-btn]");o&&(o.click(),this.debugLog("Closed form and discarded application"))}await this.wait()}}catch(n){this.errorLog("Error closing form",n);try{let o=document.querySelectorAll("button");for(let s of o)(s.textContent.toLowerCase().includes("close")||s.textContent.toLowerCase().includes("cancel")||(t=s.getAttribute("aria-label"))!=null&&t.toLowerCase().includes("close")||(r=s.getAttribute("aria-label"))!=null&&r.toLowerCase().includes("dismiss"))&&(s.click(),await this.wait(500))}catch(o){this.errorLog("Failed final attempt to close form",o)}}}static async clickNextPage(){try{await this.wait();let e=document.querySelector('button[aria-label="Continue to next step"]');e&&(e.click(),this.debugLog("Clicked on next page button"))}catch(e){this.errorLog("Error clicking on next page button",e)}}static async clickPreviousPage(){try{await this.wait();let e=document.querySelector('button[aria-label="Back to previous step"]');e&&(e.click(),this.debugLog("Clicked on previous page button"))}catch(e){this.errorLog("Error clicking on previous page button",e)}}static async clickReviewApplication(){try{await this.wait();let e=document.querySelector('button[aria-label="Review your application"]');e&&(e.click(),this.debugLog("Clicked on review button"))}catch(e){this.errorLog("Error clicking on review button",e)}}static async clickSubmitApplication(){try{await this.wait();let e=document.querySelector('button[aria-label="Submit application"]');e&&(e.click(),this.debugLog("Clicked on submit button"))}catch(e){this.errorLog("Error clicking on submit button",e)}}static async clickDoneAfterSubmit(){try{let e=document.querySelector('button[aria-label="Done"]');e||(e=document.querySelector("button.artdeco-button span.artdeco-button__text"),this.debugLog("Found done button",e)),e?(e.click(),this.debugLog("Clicked on Done button")):this.debugLog("Done button not found")}catch(e){this.errorLog("Error clicking on Done button",e)}}static async clickDismissAfterSubmit(){try{let e=document.querySelector('button[aria-label="Dismiss"]');if(e||(e=document.querySelector("button[data-test-modal-close-btn]")),!e){let t=document.querySelectorAll("button.artdeco-button--circle.artdeco-modal__dismiss");for(let r of t)if(r.querySelector('svg use[href="#close-medium"]')){e=r;break}}e?(e.click(),this.debugLog("Clicked on Dismiss button")):this.debugLog("Dismiss button not found")}catch(e){this.errorLog("Error clicking on Dismiss button",e)}}static async findReviewButton(){try{return document.querySelector('button[aria-label="Review your application"]')}catch(e){return this.errorLog("Error finding review button",e),null}}static async findNextButton(){try{return document.querySelector('button[aria-label="Continue to next step"]')}catch(e){return this.errorLog("Error finding next button",e),null}}static async findSubmitButton(){try{return document.querySelector('button[aria-label="Submit application"]')}catch(e){return this.errorLog("Error finding submit button",e),null}}static async findDoneButton(){try{let e=document.querySelector('button[aria-label="Done"]');if(!e){let t=document.querySelectorAll("button.artdeco-button");for(let r of t){let n=r.querySelector("span.artdeco-button__text");if(n&&n.textContent.trim()==="Done"){e=r;break}}}return e}catch(e){return this.errorLog("Error finding done button",e),null}}static async processForm(e,t=null){try{this.debugLog("Starting form processing"),await this.startApplicationTracking(t),this.debugLog("startApplicationTracking completed");let r=setTimeout(async()=>{this.debugLog("Form processing timeout reached")},3*60*1e3),n=!1,o=!1;for(;!o;){if(typeof e=="function"?o=await e():e&&e.value!==void 0?o=e.value:o=!!e,o){this.debugLog("Stop requested during form processing");break}try{if(await this.findReviewButton()){this.debugLog("Found review button");let g=setTimeout(()=>{this.debugLog("Review processing timeout reached"),e.value=!0},1*60*1e3);if(document.querySelectorAll("div.fb-dash-form-element").length>0&&!n){this.debugLog("Found questions on current page, processing before review");let l=await this.processFormQuestions(e);if(l.stopped){this.debugLog("Form questions processing stopped by user");break}l.success||this.debugLog("Form questions processing failed"),n=!0,this.debugLog("Current page form questions processed, will not reprocess")}else n?this.debugLog("Skipping redundant form processing for current page"):this.debugLog("No form questions found on current page");if(await this.clickReviewApplication(),await this.wait(2e3),typeof e=="function"?o=await e():e&&e.value!==void 0?o=e.value:o=!!e,o){this.debugLog("Stop requested after clicking review");break}if(document.querySelectorAll("div.fb-dash-form-element").length>0){this.debugLog("Found questions on review page");let l=await this.processFormQuestions(e);if(l.stopped){this.debugLog("Review questions processing stopped by user");break}l.success||this.debugLog("Review questions processing failed")}else this.debugLog("No questions found on review page");await this.clickSubmitApplication(),await this.wait(2e3),await this.clickDismissAfterSubmit(),await S.completeApplication(!0),this.debugLog("Clicked submit button after review"),clearTimeout(g);break}if(document.querySelectorAll("div.fb-dash-form-element").length>0&&!n){this.debugLog("Found form questions, processing...");let g=await this.processFormQuestions(e);if(g.stopped){this.debugLog("Form questions processing stopped by user");break}g.success||this.debugLog("Form questions processing failed"),n=!0,this.debugLog("Form questions processed")}if(await this.findNextButton()){if(this.debugLog("Found next button, moving to next page"),await this.clickNextPage(),await this.wait(2e3),typeof e=="function"?o=await e():e&&e.value!==void 0?o=e.value:o=!!e,o){this.debugLog("Stop requested after navigation");break}n=!1;continue}if(await this.findSubmitButton()){if(this.debugLog("Found submit button, submitting application"),typeof e=="function"?o=await e():e&&e.value!==void 0?o=e.value:o=!!e,o){this.debugLog("Stop requested before final submit");break}await this.clickSubmitApplication(),await this.wait(2e3),await this.clickDismissAfterSubmit(),await S.completeApplication(!0);break}this.debugLog("No navigation buttons found, waiting..."),await this.wait(1e3)}catch(s){this.errorLog("Error in form processing loop",s),await this.wait(2e3)}}return clearTimeout(r),this.debugLog("Form processing completed"),!0}catch(r){return this.errorLog("Error processing form",r),!1}}static async startApplicationTracking(e=null){try{if(this.debugLog("Starting application tracking"),this.debugLog("Job info:",e),!e){this.debugLog("No job info provided, skipping application tracking");return}let t=await chrome.storage.local.get(["currentUser"]);if(!t.currentUser){this.debugLog("No current user found, skipping application tracking");return}let r=window.currentAiSettings;if(!r){this.debugLog("No AI settings found, skipping application tracking");return}let n=await chrome.storage.local.get(["currentResumeId"]);if(!n.currentResumeId){this.debugLog("No current resume ID found, skipping application tracking");return}await S.startApplication(e,t.currentUser,r,n.currentResumeId),this.debugLog("Application tracking started successfully")}catch(t){this.errorLog("Error starting application tracking:",t)}}static shouldSkipQuestion(e){let t=e.toLowerCase();return this.shouldSkipQuestionDirect(t)}static shouldSkipQuestionDirect(e){return!!(e.includes("email")||e.includes("e-mail")||e.includes("e-mail-adresse")||["phone","mobile","cell","telephone","handy","telefon","handynummer","handynumer","mobilnummer","handy","tel\xE9fono","m\xF3vil","celular","tel\xE9fono m\xF3vil","t\xE9l\xE9phone","portable","mobile","t\xE9l\xE9phone portable","telefono","cellulare","mobile","telefono cellulare"].some(s=>e.includes(s))||["country code","area code","phone prefix","calling code","prefix","landsvorwahl","vorwahl","l\xE4ndercode","vorwahl","c\xF3digo de pa\xEDs","c\xF3digo de \xE1rea","prefijo","c\xF3digo","indicatif pays","indicatif","pr\xE9fixe","indicatif t\xE9l\xE9phonique","prefisso","codice paese","prefisso telefonico"].some(s=>e.includes(s))||["contact information","contact details","contact","kontaktinformation","kontaktdaten","kontakt","informaci\xF3n de contacto","datos de contacto","contacto","coordonn\xE9es","informations de contact","contact","informazioni di contatto","dati di contatto","contatto"].some(s=>e.includes(s))||["first name","last name","full name","name","given name","family name","vorname","nachname","vollst\xE4ndiger name","name","familienname","nombre","apellido","nombre completo","primer nombre","segundo nombre","pr\xE9nom","nom","nom complet","nom de famille","nome","cognome","nome completo","nome di battesimo"].some(s=>e.includes(s)))}static async processFormQuestions(e=null){try{this.debugLog("Processing form questions");let t=document.querySelectorAll("div.fb-dash-form-element");this.debugLog("Found ".concat(t.length," form elements"));for(let r of t){if(e){let n=!1;if(typeof e=="function"?n=await e():e&&e.value!==void 0?n=e.value:n=!!e,n)return this.debugLog("Stop requested during form questions processing"),{stopped:!0}}try{let n=r.querySelector("legend span.fb-dash-form-element__label span")||r.querySelector("label");if(!n){this.debugLog("No label found for form element");continue}let o=n.textContent.trim();if(o=o.replace(/(.+?)\1/,"$1"),this.debugLog("Processing question: ".concat(o)),this.shouldSkipQuestion(o)){this.debugLog("Skipping prefilled question: ".concat(o));continue}let s=r.querySelector("input, textarea, select");if(!s){this.debugLog("No input field found for question");continue}let i=[];switch(s.tagName.toLowerCase()){case"input":s.type==="radio"&&r.querySelectorAll('input[type="radio"]').forEach(g=>{let m=r.querySelector('label[for="'.concat(g.id,'"]'));m&&i.push(m.textContent.trim())});break;case"select":i=Array.from(s.options).map(a=>a.text.trim());break}i.length>0&&this.debugLog('Available options for "'.concat(o,'":'));let c=await this.answerQuestion(o,i,s,r,e);if(c.stopped)return this.debugLog("Form questions processing stopped by user"),{stopped:!0};c.success||this.debugLog("Failed to answer question: ".concat(o))}catch(n){this.errorLog("Error processing form element: ".concat(n.message),n)}}return this.debugLog("Completed processing form questions"),{success:!0}}catch(t){return this.errorLog("Error in processFormQuestions",t),{success:!1}}}static async answerQuestion(e,t=[],r,n,o=null){var s;try{let i=null;window.currentAiSettings&&(i=window.currentAiSettings,this.debugLog("Using AI settings from current settings:",i));let c=null;try{let l=await chrome.storage.local.get(["currentUser"]);l.currentUser&&l.currentUser.id&&(c=l.currentUser.id,this.debugLog("Using user ID: ".concat(c)))}catch(l){this.errorLog("Error getting current user:",l)}let a=new Y(c);if(i){let l={ai_provider:i.provider,ai_model:i.model,apiKey:i.apiKey,is_default:!0};a.aiSettingsManager.setSettings(l),this.debugLog("Set AI settings directly: provider=".concat(l.ai_provider,", model=").concat(l.ai_model))}this.debugLog("Answering question: ".concat(e)),this.debugLog("Available options:",t);try{let l=await chrome.storage.local.get(["userResumeData","userResumeText","userResumeType"]);l&&(l.userResumeData||l.userResumeText)?(this.debugLog("Found user resume data in storage"),l.userResumeData?(await a.setUserContext(l.userResumeData,l.userResumeText),this.debugLog("Set structured user context in AI instance")):(await a.setUserContext(l.userResumeText),this.debugLog("Set text user context in AI instance"))):this.debugLog("No user resume found in storage")}catch(l){this.errorLog("Error loading user resume from storage:",l)}let g=null;try{this.debugLog("=== RESUME ID RETRIEVAL DEBUG ===");let l=await chrome.storage.local.get(["currentResumeId"]);if(this.debugLog("Resume result from storage:",l),l.currentResumeId)g=l.currentResumeId,this.debugLog("Using resume ID from storage: ".concat(g));else if(this.debugLog("No resume ID in storage, fetching from database..."),c){this.debugLog("Fetching default resume for user: ".concat(c));let d=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/users/".concat(c,"/resumes/default")});this.debugLog("Default resume API response:",d),this.debugLog("Response success:",d==null?void 0:d.success),this.debugLog("Response resume:",d==null?void 0:d.resume),this.debugLog("Response error:",d==null?void 0:d.error),d&&d.success&&d.resume?(g=d.resume.id,this.debugLog("Got resume ID from database: ".concat(g)),await chrome.storage.local.set({currentResumeId:g}),this.debugLog("Stored resume ID in storage for future use")):(this.debugLog("Failed to get default resume from database:",d),this.debugLog("Response details:",{success:d==null?void 0:d.success,error:d==null?void 0:d.error,status:d==null?void 0:d.status,message:d==null?void 0:d.message}))}else this.debugLog("No user ID available for resume fetch")}catch(l){this.errorLog("Error getting current resume ID:",l)}let m=await a.answerQuestion(e,t,o,g);if(m.stopped)return this.debugLog("Question answering stopped by user"),{stopped:!0};if(!m.success||!m.answer)return this.debugLog("No answer generated for question"),{success:!1};let h=m.answer;this.debugLog("AI Answer: ".concat(h));try{let l=this.detectQuestionType(e),d=((s=window.currentAiSettings)==null?void 0:s.model)||"unknown",p=this.shouldSkipQuestion(e);await S.addQuestionAnswer(e,h,l,d,p)}catch(l){this.errorLog("Error tracking question/answer:",l)}switch(r.tagName.toLowerCase()){case"input":switch(r.type){case"text":case"tel":case"email":r.value=h,r.dispatchEvent(new Event("input",{bubbles:!0}));break;case"radio":let l=n.querySelectorAll('input[type="radio"]');for(let d of l){let p=n.querySelector('label[for="'.concat(d.id,'"]'));if(p&&p.textContent.trim()===h){d.click(),this.debugLog("Selected radio option: ".concat(h));break}}break;case"checkbox":r.checked=!0,r.dispatchEvent(new Event("change",{bubbles:!0}));break}break;case"textarea":r.value=h,r.dispatchEvent(new Event("input",{bubbles:!0}));break;case"select":for(let l=0;l<r.options.length;l++)if(r.options[l].text.trim()===h){r.selectedIndex=l,r.dispatchEvent(new Event("change",{bubbles:!0})),this.debugLog("Selected option: ".concat(h));break}break}return await this.wait(500),{success:!0}}catch(i){return this.errorLog('Error answering question "'.concat(e,'"'),i),{success:!1}}}static detectQuestionType(e){let t=e.toLowerCase();return t.includes("level of")||t.includes("proficiency in")||t.includes("fluent in")?"language_level":t.includes("skill")||t.includes("experience")||t.includes("years")||t.includes("technology")||t.includes("programming")||t.includes("language")||t.includes("c++")||t.includes("python")||t.includes("java")?"skills":t.includes("education")||t.includes("degree")||t.includes("study")||t.includes("university")||t.includes("college")?"education":t.includes("language")||t.includes("speak")||t.includes("fluent")?"languages":t.includes("notice")||t.includes("period")||t.includes("availability")||t.includes("start date")?"notice":t.includes("salary")||t.includes("compensation")||t.includes("pay")?"salary":t.includes("visa")||t.includes("citizenship")||t.includes("work permit")?"visa":t.includes("certification")||t.includes("certificate")?"certifications":"general"}},$=O;function f(u,e=null){let t=new Date().toISOString().split("T")[1],r="[EasyJob Debug ".concat(t,"] ").concat(u);e?console.log(r,e):console.log(r)}function b(u,e="info"){f("Status Update: ".concat(e," - ").concat(u)),typeof chrome<"u"&&chrome.runtime&&chrome.runtime.sendMessage({action:"STATUS_UPDATE",text:u,status:e})}async function L(u){if(!u)return f("Auto-apply process stopped by user (local check)"),b("Auto-apply process stopped","info"),typeof chrome<"u"&&chrome.runtime&&chrome.runtime.sendMessage({action:"PROCESS_COMPLETE"}),!0;try{if(typeof chrome<"u"&&chrome.runtime){let e=await chrome.runtime.sendMessage({action:"getAutoApplyState"});if(e&&e.success&&!e.isRunning)return f("Auto-apply process stopped by user (background check)"),b("Auto-apply process stopped","info"),chrome.runtime.sendMessage({action:"PROCESS_COMPLETE"}),!0}}catch(e){f("Failed to check background state, using local state",e)}return!1}typeof chrome<"u"&&chrome.runtime&&chrome.runtime.onMessage.addListener((u,e,t)=>{if(u.action==="START_AUTO_APPLY")return startAutoApplyProcess().then(()=>{t({success:!0})}).catch(r=>{console.error("Error in auto-apply process:",r),t({success:!1,error:r.message})}),!0});var N=class extends y{static async processJobPage(e,t,r,n){this.debugLog("Processing page ".concat(e,"/").concat(t)),b("Processing page ".concat(e," of ").concat(t),"info");let o=await v.getListOfJobsOnPage(r);f("Found ".concat(o.length," jobs on page ").concat(e));for(let s of o){if(await L(n))return this.debugLog("Stop requested during job processing - breaking job loop"),!1;if(await j.processJob(s,n),await L(n))return this.debugLog("Stop requested after job processing - breaking job loop"),!1}if(e<t)if(f("Finished processing page ".concat(e,", navigating to next page...")),b("Moving to page ".concat(e+1," of ").concat(t,"..."),"info"),await v.goToNextPage())f("Successfully navigated to page ".concat(e+1));else return f("Failed to navigate to next page or reached last page"),await v.isOnLastPage()?(f("Confirmed: reached the last page"),b("Reached the last page of results","info")):(f("Navigation failed but not on last page - stopping process"),b("Failed to navigate to next page - stopping","error")),!1;else f("Finished processing last page (".concat(e,"/").concat(t,")"));return!0}},j=class extends y{static async processJob(e,t){try{let r=await E.getJobClickableElement(e);if(await E.clickOnJob(r),f("Clicked on job"),await E.scrollDownToLoadNextJob(e),f("Scrolled to job"),await L(t))return;let n=await E.isEasyButtonAvailable();if(f("Is Easy Apply button available:",n),!n){f("Job already applied. Skipping..."),b("Job already applied. Skipping...","info");return}let o=await T.getAllJobInfo();if(!o){f("ERROR: Job info is null, cannot proceed");return}window.currentUserData&&await chrome.storage.local.set({currentUser:window.currentUserData});try{if(!(await chrome.storage.local.get(["currentResumeId"])).currentResumeId&&window.currentUserData){let c=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/users/".concat(window.currentUserData.id,"/resumes/default")});c&&c.success&&c.resume&&await chrome.storage.local.set({currentResumeId:c.resume.id})}}catch(i){f("Error storing resume ID:",i)}if(await E.clickEasyApply(),await new Promise(i=>setTimeout(i,3e3)),await L(t)){this.debugLog("Stop requested before form processing");return}console.log("=== CALLING PROCESS FORM ==="),console.log("About to call processForm with jobInfo:",o),console.log("Current URL before form processing:",window.location.href),console.log("=== END CALLING PROCESS FORM ===");let s=async()=>await L(t);await $.processForm(s,o),f("Processed application form")}catch(r){console.error("Error processing job:",r),f("Error processing job:",{error:r.message,stack:r.stack}),b("Error processing job. Continuing to next one...","error")}}},U=N;var w=!1;async function K(){try{if(await L(w))return;let u=document.querySelector(".scaffold-layout.jobs-search-two-pane__layout");if(!u){b("Could not find jobs list. Please make sure you are on LinkedIn jobs page.","error");return}let e=await v.getTotalJobsSearchCount(u);b("Found ".concat(e," jobs to process"),"info");let t=await v.getAvailablePages(u,e);for(let r=1;r<=t;r++){if(await L(w))return;if(await U.processJobPage(r,t,u,w)===!1)break}await L(w)||(b("Auto-apply process completed!","success"),chrome&&chrome.runtime&&chrome.runtime.sendMessage({action:"PROCESS_COMPLETE"}))}catch(u){console.error("Error in auto-apply process:",u),b("Error in auto-apply process","error")}}typeof chrome>"u"||!chrome.runtime?console.log("Chrome extension APIs not available - script may be running in wrong context"):chrome.runtime.onMessage.addListener((u,e,t)=>((async()=>{try{u.action==="startAutoApply"?w?t({success:!1,message:"Auto apply already running"}):(w=!0,window.currentUserData=u.userData,window.currentAiSettings=u.aiSettings,K(),t({success:!0,message:"Auto apply started"})):u.action==="stopAutoApply"?(w=!1,t({success:!0,message:"Auto apply stopped"})):u.action==="GET_STATE"?t({isRunning:w}):u.action==="START_AUTO_APPLY"?w?t({success:!1,message:"Auto apply already running"}):(w=!0,K(),t({success:!0,message:"Auto apply started"})):u.action==="STOP_AUTO_APPLY"?(w=!1,t({success:!0,message:"Auto apply stopped"})):t({success:!1,message:"Unknown action"})}catch(r){console.error("Error handling message in content script:",r),t({success:!1,error:r.message})}})(),!0));
