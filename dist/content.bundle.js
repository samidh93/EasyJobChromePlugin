(()=>{var m=class{static async getTotalJobsSearchCount(o){try{await new Promise(t=>setTimeout(t,1e3));let e=o.querySelector(".jobs-search-results-list__subtitle");if(e){let t=e.textContent.trim(),n=parseInt(t.split(" ")[0].replace(/,/g,"").replace(/\./g,"").replace(/\+/g,""));return console.log(`Total jobs found: ${n}`),n}else return console.log("No results found"),0}catch(e){return console.error("An error occurred while fetching total jobs count:",e),0}}static async getAvailablePages(o,e){try{await new Promise(p=>setTimeout(p,1e3));let t=o.querySelector('ul[class*="jobs-search-pagination__pages"]');if(!t)return console.log("Pagination list not found."),0;let n=t.querySelectorAll("li");if(n.length===0)return console.log("No pagination items found."),0;let a=n[n.length-1];console.log(`Last page: ${a}`);let u=Math.ceil(e/25);return console.log(`Total pages available: ${u}`),u}catch(t){return console.error("Exception occurred while fetching available pages:",t),0}}static async getListOfJobsOnPage(o){try{await new Promise(n=>setTimeout(n,1e3));let e=o.querySelector(".scaffold-layout__list");if(!e)return console.log("Jobs container not found."),[];let t=e.querySelectorAll("li[class*='scaffold-layout__list-item']");return console.log(`Found ${t.length} jobs on this page.`),Array.from(t)}catch(e){return console.error("Exception occurred while fetching the list of jobs:",e),[]}}static async getJobClickableElement(o){try{await new Promise(t=>setTimeout(t,1e3));let e=o.querySelector("a");return e||(console.log("Could not find clickable element for job"),null)}catch(e){return console.error("Exception occurred while fetching clickable element:",e),null}}static async scrollDownToLoadNextJob(o){try{await new Promise(e=>setTimeout(e,1e3)),o.scrollIntoView({behavior:"smooth",block:"center"}),console.log("Scrolled down to load next job")}catch(e){console.error("Error while scrolling down to load next job",e)}}static async getJobElements(o){try{await new Promise(t=>setTimeout(t,1e3));let e=o.querySelector(".jobs-search__job-details");return e?(console.log("Found job elements"),e):(console.log("Could not find job elements"),null)}catch(e){return console.error("Error while fetching job elements",e),null}}static async clickOnJob(o){try{o.click(),console.log("Clicked on job element")}catch(e){console.info("could not click on job element",e)}}static async clickEasyApply(){try{let o=document.querySelector(".jobs-s-apply button");o&&(o.click(),console.log("Clicked on easy apply button"))}catch(o){console.error("Error while clicking on apply button",o)}}static async closeForm(o=!1){try{let e=document.querySelector('button[aria-label="Dismiss"]');if(e)if(e.click(),await new Promise(t=>setTimeout(t,1e3)),o){let t=document.querySelector('button[data-control-name="save_application_btn"]');t&&(t.click(),console.log("closed form and saved application"))}else{let t=document.querySelector('button[data-control-name="discard_application_confirm_btn"]');t&&(t.click(),console.log("closed form and discarded application"))}}catch(e){console.error("Error while closing form",e)}}static async clickNextPage(){try{await new Promise(e=>setTimeout(e,1e3));let o=document.querySelector('button[aria-label="Continue to next step"]');o&&(o.click(),console.log("Clicked on next page button"))}catch(o){console.error("Error while clicking on next page button",o)}}static async clickPreviousPage(){try{await new Promise(e=>setTimeout(e,1e3));let o=document.querySelector('button[aria-label="Back to previous step"]');o&&(o.click(),console.log("Clicked on previous page button"))}catch(o){console.error("Error while clicking on previous page button",o)}}static async clickReviewApplication(){try{await new Promise(e=>setTimeout(e,1e3));let o=document.querySelector('button[aria-label="Review your application"]');o&&(o.click(),console.log("Clicked on review button"))}catch(o){console.error("Error while clicking on review button",o)}}static async clickSubmitApplication(){try{await new Promise(e=>setTimeout(e,1e3));let o=document.querySelector('button[aria-label="Submit application"]');o&&(o.click(),console.log("Clicked on submit button"))}catch(o){console.error("Error while clicking on submit button",o)}}},s=m;var b=!1,f=!0;function r(c,o=null){if(!f)return;let t=`[EasyJob Debug ${new Date().toISOString().split("T")[1]}] ${c}`;o?console.log(t,o):console.log(t)}function i(c,o="info"){r(`Status Update: ${o} - ${c}`),chrome.runtime.sendMessage({type:"STATUS_UPDATE",text:c,status:o})}async function w(){var c,o;try{r("Starting auto-apply process"),r("Current URL:",window.location.href);let e=document.querySelector(".scaffold-layout.jobs-search-two-pane__layout");if(r("Search element found:",!!e),!e){r("Available elements on page:",{body:document.body.innerHTML.substring(0,500)+"...",possibleSelectors:{scaffold:document.querySelector(".scaffold-layout"),jobsSearch:document.querySelector(".jobs-search-two-pane__layout"),anyJobsRelated:document.querySelectorAll('[class*="jobs-"]')}}),i("Could not find jobs list. Please make sure you are on LinkedIn jobs page.","error");return}r("Getting total jobs count");let t=await s.getTotalJobsSearchCount(e);r("Total jobs found:",t),i(`Found ${t} jobs to process`,"info"),r("Getting available pages");let n=await s.getAvailablePages(e,t);r("Total pages found:",n);for(let a=1;a<=n&&b;a++){r(`Processing page ${a}/${n}`),i(`Processing page ${a} of ${n}`,"info");let u=await s.getListOfJobsOnPage(e);r(`Found ${u.length} jobs on page ${a}`);for(let p of u){if(!b){r("Auto-apply process stopped by user");break}try{r("Processing job:",p.innerHTML.substring(0,200));let l=await s.getJobClickableElement(p);if(r("Clickable element found:",!!l),l){await s.scrollDownToLoadNextJob(p),r("Scrolled to job"),await s.clickOnJob(l),r("Clicked on job"),await new Promise(y=>setTimeout(y,2e3)),r("Waited for job details"),await s.clickEasyApply(),r("Attempted to click Easy Apply");let g=((c=l.querySelector(".job-card-list__title"))==null?void 0:c.textContent.trim())||"Unknown Position",d=((o=l.querySelector(".job-card-container__company-name"))==null?void 0:o.textContent.trim())||"Unknown Company";r("Job details:",{jobTitle:g,company:d}),await storeJobApplication({title:g,company:d,status:"Applied"}),r("Stored job application"),i(`Applied to ${g} at ${d}`,"success"),await s.closeForm(!0),r("Closed application form")}}catch(l){console.error("Error processing job:",l),r("Error processing job:",{error:l.message,stack:l.stack}),i("Error processing job. Continuing to next one...","error")}await new Promise(l=>setTimeout(l,3e3)),r("Waited cooldown period")}}r("Auto-apply process completed"),i("Auto-apply process completed!","success"),chrome.runtime.sendMessage({type:"PROCESS_COMPLETE"})}catch(e){console.error("Error in auto-apply process:",e),r("Fatal error in auto-apply process:",{error:e.message,stack:e.stack}),i("Error in auto-apply process","error")}}chrome.runtime.onMessage.addListener((c,o,e)=>{r("Received message:",c),c.action==="START_AUTO_APPLY"?b||(b=!0,r("Starting auto-apply process"),w()):c.action==="STOP_AUTO_APPLY"&&(r("Stopping auto-apply process"),b=!1)});})();
