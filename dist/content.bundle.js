(()=>{var c=class{static async getTotalJobsSearchCount(t){try{await new Promise(o=>setTimeout(o,1e3));let e=t.querySelector(".jobs-search-results-list__subtitle");if(e){let o=e.textContent.trim(),r=parseInt(o.split(" ")[0].replace(/,/g,"").replace(/\./g,"").replace(/\+/g,""));return console.log(`Total jobs found: ${r}`),r}else return console.log("No results found"),0}catch(e){return console.error("An error occurred while fetching total jobs count:",e),0}}static async getAvailablePages(t){try{await new Promise(l=>setTimeout(l,1e3));let e=t.querySelector('ul[class*="artdeco-pagination__pages--number"]');if(!e)return console.log("Pagination list not found."),0;let o=e.querySelectorAll("li");if(o.length===0)return console.log("No pagination items found."),0;let s=o[o.length-1].getAttribute("data-test-pagination-page-btn");if(s){let l=parseInt(s,10);return console.log(`Total pages available: ${l}`),l}else return console.log("Could not find 'data-test-pagination-page-btn' attribute."),0}catch(e){return console.error("Exception occurred while fetching available pages:",e),0}}static async getListOfJobsOnPage(t){try{await new Promise(r=>setTimeout(r,1e3));let e=t.querySelector(".scaffold-layout__list");if(!e)return console.log("Jobs container not found."),[];let o=e.querySelectorAll("li[class*='scaffold-layout__list-item']");return console.log(`Found ${o.length} jobs on this page.`),Array.from(o)}catch(e){return console.error("Exception occurred while fetching the list of jobs:",e),[]}}static async getJobClickableElement(t){try{await new Promise(o=>setTimeout(o,1e3));let e=t.querySelector("a");return e||(console.log("Could not find clickable element for job"),null)}catch(e){return console.error("Exception occurred while fetching clickable element:",e),null}}static async scrollDownToLoadNextJob(t){try{await new Promise(e=>setTimeout(e,1e3)),t.scrollIntoView({behavior:"smooth",block:"center"})}catch(e){console.error("Error while scrolling down to load next job",e)}}static async getJobElements(t){try{await new Promise(o=>setTimeout(o,1e3));let e=t.querySelector(".jobs-search__job-details");return e?(console.log("Found job elements"),e):(console.log("Could not find job elements"),null)}catch(e){return console.error("Error while fetching job elements",e),null}}static async clickOnJob(t){try{t.click()}catch(e){console.info("could not click on job element",e)}}static async clickApply(t){try{let e=document.querySelector(".jobs-s-apply button");e&&e.click()}catch(e){console.error("Error while clicking on apply button",e)}}static async getFormElements(){try{await new Promise(e=>setTimeout(e,1e3));let t=document.querySelector(".jobs-easy-apply-modal");return t?(console.log("Found form elements"),t):(console.log("Could not find form elements"),null)}catch(t){return console.error("Error while fetching form elements",t),null}}static async closeForm(t,e=!1){try{let o=t.querySelector('button[aria-label="Dismiss"]');if(o)if(o.click(),await new Promise(r=>setTimeout(r,500)),e){let r=t.querySelector('button[data-control-name="save_application_btn"]');r&&r.click()}else{let r=t.querySelector('button[data-control-name="discard_application_confirm_btn"]');r&&r.click()}}catch(o){console.error("Error while closing form",o)}}static async clickNextPage(t){try{await new Promise(o=>setTimeout(o,1e3));let e=t.querySelector('button[aria-label="Continue to next step"]');e&&e.click()}catch(e){console.error("Error while clicking on next page button",e)}}},n=c;var m=new MutationObserver(async(i,t)=>{let e=document.querySelector(".scaffold-layout.jobs-search-two-pane__layout");if(e){t.disconnect();try{let o=await n.getTotalJobsSearchCount(e),r=await n.getAvailablePages(e),s=await n.getListOfJobsOnPage(e);for(let l of s){let a=await n.getJobClickableElement(l);await n.clickOnJob(a),await n.scrollDownToLoadNextJob(a);let u=await n.getJobElements(e);await n.clickApply(u);let b=await n.getFormElements();await n.closeForm(b,!1);break}}catch(o){console.error("An error occurred while processing jobs:",o)}}});m.observe(document.body,{childList:!0,subtree:!0});})();
