(()=>{var g=class{static async getTotalJobsSearchCount(e){try{await new Promise(o=>setTimeout(o,1e3));let t=e.querySelector(".jobs-search-results-list__subtitle");if(t){let o=t.textContent.trim(),l=parseInt(o.split(" ")[0].replace(/,/g,"").replace(/\./g,"").replace(/\+/g,""));return console.log(`Total jobs found: ${l}`),l}else return console.log("No results found"),0}catch(t){return console.error("An error occurred while fetching total jobs count:",t),0}}static async getAvailablePages(e,t){try{await new Promise(s=>setTimeout(s,1e3));let o=e.querySelector('ul[class*="jobs-search-pagination__pages"]');if(!o)return console.log("Pagination list not found."),0;let l=o.querySelectorAll("li");if(l.length===0)return console.log("No pagination items found."),0;let c=l[l.length-1];console.log(`Last page: ${c}`);let i=Math.ceil(t/25);return console.log(`Total pages available: ${i}`),i}catch(o){return console.error("Exception occurred while fetching available pages:",o),0}}static async getListOfJobsOnPage(e){try{await new Promise(l=>setTimeout(l,1e3));let t=e.querySelector(".scaffold-layout__list");if(!t)return console.log("Jobs container not found."),[];let o=t.querySelectorAll("li[class*='scaffold-layout__list-item']");return console.log(`Found ${o.length} jobs on this page.`),Array.from(o)}catch(t){return console.error("Exception occurred while fetching the list of jobs:",t),[]}}static async getJobClickableElement(e){try{await new Promise(o=>setTimeout(o,1e3));let t=e.querySelector("a");return t||(console.log("Could not find clickable element for job"),null)}catch(t){return console.error("Exception occurred while fetching clickable element:",t),null}}static async scrollDownToLoadNextJob(e){try{await new Promise(t=>setTimeout(t,1e3)),e.scrollIntoView({behavior:"smooth",block:"center"}),console.log("Scrolled down to load next job")}catch(t){console.error("Error while scrolling down to load next job",t)}}static async clickOnJob(e){try{e.click(),console.log("Clicked on job element")}catch(t){console.info("could not click on job element",t)}}static async clickEasyApply(){try{let e=document.querySelector(".jobs-s-apply button");if(e)return e.click(),console.log("Clicked on easy apply button"),!0;throw new Error("Easy apply button not found")}catch(e){throw console.error("Error while clicking on easy apply button",e),e}}static async getJobTitle(){try{let e=document.querySelector(".job-details-jobs-unified-top-card__job-title h1");if(e){let t=e.textContent.trim();return console.log(`Found job title: ${t}`),t}return console.log("Job title not found"),null}catch(e){return console.error("Error while getting job title:",e),null}}static async getCompanyName(){try{let e=document.querySelector(".job-details-jobs-unified-top-card__company-name a");if(e){let t=e.textContent.trim();return console.log(`Found company name: ${t}`),t}return console.log("Company name not found"),null}catch(e){return console.error("Error while getting company name:",e),null}}static async getLocation(){try{let e=document.querySelector(".job-details-jobs-unified-top-card__tertiary-description-container .tvm__text");if(e){let t=e.textContent.trim();return console.log(`Found location: ${t}`),t}return console.log("Location not found"),null}catch(e){return console.error("Error while getting location:",e),null}}static async getJobType(){try{let e=document.querySelector(".job-details-preferences-and-skills__pill .ui-label");if(e){let o=e.textContent.trim().split("Matches")[0].trim();return console.log(`Found job type: ${o}`),o}return console.log("Job type not found"),null}catch(e){return console.error("Error while getting job type:",e),null}}static async getJobDescription(){try{let e=document.querySelector(".jobs-description__content");if(e){let t=e.textContent.trim();return console.log("Found job description"),t}return console.log("Job description not found"),null}catch(e){return console.error("Error while getting job description:",e),null}}static async getApplicantCount(){try{let e=document.querySelector(".jobs-premium-applicant-insights__list-item .jobs-premium-applicant-insights__list-num");if(e){let t=e.textContent.trim();return console.log(`Found applicant count: ${t}`),t}return console.log("Applicant count not found"),null}catch(e){return console.error("Error while getting applicant count:",e),null}}static async getAllJobInfo(){try{let e={title:await this.getJobTitle(),company:await this.getCompanyName(),location:await this.getLocation(),jobType:await this.getJobType(),description:await this.getJobDescription(),applicantCount:await this.getApplicantCount()};return console.log("Retrieved all job information"),e}catch(e){return console.error("Error while getting all job information:",e),null}}static async closeForm(e=!1){var t,o;try{let l=document.querySelector('button[aria-label="Dismiss"]');if(l||(l=document.querySelector('button[aria-label="Close"]')||document.querySelector('button[aria-label="Cancel"]')||document.querySelector("button[data-test-modal-close-btn]")),l){if(l.click(),await new Promise(c=>setTimeout(c,1e3)),e){let c=document.querySelector('button[data-control-name="save_application_btn"]');c&&(c.click(),console.log("closed form and saved application"))}else{let c=document.querySelector('button[data-control-name="discard_application_confirm_btn"]')||document.querySelector("button[data-test-dialog-secondary-btn]");c&&(c.click(),console.log("closed form and discarded application"))}await new Promise(c=>setTimeout(c,1e3))}}catch(l){console.error("Error while closing form",l);try{let c=document.querySelectorAll("button");for(let i of c)(i.textContent.toLowerCase().includes("close")||i.textContent.toLowerCase().includes("cancel")||(t=i.getAttribute("aria-label"))!=null&&t.toLowerCase().includes("close")||(o=i.getAttribute("aria-label"))!=null&&o.toLowerCase().includes("dismiss"))&&(i.click(),await new Promise(s=>setTimeout(s,500)))}catch(c){console.error("Failed final attempt to close form",c)}}}static async clickNextPage(){try{await new Promise(t=>setTimeout(t,1e3));let e=document.querySelector('button[aria-label="Continue to next step"]');e&&(e.click(),console.log("Clicked on next page button"))}catch(e){console.error("Error while clicking on next page button",e)}}static async clickPreviousPage(){try{await new Promise(t=>setTimeout(t,1e3));let e=document.querySelector('button[aria-label="Back to previous step"]');e&&(e.click(),console.log("Clicked on previous page button"))}catch(e){console.error("Error while clicking on previous page button",e)}}static async clickReviewApplication(){try{await new Promise(t=>setTimeout(t,1e3));let e=document.querySelector('button[aria-label="Review your application"]');e&&(e.click(),console.log("Clicked on review button"))}catch(e){console.error("Error while clicking on review button",e)}}static async clickSubmitApplication(){try{await new Promise(t=>setTimeout(t,1e3));let e=document.querySelector('button[aria-label="Submit application"]');e&&(e.click(),console.log("Clicked on submit button"))}catch(e){console.error("Error while clicking on submit button",e)}}static async processForm(){try{let e=Date.now(),t=3*60*1e3,o=!1;for(;!o&&Date.now()-e<t;){if(console.log("Starting form processing iteration"),await shouldStop())return console.log("Stop requested during form processing"),!1;let l=Date.now(),c=60*1e3,i=!1;for(;!i&&Date.now()-l<c;){if(await shouldStop())return console.log("Stop requested during review loop"),!1;let s=document.querySelector('button[aria-label="Review your application"]');if(s){s.click(),console.log("Found and clicked review button"),i=!0,await new Promise(b=>setTimeout(b,2e3));let u=document.querySelector('button[aria-label="Submit application"]');if(u){u.click(),console.log("Clicked submit button after review"),o=!0;break}}else{let u=document.querySelector('button[aria-label="Continue to next step"]');if(u)u.click(),console.log("Clicked next page button"),await new Promise(b=>setTimeout(b,2e3));else{let b=document.querySelector('button[aria-label="Submit application"]');if(b){b.click(),console.log("Found submit button without review"),o=!0;break}}}await new Promise(u=>setTimeout(u,2e3))}i||console.log("Review button not found within 1 minute, continuing to next iteration"),await new Promise(s=>setTimeout(s,2e3))}return o?(console.log("Form processed and submitted successfully"),!0):(console.log("Form processing timed out after 3 minutes"),!1)}catch(e){return console.error("Error while processing form:",e),!1}}},a=g;var d=!1,y=!0;async function p(){return d?!1:(n("Auto-apply process stopped by user"),m("Auto-apply process stopped","info"),chrome.runtime.sendMessage({type:"PROCESS_COMPLETE"}),!0)}function n(r,e=null){if(!y)return;let o=`[EasyJob Debug ${new Date().toISOString().split("T")[1]}] ${r}`;e?console.log(o,e):console.log(o)}function m(r,e="info"){n(`Status Update: ${e} - ${r}`),chrome.runtime.sendMessage({type:"STATUS_UPDATE",text:r,status:e})}async function f(){try{if(n("Starting auto-apply process"),n("Current URL:",window.location.href),await p())return;let r=document.querySelector(".scaffold-layout.jobs-search-two-pane__layout");if(n("Search element found:",!!r),!r){n("Available elements on page:",{body:document.body.innerHTML.substring(0,500)+"...",possibleSelectors:{scaffold:document.querySelector(".scaffold-layout"),jobsSearch:document.querySelector(".jobs-search-two-pane__layout"),anyJobsRelated:document.querySelectorAll('[class*="jobs-"]')}}),m("Could not find jobs list. Please make sure you are on LinkedIn jobs page.","error");return}n("Getting total jobs count");let e=await a.getTotalJobsSearchCount(r);n("Total jobs found:",e),m(`Found ${e} jobs to process`,"info"),n("Getting available pages");let t=await a.getAvailablePages(r,e);n("Total pages found:",t);for(let o=1;o<=t;o++){if(await p())return;n(`Processing page ${o}/${t}`),m(`Processing page ${o} of ${t}`,"info");let l=await a.getListOfJobsOnPage(r);n(`Found ${l.length} jobs on page ${o}`);for(let c of l){if(await p())return;try{let i=await a.getJobClickableElement(c);if(await a.clickOnJob(i),n("Clicked on job"),await a.scrollDownToLoadNextJob(c),n("Scrolled to job"),await p())return;let s=await a.getAllJobInfo();if(n("Job info:",s),await a.clickEasyApply(),n("Attempted to click Easy Apply"),await new Promise(u=>setTimeout(u,2e3)),await p()){await a.closeForm(!1);return}await a.processForm(),n("Processed application form"),await a.closeForm(!1),n("Closed application form")}catch(i){console.error("Error processing job:",i),n("Error processing job:",{error:i.message,stack:i.stack}),m("Error processing job. Continuing to next one...","error"),await a.closeForm(!1)}await p()||(await new Promise(i=>setTimeout(i,3e3)),n("Waited cooldown period"))}}await p()||(n("Auto-apply process completed"),m("Auto-apply process completed!","success"),chrome.runtime.sendMessage({type:"PROCESS_COMPLETE"}))}catch(r){console.error("Error in auto-apply process:",r),n("Fatal error in auto-apply process:",{error:r.message,stack:r.stack}),m("Error in auto-apply process","error"),await a.closeForm(!1)}}chrome.runtime.onMessage.addListener((r,e,t)=>(n("Received message:",r),r.action==="START_AUTO_APPLY"?d||(d=!0,n("Starting auto-apply process"),f()):r.action==="STOP_AUTO_APPLY"?(n("Stopping auto-apply process"),d=!1):r.action==="GET_STATE"&&(n("Getting current state"),t({isRunning:d})),!0));})();
