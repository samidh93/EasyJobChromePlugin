var c=class{constructor(r=null){this.model=r||"qwen2.5:3b",this.user_data=null,this.formatted_text=null,this.modelLoadPromise=null,r||(this.modelLoadPromise=this.loadModelFromStorage())}async loadModelFromStorage(){try{let r=await chrome.storage.local.get(["aiModel"]);r.aiModel?(this.model=r.aiModel,console.log("AIQuestionAnswerer: Loaded model from storage: ".concat(this.model))):console.log("AIQuestionAnswerer: No model in storage, using default: ".concat(this.model))}catch(r){console.warn("AIQuestionAnswerer: Failed to load model from storage, using default: ".concat(this.model),r)}}async ensureModelLoaded(){this.modelLoadPromise&&(await this.modelLoadPromise,this.modelLoadPromise=null)}setModel(r){r&&typeof r=="string"&&(this.model=r,console.log("AIQuestionAnswerer: Model set to: ".concat(this.model)))}async setUserContext(r,e=null){try{if(typeof r=="object"&&r!==null)this.user_data=r,this.formatted_text=e||this.formatUserDataAsText(),console.log("User context set with structured data");else if(typeof r=="string")this.user_data=null,this.formatted_text=r,console.log("User context set with formatted text only");else throw new Error("Invalid user data format");return console.log("User context set successfully"),{success:!0}}catch(t){return console.error("Error in setUserContext:",t),{success:!1,error:t.message}}}async answerQuestion(r,e=null,t=null){var n;try{await this.ensureModelLoaded(),console.log("Answering question:",r),console.log("Using AI model:",this.model),console.log("Options:",e);let s=this.getDirectAnswer(r);if(s){if(console.log("Found direct answer:",s),e&&Array.isArray(e)&&e.length>0){let i=this.matchToOption(s,e);return console.log("Matched direct answer to option:",i),{success:!0,answer:i}}return{success:!0,answer:s}}if(t){let i=!1;if(typeof t=="function"?i=await t():t&&t.value!==void 0?i=t.value:i=!!t,i)return console.log("Stop requested before AI processing"),{success:!1,stopped:!0}}let o=this.buildEnhancedPrompt(r,e),a=await this.callOllamaAPIWithStop({model:this.model,prompt:o,stream:!1},t);if(a&&a.stopped)return{success:!1,stopped:!0};let l=((n=a==null?void 0:a.response)==null?void 0:n.trim())||"";if(this.isYearsOfExperienceQuestion(r)&&/^\d+$/.test(l)){let i=parseInt(l);i<5&&(l="5",console.log("Enforced minimum 5 years for experience question, was: ".concat(i)))}return e&&Array.isArray(e)&&e.length>0&&(l=this.matchToOption(l,e)),console.log("Final answer:",l),{success:!0,answer:l||"Information not available"}}catch(s){return console.error("Error in answerQuestion:",s),{success:!0,answer:e&&Array.isArray(e)&&e.length>0?e.length>1?e[1]:e[0]:"Information not available"}}}getDirectAnswer(r){var n;if(!((n=this.user_data)!=null&&n.personal_information))return null;let e=this.user_data.personal_information,t=r.toLowerCase();return t.includes("email")||t.includes("e-mail")?e.email||null:t.includes("phone")||t.includes("mobile")||t.includes("telefon")?(e.phone_prefix?"".concat(e.phone_prefix).concat(e.phone):e.phone)||null:t.includes("first name")||t.includes("vorname")?e.name||null:t.includes("last name")||t.includes("surname")||t.includes("nachname")?e.surname||null:t.includes("country")&&!t.includes("code")?e.country||null:this.isNoticePeriodOrStartDateQuestion(r)?t.includes("notice period")||t.includes("k\xFCndigungsfrist")||t.includes("kuendigungsfrist")?t.includes("monate")||t.includes("deutsch")?"2 Monate":"2 months":this.calculateDateTwoMonthsFromNow():null}buildEnhancedPrompt(r,e){let t=this.formatUserDataAsText(),n='You are a job applicant filling out a job application form. Answer questions based on your resume information in first person (as "I" not "he/she").\n\nMY RESUME:\n'.concat(t,"\n\nQUESTION: ").concat(r,'\n\nIMPORTANT GENERAL RULES:\n- Answer as the job applicant (use "I", "my", "me" - NOT "he", "she", "Sami", or third person)\n- Be concise and direct\n- Only provide the specific information requested\n- Do not mention your name unless explicitly asked');if(this.isDecimalNumberQuestion(r)&&(n+='\n\nIMPORTANT RULES FOR DECIMAL NUMBERS:\n- If asked for a decimal number, provide ONLY a decimal number (e.g., "3.5", "2.0", "1.2")\n- Do NOT include explanations, descriptions, or additional text\n- The number should be greater than 0.0 as requested\n- Example: "3.0" not "3.0 years" or explanations'),this.isYearsOfExperienceQuestion(r)&&(n+='\n\nIMPORTANT RULES FOR YEARS OF EXPERIENCE:\n- If asked for years of experience, provide ONLY a number between 5-99\n- MINIMUM is always 5 years - never return 0, 1, 2, 3, or 4\n- Do NOT include words like "years", "Jahre", or descriptions\n- For skill levels: Beginner=5, Intermediate=7, Advanced=10+ years\n- Calculate based on work experience and skill level\n- If no specific experience found, default to 5 years minimum\n- If unclear or no data, always answer at least 5 years to maximize job prospects\n- Example: "5" not "5 years" or "5 Jahre"\n- Better to overestimate than underestimate for better interview chances'),this.isDegreeQuestion(r)&&(n+='\n\nIMPORTANT RULES FOR DEGREE QUESTIONS:\n- Check education section carefully for exact degree matches\n- "Bachelor" = "Bachelor of Engineering" or "Bachelor of Science"\n- "Master" = "Master of Engineering" or "Master of Science"\n- Answer "Ja" for German forms, "Yes" for English forms\n- If degree is found, answer positively\n- Look for exact degree names in education section'),this.isSkillLevelQuestion(r)&&(n+="\n\nIMPORTANT RULES FOR SKILL LEVEL QUESTIONS:\n- Check the skills section for exact skill matches\n- Look for the skill name and its level (Beginner/Intermediate/Advanced)\n- Be precise about the level mentioned in the resume\n- Do not guess or estimate levels"),this.isNoticePeriodOrStartDateQuestion(r)){let s=this.calculateDateTwoMonthsFromNow();n+='\n\nIMPORTANT RULES FOR NOTICE PERIOD AND START DATE:\n- For notice period questions, answer "2 months" or "2 Monate"\n- For starting date questions, provide the exact date: '.concat(s,'\n- Use the format DD.MM.YYYY for German forms (e.g., "15.03.2024")\n- Use the format MM/DD/YYYY for English forms (e.g., "03/15/2024")\n- Current calculated start date (2 months from today): ').concat(s,"\n- Be consistent with the date format expected by the form")}if(e&&Array.isArray(e)&&e.length>0){let s=e.map(o=>'"'.concat(o,'"')).join(", ");n+="\n\nAvailable Options: [".concat(s,"]\n\nIMPORTANT: You MUST choose EXACTLY ONE option from the list above. Your answer should match one of the options EXACTLY as written.")}return n+="\n\nANSWER:",n}isDecimalNumberQuestion(r){let e=r.toLowerCase();return e.includes("decimal")||e.includes("dezimal")||e.includes("gr\xF6\xDFer als 0.0")||e.includes("greater than 0.0")||e.includes("decimal zahl")||e.includes("decimal number")}isYearsOfExperienceQuestion(r){let e=r.toLowerCase();return e.includes("jahre")||e.includes("years")||e.includes("experience")||e.includes("erfahrung")||e.includes("how many")||e.includes("wie viele")}isDegreeQuestion(r){let e=r.toLowerCase();return e.includes("bachelor")||e.includes("master")||e.includes("degree")||e.includes("abschluss")||e.includes("bildung")||e.includes("education")}isSkillLevelQuestion(r){let e=r.toLowerCase();return e.includes("level")||e.includes("niveau")||e.includes("skill")||e.includes("f\xE4higkeit")||e.includes("experience with")||e.includes("erfahrung mit")}isNoticePeriodOrStartDateQuestion(r){let e=r.toLowerCase();return e.includes("notice period")||e.includes("starting date")||e.includes("start date")||e.includes("startdatum")||e.includes("beginn")||e.includes("beginnen")||e.includes("k\xFCndigungsfrist")||e.includes("kuendigungsfrist")||e.includes("verf\xFCgbar")||e.includes("verfuegbar")||e.includes("available")||e.includes("wann k\xF6nnen sie")||e.includes("when can you")||e.includes("earliest start")||e.includes("fr\xFChester beginn")||e.includes("fruehester beginn")}calculateDateTwoMonthsFromNow(){let r=new Date;r.setMonth(r.getMonth()+2);let e=String(r.getDate()).padStart(2,"0"),t=String(r.getMonth()+1).padStart(2,"0"),n=r.getFullYear();return"".concat(e,".").concat(t,".").concat(n)}formatUserDataAsText(){return this.formatted_text?this.formatted_text:this.user_data?typeof this.user_data=="string"?this.user_data:this.formatObject(this.user_data,0):"No user data available."}formatObject(r,e=0){let t="  ".repeat(e),n="";if(typeof r=="object"&&r!==null)if(Array.isArray(r))for(let s of r)typeof s=="object"&&s!==null?n+="".concat(t,"- ").concat(this.formatObject(s,e+1)):n+="".concat(t,"- ").concat(s,"\n");else for(let[s,o]of Object.entries(r)){let a=s.toUpperCase().replace(/_/g," ");n+="".concat(t).concat(a,":\n"),typeof o=="object"&&o!==null?n+=this.formatObject(o,e+1):n+="".concat(t,"  ").concat(o,"\n")}else n+="".concat(t).concat(r,"\n");return n}matchToOption(r,e){if(!r||!e||e.length===0)return(e==null?void 0:e.length)>0?e[0]:"Not available";if(this.isDecimalNumberQuestion(r)||/^\d+\.\d+$/.test(r.trim())){let t=r.match(/\d+\.\d+/);if(t){let n=t[0];for(let s of e)if(s.includes(n))return s;return n}}if(this.isYearsOfExperienceQuestion(r)||/^\d+$/.test(r.trim())){let t=r.match(/\d+/);if(t){let n=parseInt(t[0]);this.isYearsOfExperienceQuestion(r)&&n<5&&(n=5);let s=n.toString();for(let o of e)if(o.includes(s))return o;return s}}if(this.isNoticePeriodOrStartDateQuestion(r)){if(r.toLowerCase().includes("2 months")||r.toLowerCase().includes("2 monate")){for(let n of e)if(n.toLowerCase().includes("2 months")||n.toLowerCase().includes("2 monate")||n.toLowerCase().includes("2 month"))return n;return r}let t=r.match(/\d{1,2}[.\/-]\d{1,2}[.\/-]\d{4}/);if(t){let n=t[0];for(let s of e)if(s.includes(n))return s;return n}}for(let t of e)if(t.toLowerCase()===r.toLowerCase())return t;for(let t of e)if(t.toLowerCase().includes(r.toLowerCase())||r.toLowerCase().includes(t.toLowerCase()))return t;if(r.toLowerCase().includes("germany")||r.toLowerCase().includes("deutsch")){for(let t of e)if(t.toLowerCase().includes("deutsch")||t.toLowerCase().includes("germany")||t.includes("+49"))return t}return e.length>1?e[1]:e[0]}async callOllamaAPI(r){try{return new Promise((e,t)=>{chrome.runtime.sendMessage({action:"callOllama",endpoint:"generate",data:r},n=>{chrome.runtime.lastError?t(new Error(chrome.runtime.lastError.message)):n.success===!1?t(new Error(n.error||"Unknown error from Ollama API")):e(n.data)})})}catch(e){throw console.error("Error calling Ollama API:",e),e}}async callOllamaAPIWithStop(r,e=null){try{return new Promise((t,n)=>{let s=null;e&&(s=setInterval(async()=>{try{let o=!1;typeof e=="function"?o=await e():e&&e.value!==void 0?o=e.value:o=!!e,o&&(console.log("Stop requested during AI API call"),s&&clearInterval(s),t({stopped:!0}))}catch(o){console.error("Error in stop check:",o)}},500)),chrome.runtime.sendMessage({action:"callOllama",endpoint:"generate",data:r},o=>{s&&clearInterval(s),chrome.runtime.lastError?n(new Error(chrome.runtime.lastError.message)):o.success===!1?n(new Error(o.error||"Unknown error from Ollama API")):t(o.data)})})}catch(t){throw console.error("Error calling Ollama API:",t),t}}async checkOllamaConnection(){try{return new Promise((r,e)=>{chrome.runtime.sendMessage({action:"testOllama"},t=>{chrome.runtime.lastError?e(new Error(chrome.runtime.lastError.message)):t&&t.success?r(!0):e(new Error((t==null?void 0:t.error)||"Failed to connect to Ollama"))})})}catch(r){throw console.error("Error checking Ollama connection:",r),r}}},d=c;export{d as default};
