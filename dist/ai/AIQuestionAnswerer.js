var s=class{constructor(){this.model="qwen2.5:3b",this.user_data=null}async setUserContext(t){try{return typeof t=="string"?(console.log("User context set as string - should be parsed object"),this.user_data=t):this.user_data=t,console.log("User context set successfully"),{success:!0}}catch(e){return console.error("Error in setUserContext:",e),{success:!1,error:e.message}}}async answerQuestion(t,e=null){var r;try{console.log("Answering question:",t),console.log("Options:",e);let a=this.getDirectAnswer(t);if(a){if(console.log("Found direct answer:",a),e&&Array.isArray(e)&&e.length>0){let c=this.matchToOption(a,e);return console.log("Matched direct answer to option:",c),c}return a}let n=this.buildSimplePrompt(t,e),l=await this.callOllamaAPI({model:this.model,prompt:n,stream:!1}),o=((r=l==null?void 0:l.response)==null?void 0:r.trim())||"";return e&&Array.isArray(e)&&e.length>0&&(o=this.matchToOption(o,e)),console.log("Final answer:",o),o||"Information not available"}catch(a){return console.error("Error in answerQuestion:",a),e&&Array.isArray(e)&&e.length>0?e.length>1?e[1]:e[0]:"Information not available"}}getDirectAnswer(t){var a;if(!((a=this.user_data)!=null&&a.personal_information))return null;let e=this.user_data.personal_information,r=t.toLowerCase();return r.includes("email")||r.includes("e-mail")?e.email||null:r.includes("phone")||r.includes("mobile")||r.includes("telefon")?(e.phone_prefix?"".concat(e.phone_prefix).concat(e.phone):e.phone)||null:r.includes("first name")||r.includes("vorname")?e.name||null:r.includes("last name")||r.includes("surname")||r.includes("nachname")?e.surname||null:r.includes("country")&&!r.includes("code")&&e.country||null}buildSimplePrompt(t,e){let r=this.formatUserDataAsText(),a="Based on the following resume information, please answer the question accurately and concisely:\n\nRESUME:\n".concat(r,"\n\nQUESTION: ").concat(t);if(e&&Array.isArray(e)&&e.length>0){let n=e.map(l=>'"'.concat(l,'"')).join(", ");a+="\nAvailable Options: [".concat(n,"]\n\nIMPORTANT: You MUST choose EXACTLY ONE option from the list above. Your answer should match one of the options EXACTLY as written.")}return a+="\n\nANSWER:",a}formatUserDataAsText(){return this.user_data?typeof this.user_data=="string"?this.user_data:this.formatObject(this.user_data,0):"No user data available."}formatObject(t,e=0){let r="  ".repeat(e),a="";if(typeof t=="object"&&t!==null)if(Array.isArray(t))for(let n of t)typeof n=="object"&&n!==null?a+="".concat(r,"- ").concat(this.formatObject(n,e+1)):a+="".concat(r,"- ").concat(n,"\n");else for(let[n,l]of Object.entries(t)){let o=n.toUpperCase().replace(/_/g," ");a+="".concat(r).concat(o,":\n"),typeof l=="object"&&l!==null?a+=this.formatObject(l,e+1):a+="".concat(r,"  ").concat(l,"\n")}else a+="".concat(r).concat(t,"\n");return a}matchToOption(t,e){if(!t||!e||e.length===0)return(e==null?void 0:e.length)>0?e[0]:"Not available";for(let r of e)if(r.toLowerCase()===t.toLowerCase())return r;for(let r of e)if(r.toLowerCase().includes(t.toLowerCase())||t.toLowerCase().includes(r.toLowerCase()))return r;if(t.toLowerCase().includes("germany")||t.toLowerCase().includes("deutsch")){for(let r of e)if(r.toLowerCase().includes("deutsch")||r.toLowerCase().includes("germany")||r.includes("+49"))return r}return e.length>1?e[1]:e[0]}async callOllamaAPI(t){try{return new Promise((e,r)=>{chrome.runtime.sendMessage({action:"callOllama",endpoint:"generate",data:t},a=>{chrome.runtime.lastError?r(new Error(chrome.runtime.lastError.message)):a.success===!1?r(new Error(a.error||"Unknown error from Ollama API")):e(a.data)})})}catch(e){throw console.error("Error calling Ollama API:",e),e}}async checkOllamaConnection(){try{return new Promise((t,e)=>{chrome.runtime.sendMessage({action:"testOllama"},r=>{chrome.runtime.lastError?e(new Error(chrome.runtime.lastError.message)):r&&r.success?t(!0):e(new Error((r==null?void 0:r.error)||"Failed to connect to Ollama"))})})}catch(t){throw console.error("Error checking Ollama connection:",t),t}}},u=s;export{u as default};
