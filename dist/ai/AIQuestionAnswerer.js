var M=Object.defineProperty,k=Object.defineProperties;var T=Object.getOwnPropertyDescriptors;var w=Object.getOwnPropertySymbols;var v=Object.prototype.hasOwnProperty,O=Object.prototype.propertyIsEnumerable;var E=(g,t,e)=>t in g?M(g,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):g[t]=e,m=(g,t)=>{for(var e in t||(t={}))v.call(t,e)&&E(g,e,t[e]);if(w)for(var e of w(t))O.call(t,e)&&E(g,e,t[e]);return g},h=(g,t)=>k(g,T(t));var A=class{constructor(){this.currentSettings=null,this.defaultModel="qwen2.5:3b",this.settingsLoadPromise=null}async loadAISettings(t){try{if(console.log("AISettingsManager: Loading AI settings for user:",t),console.log("AISettingsManager: User ID type:",typeof t),console.log("AISettingsManager: User ID length:",t?t.length:"null"),!t||typeof t!="string"||t.length!==36)return console.error("AISettingsManager: Invalid user ID provided:",t),console.log("AISettingsManager: Returning default settings (ollama)"),this.getDefaultSettings();console.log("AISettingsManager: Making API request to load settings...");let e=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/users/".concat(t,"/ai-settings/default")});return console.log("AISettingsManager: API response received:",e),e&&e.success?(this.currentSettings=e.ai_settings,console.log("AISettingsManager: Successfully loaded AI settings:",this.currentSettings),console.log("AISettingsManager: Provider:",this.currentSettings.ai_provider),console.log("AISettingsManager: Model:",this.currentSettings.ai_model),this.currentSettings):(console.warn("AISettingsManager: No AI settings found, using default"),console.log("AISettingsManager: Response was:",e),this.getDefaultSettings())}catch(e){return console.error("AISettingsManager: Error loading AI settings:",e),this.getDefaultSettings()}}getDefaultSettings(){return{provider:"ollama",model:this.defaultModel,apiKey:null,baseUrl:"http://localhost:11434",is_default:!0}}getCurrentSettings(){return this.currentSettings||this.getDefaultSettings()}setSettings(t){this.currentSettings=t,console.log("AISettingsManager: Settings updated:",t)}getModel(){let t=this.getCurrentSettings();return t.ai_model||t.model||this.defaultModel}getProvider(){let t=this.getCurrentSettings();return t.ai_provider||t.provider||"ollama"}async getDecryptedApiKey(){let t=this.getCurrentSettings();if(t.apiKey&&t.apiKey!=="encrypted")return t.apiKey;if(t.api_key_encrypted&&t.id)try{let e=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/ai-settings/".concat(t.id,"/encrypted-key")});if(e&&e.success&&e.api_key_encrypted){let n=await chrome.runtime.sendMessage({action:"apiRequest",method:"POST",url:"/ai-settings/decrypt-api-key",data:{encryptedApiKey:e.api_key_encrypted}});if(n&&n.success)return t.apiKey=n.decryptedApiKey,n.decryptedApiKey}}catch(e){throw console.error("AISettingsManager: Error fetching/decrypting API key:",e),new Error("Failed to retrieve API key")}return null}async testConnection(){try{let t=this.getProvider();return t==="ollama"?await chrome.runtime.sendMessage({action:"testOllama"}):t==="openai"?await chrome.runtime.sendMessage({action:"testOpenAI"}):this.getCurrentSettings().apiKey?{success:!0,message:"".concat(t," settings validated")}:{success:!1,error:"API key required for ".concat(t)}}catch(t){return console.error("AISettingsManager: Error testing connection:",t),{success:!1,error:t.message}}}async callAI(t){var e,n,s;try{let o=this.getProvider(),r=this.getModel();console.log("=== AI API CALL DEBUG ==="),console.log("Provider:",o),console.log("Model:",r),console.log("Request Data:",{prompt:t.prompt,messages:t.messages,max_tokens:t.max_tokens,temperature:t.temperature,stream:t.stream});let l=0;if(t.prompt?(l=this.estimateTokens(t.prompt),console.log("Input tokens (prompt):",l)):t.messages&&(l=this.estimateTokensFromMessages(t.messages),console.log("Input tokens (messages):",l)),o==="ollama"){let a=h(m({},t),{model:r});console.log("Sending Ollama request:",a);let i=await chrome.runtime.sendMessage({action:"callOllama",endpoint:"generate",data:a});if(i.success===!1)throw new Error(i.error||"Unknown error from Ollama API");let c=this.estimateTokens(i.data.response||"");return console.log("Output tokens:",c),console.log("Total tokens:",l+c),console.log("=== END AI API CALL DEBUG ==="),i.data}else if(o==="openai"){let a=await this.getDecryptedApiKey();if(!a)throw new Error("OpenAI API key is required");let i=h(m({},t),{model:r,apiKey:a});console.log("Sending OpenAI request:",h(m({},i),{apiKey:"[REDACTED]"}));let c=await chrome.runtime.sendMessage({action:"callOpenAI",data:i});if(c.success===!1)throw new Error(c.error||"Unknown error from OpenAI API");let p=((e=c.data.usage)==null?void 0:e.completion_tokens)||0,d=((n=c.data.usage)==null?void 0:n.total_tokens)||0;return console.log("OpenAI Token Usage:",{prompt_tokens:((s=c.data.usage)==null?void 0:s.prompt_tokens)||0,completion_tokens:p,total_tokens:d}),console.log("=== END AI API CALL DEBUG ==="),c.data}else throw new Error("Provider ".concat(o," not yet implemented"))}catch(o){throw console.error("AISettingsManager: Error calling AI API:",o),o}}async callAIWithStop(t,e=null){try{let n=this.getProvider();if(n==="ollama"){let s=this.getModel(),o=h(m({},t),{model:s});return new Promise((r,l)=>{let a=null;e&&(a=setInterval(async()=>{try{let i=!1;typeof e=="function"?i=await e():e&&e.value!==void 0?i=e.value:i=!!e,i&&(console.log("Stop requested during AI API call"),a&&clearInterval(a),r({stopped:!0}))}catch(i){console.error("Error in stop check:",i)}},500)),chrome.runtime.sendMessage({action:"callOllama",endpoint:"generate",data:o},i=>{a&&clearInterval(a),chrome.runtime.lastError?l(new Error(chrome.runtime.lastError.message)):i.success===!1?l(new Error(i.error||"Unknown error from Ollama API")):r(i.data)})})}else if(n==="openai"){let s=this.getModel(),o=await this.getDecryptedApiKey();if(!o)throw new Error("OpenAI API key is required");return new Promise((r,l)=>{let a=null;e&&(a=setInterval(async()=>{try{let i=!1;typeof e=="function"?i=await e():e&&e.value!==void 0?i=e.value:i=!!e,i&&(console.log("Stop requested during OpenAI API call"),a&&clearInterval(a),r({stopped:!0}))}catch(i){console.error("Error in stop check:",i)}},500)),chrome.runtime.sendMessage({action:"callOpenAI",data:h(m({},t),{model:s,apiKey:o})},i=>{a&&clearInterval(a),chrome.runtime.lastError?l(new Error(chrome.runtime.lastError.message)):i.success===!1?l(new Error(i.error||"Unknown error from OpenAI API")):r(i.data)})})}else throw new Error("Provider ".concat(n," not yet implemented"))}catch(n){throw console.error("AISettingsManager: Error calling AI API with stop:",n),n}}async loadAvailableModels(){try{let t=this.getProvider();if(t==="ollama"){let e=await chrome.runtime.sendMessage({action:"ollamaRequest",method:"GET",url:"/api/tags"});if(e&&e.success)return e.models.map(n=>n.name);throw new Error((e==null?void 0:e.error)||"Failed to load Ollama models")}else throw new Error("Provider ".concat(t," not yet implemented"))}catch(t){throw console.error("AISettingsManager: Error loading models:",t),t}}estimateTokens(t){if(!t)return 0;let e=t.length;return Math.ceil(e/4)}estimateTokensFromMessages(t){if(!t||!Array.isArray(t))return 0;let e=0;for(let n of t)n.content&&(e+=this.estimateTokens(n.content)),e+=4;return e}getTokenAnalysis(t){let e={inputTokens:0,estimatedOutputTokens:0,maxTokens:t.max_tokens||1e3,provider:this.getProvider(),model:this.getModel()};return t.prompt?e.inputTokens=this.estimateTokens(t.prompt):t.messages&&(e.inputTokens=this.estimateTokensFromMessages(t.messages)),e.estimatedOutputTokens=Math.min(e.maxTokens,100),e}clear(){this.currentSettings=null,this.settingsLoadPromise=null}},S=A;var I=class{constructor(t=null){this.userId=t,this.user_data=null,this.formatted_text=null,this.aiSettingsManager=new S,this.settingsLoadPromise=null,t&&(this.settingsLoadPromise=this.aiSettingsManager.loadAISettings(t))}async setUserId(t){this.userId=t,t&&(this.settingsLoadPromise=this.aiSettingsManager.loadAISettings(t),await this.settingsLoadPromise)}async ensureSettingsLoaded(){this.settingsLoadPromise&&(await this.settingsLoadPromise,this.settingsLoadPromise=null)}setModel(t){if(t&&typeof t=="string"){let e=this.aiSettingsManager.getCurrentSettings(),n=h(m({},e),{model:t});this.aiSettingsManager.setSettings(n),console.log("AIQuestionAnswerer: Model overridden to: ".concat(t))}}async setUserContext(t,e=null){try{if(typeof t=="object"&&t!==null)this.user_data=t,this.formatted_text=e||this.formatUserDataAsText(),console.log("User context set with structured data");else if(typeof t=="string")this.user_data=null,this.formatted_text=t,console.log("User context set with formatted text only");else throw new Error("Invalid user data format");return console.log("User context set successfully"),{success:!0}}catch(n){return console.error("Error in setUserContext:",n),{success:!1,error:n.message}}}async answerQuestion(t,e=null,n=null,s=null){var o,r,l;try{await this.ensureSettingsLoaded(),console.log("=== AI QUESTION ANSWERING DEBUG ==="),console.log("Question:",t),console.log("Using AI model:",this.aiSettingsManager.getModel()),console.log("Options:",e),console.log("Resume ID:",s);let a=null;if(s)try{let u=this.detectQuestionType(t);console.log("Detected question type:",u);let y=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/resumes/".concat(s,"/relevant-data?questionType=").concat(u)});y&&y.success?(a=y.relevantData,console.log("Retrieved relevant data from database:",a)):console.log("No structured data found, falling back to user context")}catch(u){console.error("Error retrieving structured data:",u)}let i=this.getDirectAnswer(t,a);if(i){if(console.log("Found direct answer:",i),e&&Array.isArray(e)&&e.length>0){let u=this.matchToOption(i,e);return console.log("Matched direct answer to option:",u),console.log("=== END AI QUESTION ANSWERING DEBUG ==="),{success:!0,answer:u}}return console.log("=== END AI QUESTION ANSWERING DEBUG ==="),{success:!0,answer:i}}if(n){let u=!1;if(typeof n=="function"?u=await n():n&&n.value!==void 0?u=n.value:u=!!n,u)return console.log("Stop requested before AI processing"),console.log("=== END AI QUESTION ANSWERING DEBUG ==="),{success:!1,stopped:!0}}let c=this.buildEnhancedPrompt(t,e);console.log("=== FULL PROMPT BEING SENT ==="),console.log(c),console.log("=== END FULL PROMPT ===");let p=this.aiSettingsManager.getTokenAnalysis({prompt:c});console.log("Token Analysis:",p);let d=await this.aiSettingsManager.callAIWithStop({prompt:c,stream:!1},n);if(d&&d.stopped)return console.log("=== END AI QUESTION ANSWERING DEBUG ==="),{success:!1,stopped:!0};let f="";if(d!=null&&d.response?f=d.response.trim():(l=(r=(o=d==null?void 0:d.choices)==null?void 0:o[0])==null?void 0:r.message)!=null&&l.content?f=d.choices[0].message.content.trim():(console.warn("Unexpected AI response format:",d),f=""),console.log("Raw AI response:",f),this.isYearsOfExperienceQuestion(t)&&/^\d+$/.test(f)){let u=parseInt(f);u<5&&(f="5",console.log("Enforced minimum 5 years for experience question, was: ".concat(u)))}return e&&Array.isArray(e)&&e.length>0&&(f=this.matchToOption(f,e)),console.log("Final answer:",f),console.log("=== END AI QUESTION ANSWERING DEBUG ==="),{success:!0,answer:f||"Information not available"}}catch(a){return console.error("Error in answerQuestion:",a),console.log("=== END AI QUESTION ANSWERING DEBUG ==="),{success:!0,answer:e&&Array.isArray(e)&&e.length>0?e.length>1?e[1]:e[0]:"Information not available"}}}detectQuestionType(t){let e=t.toLowerCase();return e.includes("level of")||e.includes("proficiency in")||e.includes("fluent in")?"language_level":e.includes("skill")||e.includes("experience")||e.includes("years")||e.includes("technology")||e.includes("programming")||e.includes("language")||e.includes("c++")||e.includes("python")||e.includes("java")?"skills":e.includes("education")||e.includes("degree")||e.includes("study")||e.includes("university")||e.includes("college")?"education":e.includes("language")||e.includes("speak")||e.includes("fluent")?"languages":e.includes("certification")||e.includes("certified")?"certifications":e.includes("name")||e.includes("email")||e.includes("phone")||e.includes("contact")||e.includes("location")?"personal":e.includes("visa")||e.includes("sponsorship")||e.includes("work permit")?"visa":e.includes("salary")||e.includes("compensation")||e.includes("pay")||e.includes("expectation")?"salary":e.includes("notice")||e.includes("period")||e.includes("availability")||e.includes("start date")?"notice":"general"}getDirectAnswer(t,e=null){var o;if(e){let r=t.toLowerCase();if(e.languages&&(r.includes("level of")||r.includes("proficiency"))){for(let l of["german","english","french","arabic","spanish"])if(r.includes(l)){let a=e.languages.find(i=>{var c;return((c=i.language)==null?void 0:c.toLowerCase())===l});if(a)return a.proficiency||"Unknown"}}if(e.personal_info){if(r.includes("email")||r.includes("e-mail"))return e.personal_info.email||null;if(r.includes("phone")||r.includes("telephone")||r.includes("mobile"))return e.personal_info.phone||null;if(r.includes("name"))return e.personal_info.name||null;if(r.includes("location")||r.includes("address"))return e.personal_info.location||null;if(r.includes("citizenship"))return e.personal_info.citizenship||null;if(r.includes("visa")||r.includes("sponsorship"))return e.personal_info.visa_required||null;if(r.includes("salary")||r.includes("compensation")||r.includes("pay"))return e.personal_info.salary||null}}if(!((o=this.user_data)!=null&&o.personal_information))return null;let n=this.user_data.personal_information,s=t.toLowerCase();return s.includes("email")||s.includes("e-mail")?n.email||null:s.includes("phone")||s.includes("mobile")||s.includes("telefon")?(n.phone_prefix?"".concat(n.phone_prefix).concat(n.phone):n.phone)||null:s.includes("first name")||s.includes("vorname")?n.name||null:s.includes("last name")||s.includes("surname")||s.includes("nachname")?n.surname||null:s.includes("country")&&!s.includes("code")?n.country||null:this.isNoticePeriodOrStartDateQuestion(t)?s.includes("notice period")||s.includes("k\xFCndigungsfrist")||s.includes("kuendigungsfrist")?s.includes("monate")||s.includes("deutsch")?"2 Monate":"2 months":this.calculateDateTwoMonthsFromNow():null}buildEnhancedPrompt(t,e){let n=this.formatUserDataAsText(),s='You are a job applicant filling out a job application form. Answer questions based on your resume information in first person (as "I" not "he/she").\n\nMY RESUME:\n'.concat(n,"\n\nQUESTION: ").concat(t,'\n\nIMPORTANT GENERAL RULES:\n- Answer as the job applicant (use "I", "my", "me" - NOT "he", "she", "Sami", or third person)\n- Be concise and direct\n- Only provide the specific information requested\n- Do not mention your name unless explicitly asked');if(this.isDecimalNumberQuestion(t)&&(s+='\n\nIMPORTANT RULES FOR DECIMAL NUMBERS:\n- If asked for a decimal number, provide ONLY a decimal number (e.g., "3.5", "2.0", "1.2")\n- Do NOT include explanations, descriptions, or additional text\n- The number should be greater than 0.0 as requested\n- Example: "3.0" not "3.0 years" or explanations'),this.isYearsOfExperienceQuestion(t)&&(s+='\n\nIMPORTANT RULES FOR YEARS OF EXPERIENCE:\n- If asked for years of experience, provide ONLY a number between 5-99\n- MINIMUM is always 5 years - never return 0, 1, 2, 3, or 4\n- Do NOT include words like "years", "Jahre", or descriptions\n- For skill levels: Beginner=5, Intermediate=7, Advanced=10+ years\n- Calculate based on work experience and skill level\n- If no specific experience found, default to 5 years minimum\n- If unclear or no data, always answer at least 5 years to maximize job prospects\n- Example: "5" not "5 years" or "5 Jahre"\n- Better to overestimate than underestimate for better interview chances'),this.isDegreeQuestion(t)&&(s+='\n\nIMPORTANT RULES FOR DEGREE QUESTIONS:\n- Check education section carefully for exact degree matches\n- "Bachelor" = "Bachelor of Engineering" or "Bachelor of Science"\n- "Master" = "Master of Engineering" or "Master of Science"\n- Answer "Ja" for German forms, "Yes" for English forms\n- If degree is found, answer positively\n- Look for exact degree names in education section'),this.isSkillLevelQuestion(t)&&(s+="\n\nIMPORTANT RULES FOR SKILL LEVEL QUESTIONS:\n- Check the skills section for exact skill matches\n- Look for the skill name and its level (Beginner/Intermediate/Advanced)\n- Be precise about the level mentioned in the resume\n- Do not guess or estimate levels"),this.isNoticePeriodOrStartDateQuestion(t)){let o=this.calculateDateTwoMonthsFromNow();s+='\n\nIMPORTANT RULES FOR NOTICE PERIOD AND START DATE:\n- For notice period questions, answer "2 months" or "2 Monate"\n- For starting date questions, provide the exact date: '.concat(o,'\n- Use the format DD.MM.YYYY for German forms (e.g., "15.03.2024")\n- Use the format MM/DD/YYYY for English forms (e.g., "03/15/2024")\n- Current calculated start date (2 months from today): ').concat(o,"\n- Be consistent with the date format expected by the form")}if(e&&Array.isArray(e)&&e.length>0){let o=e.map(r=>'"'.concat(r,'"')).join(", ");s+="\n\nAvailable Options: [".concat(o,"]\n\nIMPORTANT: You MUST choose EXACTLY ONE option from the list above. Your answer should match one of the options EXACTLY as written.")}return s+="\n\nANSWER:",s}isDecimalNumberQuestion(t){let e=t.toLowerCase();return e.includes("decimal")||e.includes("dezimal")||e.includes("gr\xF6\xDFer als 0.0")||e.includes("greater than 0.0")||e.includes("decimal zahl")||e.includes("decimal number")}isYearsOfExperienceQuestion(t){let e=t.toLowerCase();return e.includes("jahre")||e.includes("years")||e.includes("experience")||e.includes("erfahrung")||e.includes("how many")||e.includes("wie viele")}isDegreeQuestion(t){let e=t.toLowerCase();return e.includes("bachelor")||e.includes("master")||e.includes("degree")||e.includes("abschluss")||e.includes("bildung")||e.includes("education")}isSkillLevelQuestion(t){let e=t.toLowerCase();return e.includes("level")||e.includes("niveau")||e.includes("skill")||e.includes("f\xE4higkeit")||e.includes("experience with")||e.includes("erfahrung mit")}isNoticePeriodOrStartDateQuestion(t){let e=t.toLowerCase();return e.includes("notice period")||e.includes("starting date")||e.includes("start date")||e.includes("startdatum")||e.includes("beginn")||e.includes("beginnen")||e.includes("k\xFCndigungsfrist")||e.includes("kuendigungsfrist")||e.includes("verf\xFCgbar")||e.includes("verfuegbar")||e.includes("available")||e.includes("wann k\xF6nnen sie")||e.includes("when can you")||e.includes("earliest start")||e.includes("fr\xFChester beginn")||e.includes("fruehester beginn")}calculateDateTwoMonthsFromNow(){let t=new Date;t.setMonth(t.getMonth()+2);let e=String(t.getDate()).padStart(2,"0"),n=String(t.getMonth()+1).padStart(2,"0"),s=t.getFullYear();return"".concat(e,".").concat(n,".").concat(s)}formatUserDataAsText(){return this.formatted_text?this.formatted_text:this.user_data?typeof this.user_data=="string"?this.user_data:this.formatObject(this.user_data,0):"No user data available."}formatObject(t,e=0){let n="  ".repeat(e),s="";if(typeof t=="object"&&t!==null)if(Array.isArray(t))for(let o of t)typeof o=="object"&&o!==null?s+="".concat(n,"- ").concat(this.formatObject(o,e+1)):s+="".concat(n,"- ").concat(o,"\n");else for(let[o,r]of Object.entries(t)){let l=o.toUpperCase().replace(/_/g," ");s+="".concat(n).concat(l,":\n"),typeof r=="object"&&r!==null?s+=this.formatObject(r,e+1):s+="".concat(n,"  ").concat(r,"\n")}else s+="".concat(n).concat(t,"\n");return s}matchToOption(t,e){if(!t||!e||e.length===0)return(e==null?void 0:e.length)>0?e[0]:"Not available";if(this.isDecimalNumberQuestion(t)||/^\d+\.\d+$/.test(t.trim())){let n=t.match(/\d+\.\d+/);if(n){let s=n[0];for(let o of e)if(o.includes(s))return o;return s}}if(this.isYearsOfExperienceQuestion(t)||/^\d+$/.test(t.trim())){let n=t.match(/\d+/);if(n){let s=parseInt(n[0]);this.isYearsOfExperienceQuestion(t)&&s<5&&(s=5);let o=s.toString();for(let r of e)if(r.includes(o))return r;return o}}if(this.isNoticePeriodOrStartDateQuestion(t)){if(t.toLowerCase().includes("2 months")||t.toLowerCase().includes("2 monate")){for(let s of e)if(s.toLowerCase().includes("2 months")||s.toLowerCase().includes("2 monate")||s.toLowerCase().includes("2 month"))return s;return t}let n=t.match(/\d{1,2}[.\/-]\d{1,2}[.\/-]\d{4}/);if(n){let s=n[0];for(let o of e)if(o.includes(s))return o;return s}}for(let n of e)if(n.toLowerCase()===t.toLowerCase())return n;for(let n of e)if(n.toLowerCase().includes(t.toLowerCase())||t.toLowerCase().includes(n.toLowerCase()))return n;if(t.toLowerCase().includes("germany")||t.toLowerCase().includes("deutsch")){for(let n of e)if(n.toLowerCase().includes("deutsch")||n.toLowerCase().includes("germany")||n.includes("+49"))return n}return e.length>1?e[1]:e[0]}async testConnection(){try{return await this.ensureSettingsLoaded(),(await this.aiSettingsManager.testConnection()).success}catch(t){return console.error("Error testing AI connection:",t),!1}}getAISettings(){return this.aiSettingsManager.getCurrentSettings()}clear(){this.user_data=null,this.formatted_text=null,this.aiSettingsManager.clear(),this.settingsLoadPromise=null}},U=I;export{U as default};
