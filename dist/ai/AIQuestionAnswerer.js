var p=Object.defineProperty,y=Object.defineProperties;var S=Object.getOwnPropertyDescriptors;var h=Object.getOwnPropertySymbols;var A=Object.prototype.hasOwnProperty,M=Object.prototype.propertyIsEnumerable;var m=(l,t,e)=>t in l?p(l,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):l[t]=e,u=(l,t)=>{for(var e in t||(t={}))A.call(t,e)&&m(l,e,t[e]);if(h)for(var e of h(t))M.call(t,e)&&m(l,e,t[e]);return l},d=(l,t)=>y(l,S(t));var f=class{constructor(){this.currentSettings=null,this.defaultModel="qwen2.5:3b",this.settingsLoadPromise=null}async loadAISettings(t){try{console.log("AISettingsManager: Loading AI settings for user:",t);let e=await chrome.runtime.sendMessage({action:"apiRequest",method:"GET",url:"/users/".concat(t,"/ai-settings/default")});return e&&e.success?(this.currentSettings=e.ai_settings,console.log("AISettingsManager: Successfully loaded AI settings:",this.currentSettings),this.currentSettings):(console.warn("AISettingsManager: No AI settings found, using default"),this.getDefaultSettings())}catch(e){return console.error("AISettingsManager: Error loading AI settings:",e),this.getDefaultSettings()}}getDefaultSettings(){return{provider:"ollama",model:this.defaultModel,apiKey:null,baseUrl:"http://localhost:11434",is_default:!0}}getCurrentSettings(){return this.currentSettings||this.getDefaultSettings()}setSettings(t){this.currentSettings=t,console.log("AISettingsManager: Settings updated:",t)}getModel(){return this.getCurrentSettings().model||this.defaultModel}getProvider(){return this.getCurrentSettings().provider||"ollama"}async testConnection(){try{let t=this.getProvider();return t==="ollama"?await chrome.runtime.sendMessage({action:"testOllama"}):this.getCurrentSettings().apiKey?{success:!0,message:"".concat(t," settings validated")}:{success:!1,error:"API key required for ".concat(t)}}catch(t){return console.error("AISettingsManager: Error testing connection:",t),{success:!1,error:t.message}}}async callAI(t){try{let e=this.getProvider();if(e==="ollama"){let r=this.getModel(),s=d(u({},t),{model:r}),n=await chrome.runtime.sendMessage({action:"callOllama",endpoint:"generate",data:s});if(n.success===!1)throw new Error(n.error||"Unknown error from Ollama API");return n.data}else throw new Error("Provider ".concat(e," not yet implemented"))}catch(e){throw console.error("AISettingsManager: Error calling AI API:",e),e}}async callAIWithStop(t,e=null){try{let r=this.getProvider();if(r==="ollama"){let s=this.getModel(),n=d(u({},t),{model:s});return new Promise((o,c)=>{let a=null;e&&(a=setInterval(async()=>{try{let i=!1;typeof e=="function"?i=await e():e&&e.value!==void 0?i=e.value:i=!!e,i&&(console.log("Stop requested during AI API call"),a&&clearInterval(a),o({stopped:!0}))}catch(i){console.error("Error in stop check:",i)}},500)),chrome.runtime.sendMessage({action:"callOllama",endpoint:"generate",data:n},i=>{a&&clearInterval(a),chrome.runtime.lastError?c(new Error(chrome.runtime.lastError.message)):i.success===!1?c(new Error(i.error||"Unknown error from Ollama API")):o(i.data)})})}else throw new Error("Provider ".concat(r," not yet implemented"))}catch(r){throw console.error("AISettingsManager: Error calling AI API with stop:",r),r}}async loadAvailableModels(){try{let t=this.getProvider();if(t==="ollama"){let e=await chrome.runtime.sendMessage({action:"ollamaRequest",method:"GET",url:"/api/tags"});if(e&&e.success)return e.models.map(r=>r.name);throw new Error((e==null?void 0:e.error)||"Failed to load Ollama models")}else throw new Error("Provider ".concat(t," not yet implemented"))}catch(t){throw console.error("AISettingsManager: Error loading models:",t),t}}clear(){this.currentSettings=null,this.settingsLoadPromise=null}},w=f;var g=class{constructor(t=null){this.userId=t,this.user_data=null,this.formatted_text=null,this.aiSettingsManager=new w,this.settingsLoadPromise=null,t&&(this.settingsLoadPromise=this.aiSettingsManager.loadAISettings(t))}async setUserId(t){this.userId=t,t&&(this.settingsLoadPromise=this.aiSettingsManager.loadAISettings(t),await this.settingsLoadPromise)}async ensureSettingsLoaded(){this.settingsLoadPromise&&(await this.settingsLoadPromise,this.settingsLoadPromise=null)}setModel(t){if(t&&typeof t=="string"){let e=this.aiSettingsManager.getCurrentSettings(),r=d(u({},e),{model:t});this.aiSettingsManager.setSettings(r),console.log("AIQuestionAnswerer: Model overridden to: ".concat(t))}}async setUserContext(t,e=null){try{if(typeof t=="object"&&t!==null)this.user_data=t,this.formatted_text=e||this.formatUserDataAsText(),console.log("User context set with structured data");else if(typeof t=="string")this.user_data=null,this.formatted_text=t,console.log("User context set with formatted text only");else throw new Error("Invalid user data format");return console.log("User context set successfully"),{success:!0}}catch(r){return console.error("Error in setUserContext:",r),{success:!1,error:r.message}}}async answerQuestion(t,e=null,r=null){var s;try{await this.ensureSettingsLoaded(),console.log("Answering question:",t),console.log("Using AI model:",this.aiSettingsManager.getModel()),console.log("Options:",e);let n=this.getDirectAnswer(t);if(n){if(console.log("Found direct answer:",n),e&&Array.isArray(e)&&e.length>0){let i=this.matchToOption(n,e);return console.log("Matched direct answer to option:",i),{success:!0,answer:i}}return{success:!0,answer:n}}if(r){let i=!1;if(typeof r=="function"?i=await r():r&&r.value!==void 0?i=r.value:i=!!r,i)return console.log("Stop requested before AI processing"),{success:!1,stopped:!0}}let o=this.buildEnhancedPrompt(t,e),c=await this.aiSettingsManager.callAIWithStop({prompt:o,stream:!1},r);if(c&&c.stopped)return{success:!1,stopped:!0};let a=((s=c==null?void 0:c.response)==null?void 0:s.trim())||"";if(this.isYearsOfExperienceQuestion(t)&&/^\d+$/.test(a)){let i=parseInt(a);i<5&&(a="5",console.log("Enforced minimum 5 years for experience question, was: ".concat(i)))}return e&&Array.isArray(e)&&e.length>0&&(a=this.matchToOption(a,e)),console.log("Final answer:",a),{success:!0,answer:a||"Information not available"}}catch(n){return console.error("Error in answerQuestion:",n),{success:!0,answer:e&&Array.isArray(e)&&e.length>0?e.length>1?e[1]:e[0]:"Information not available"}}}getDirectAnswer(t){var s;if(!((s=this.user_data)!=null&&s.personal_information))return null;let e=this.user_data.personal_information,r=t.toLowerCase();return r.includes("email")||r.includes("e-mail")?e.email||null:r.includes("phone")||r.includes("mobile")||r.includes("telefon")?(e.phone_prefix?"".concat(e.phone_prefix).concat(e.phone):e.phone)||null:r.includes("first name")||r.includes("vorname")?e.name||null:r.includes("last name")||r.includes("surname")||r.includes("nachname")?e.surname||null:r.includes("country")&&!r.includes("code")?e.country||null:this.isNoticePeriodOrStartDateQuestion(t)?r.includes("notice period")||r.includes("k\xFCndigungsfrist")||r.includes("kuendigungsfrist")?r.includes("monate")||r.includes("deutsch")?"2 Monate":"2 months":this.calculateDateTwoMonthsFromNow():null}buildEnhancedPrompt(t,e){let r=this.formatUserDataAsText(),s='You are a job applicant filling out a job application form. Answer questions based on your resume information in first person (as "I" not "he/she").\n\nMY RESUME:\n'.concat(r,"\n\nQUESTION: ").concat(t,'\n\nIMPORTANT GENERAL RULES:\n- Answer as the job applicant (use "I", "my", "me" - NOT "he", "she", "Sami", or third person)\n- Be concise and direct\n- Only provide the specific information requested\n- Do not mention your name unless explicitly asked');if(this.isDecimalNumberQuestion(t)&&(s+='\n\nIMPORTANT RULES FOR DECIMAL NUMBERS:\n- If asked for a decimal number, provide ONLY a decimal number (e.g., "3.5", "2.0", "1.2")\n- Do NOT include explanations, descriptions, or additional text\n- The number should be greater than 0.0 as requested\n- Example: "3.0" not "3.0 years" or explanations'),this.isYearsOfExperienceQuestion(t)&&(s+='\n\nIMPORTANT RULES FOR YEARS OF EXPERIENCE:\n- If asked for years of experience, provide ONLY a number between 5-99\n- MINIMUM is always 5 years - never return 0, 1, 2, 3, or 4\n- Do NOT include words like "years", "Jahre", or descriptions\n- For skill levels: Beginner=5, Intermediate=7, Advanced=10+ years\n- Calculate based on work experience and skill level\n- If no specific experience found, default to 5 years minimum\n- If unclear or no data, always answer at least 5 years to maximize job prospects\n- Example: "5" not "5 years" or "5 Jahre"\n- Better to overestimate than underestimate for better interview chances'),this.isDegreeQuestion(t)&&(s+='\n\nIMPORTANT RULES FOR DEGREE QUESTIONS:\n- Check education section carefully for exact degree matches\n- "Bachelor" = "Bachelor of Engineering" or "Bachelor of Science"\n- "Master" = "Master of Engineering" or "Master of Science"\n- Answer "Ja" for German forms, "Yes" for English forms\n- If degree is found, answer positively\n- Look for exact degree names in education section'),this.isSkillLevelQuestion(t)&&(s+="\n\nIMPORTANT RULES FOR SKILL LEVEL QUESTIONS:\n- Check the skills section for exact skill matches\n- Look for the skill name and its level (Beginner/Intermediate/Advanced)\n- Be precise about the level mentioned in the resume\n- Do not guess or estimate levels"),this.isNoticePeriodOrStartDateQuestion(t)){let n=this.calculateDateTwoMonthsFromNow();s+='\n\nIMPORTANT RULES FOR NOTICE PERIOD AND START DATE:\n- For notice period questions, answer "2 months" or "2 Monate"\n- For starting date questions, provide the exact date: '.concat(n,'\n- Use the format DD.MM.YYYY for German forms (e.g., "15.03.2024")\n- Use the format MM/DD/YYYY for English forms (e.g., "03/15/2024")\n- Current calculated start date (2 months from today): ').concat(n,"\n- Be consistent with the date format expected by the form")}if(e&&Array.isArray(e)&&e.length>0){let n=e.map(o=>'"'.concat(o,'"')).join(", ");s+="\n\nAvailable Options: [".concat(n,"]\n\nIMPORTANT: You MUST choose EXACTLY ONE option from the list above. Your answer should match one of the options EXACTLY as written.")}return s+="\n\nANSWER:",s}isDecimalNumberQuestion(t){let e=t.toLowerCase();return e.includes("decimal")||e.includes("dezimal")||e.includes("gr\xF6\xDFer als 0.0")||e.includes("greater than 0.0")||e.includes("decimal zahl")||e.includes("decimal number")}isYearsOfExperienceQuestion(t){let e=t.toLowerCase();return e.includes("jahre")||e.includes("years")||e.includes("experience")||e.includes("erfahrung")||e.includes("how many")||e.includes("wie viele")}isDegreeQuestion(t){let e=t.toLowerCase();return e.includes("bachelor")||e.includes("master")||e.includes("degree")||e.includes("abschluss")||e.includes("bildung")||e.includes("education")}isSkillLevelQuestion(t){let e=t.toLowerCase();return e.includes("level")||e.includes("niveau")||e.includes("skill")||e.includes("f\xE4higkeit")||e.includes("experience with")||e.includes("erfahrung mit")}isNoticePeriodOrStartDateQuestion(t){let e=t.toLowerCase();return e.includes("notice period")||e.includes("starting date")||e.includes("start date")||e.includes("startdatum")||e.includes("beginn")||e.includes("beginnen")||e.includes("k\xFCndigungsfrist")||e.includes("kuendigungsfrist")||e.includes("verf\xFCgbar")||e.includes("verfuegbar")||e.includes("available")||e.includes("wann k\xF6nnen sie")||e.includes("when can you")||e.includes("earliest start")||e.includes("fr\xFChester beginn")||e.includes("fruehester beginn")}calculateDateTwoMonthsFromNow(){let t=new Date;t.setMonth(t.getMonth()+2);let e=String(t.getDate()).padStart(2,"0"),r=String(t.getMonth()+1).padStart(2,"0"),s=t.getFullYear();return"".concat(e,".").concat(r,".").concat(s)}formatUserDataAsText(){return this.formatted_text?this.formatted_text:this.user_data?typeof this.user_data=="string"?this.user_data:this.formatObject(this.user_data,0):"No user data available."}formatObject(t,e=0){let r="  ".repeat(e),s="";if(typeof t=="object"&&t!==null)if(Array.isArray(t))for(let n of t)typeof n=="object"&&n!==null?s+="".concat(r,"- ").concat(this.formatObject(n,e+1)):s+="".concat(r,"- ").concat(n,"\n");else for(let[n,o]of Object.entries(t)){let c=n.toUpperCase().replace(/_/g," ");s+="".concat(r).concat(c,":\n"),typeof o=="object"&&o!==null?s+=this.formatObject(o,e+1):s+="".concat(r,"  ").concat(o,"\n")}else s+="".concat(r).concat(t,"\n");return s}matchToOption(t,e){if(!t||!e||e.length===0)return(e==null?void 0:e.length)>0?e[0]:"Not available";if(this.isDecimalNumberQuestion(t)||/^\d+\.\d+$/.test(t.trim())){let r=t.match(/\d+\.\d+/);if(r){let s=r[0];for(let n of e)if(n.includes(s))return n;return s}}if(this.isYearsOfExperienceQuestion(t)||/^\d+$/.test(t.trim())){let r=t.match(/\d+/);if(r){let s=parseInt(r[0]);this.isYearsOfExperienceQuestion(t)&&s<5&&(s=5);let n=s.toString();for(let o of e)if(o.includes(n))return o;return n}}if(this.isNoticePeriodOrStartDateQuestion(t)){if(t.toLowerCase().includes("2 months")||t.toLowerCase().includes("2 monate")){for(let s of e)if(s.toLowerCase().includes("2 months")||s.toLowerCase().includes("2 monate")||s.toLowerCase().includes("2 month"))return s;return t}let r=t.match(/\d{1,2}[.\/-]\d{1,2}[.\/-]\d{4}/);if(r){let s=r[0];for(let n of e)if(n.includes(s))return n;return s}}for(let r of e)if(r.toLowerCase()===t.toLowerCase())return r;for(let r of e)if(r.toLowerCase().includes(t.toLowerCase())||t.toLowerCase().includes(r.toLowerCase()))return r;if(t.toLowerCase().includes("germany")||t.toLowerCase().includes("deutsch")){for(let r of e)if(r.toLowerCase().includes("deutsch")||r.toLowerCase().includes("germany")||r.includes("+49"))return r}return e.length>1?e[1]:e[0]}async testConnection(){try{return await this.ensureSettingsLoaded(),(await this.aiSettingsManager.testConnection()).success}catch(t){return console.error("Error testing AI connection:",t),!1}}getAISettings(){return this.aiSettingsManager.getCurrentSettings()}clear(){this.user_data=null,this.formatted_text=null,this.aiSettingsManager.clear(),this.settingsLoadPromise=null}},b=g;export{b as default};
