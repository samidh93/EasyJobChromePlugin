chrome.runtime.onInstalled.addListener(()=>{console.log("Job Tracker Extension Installed")});async function l(){try{console.log("Testing Ollama connection...");let t=await a("chat",{model:"qwen2.5:3b",messages:[{role:"system",content:"You are a helpful AI assistant."},{role:"user",content:"Hello, are you working?"}],stream:!1});if(t.success)return console.log("Ollama chat test successful:",t.data),{success:!0,data:{version:t.data.model,response:t.data.message.content,port:11434}};throw new Error(t.error||"Unknown error from Ollama")}catch(r){return console.error("Ollama connection failed:",r),{success:!1,error:r.message,details:r.stack,troubleshooting:"Please make sure Ollama is running on your computer. Try running 'ollama serve' in your terminal."}}}async function c(r){try{console.log("Getting embeddings for text: ".concat(r.substring(0,50)).concat(r.length>50?"...":""));let t=11434,o={model:"nomic-embed-text",prompt:r,stream:!1},e=await fetch("http://localhost:".concat(t,"/api/embeddings"),{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json","Access-Control-Allow-Origin":"*"},body:JSON.stringify(o),signal:AbortSignal.timeout(15e3)});if(!e.ok){let n=await e.text();throw console.error("Ollama embeddings API error:",{status:e.status,statusText:e.statusText,body:n}),new Error("HTTP error! status: ".concat(e.status,", details: ").concat(n))}let s=await e.json();return console.log("Embeddings generated successfully"),{success:!0,data:s}}catch(t){console.error("Embeddings API call failed:",t);let o="Please make sure Ollama is running on your computer. Try running 'ollama serve' in your terminal.";return t.name==="AbortError"?o+=" The request timed out - your model might be too large or your computer too slow.":t.message.includes("Failed to fetch")&&(o+=" Your computer cannot connect to Ollama. Make sure it's running and not blocked by a firewall."),{success:!1,error:t.message,details:t.stack,troubleshooting:o}}}async function a(r,t){try{console.log("Making Ollama API call to ".concat(r,":"),t);let o=11434;console.log("Using Ollama port: ".concat(o));let e=await fetch("http://localhost:".concat(o,"/api/").concat(r),{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json","Access-Control-Allow-Origin":"*"},body:JSON.stringify(t),signal:AbortSignal.timeout(15e3)});if(!e.ok){let n=await e.text();throw console.error("Ollama API error response:",{status:e.status,statusText:e.statusText,body:n}),new Error("HTTP error! status: ".concat(e.status,", details: ").concat(n))}let s=await e.json();if(console.log("Ollama API call successful:",s),!s||!s.message||!s.message.content)throw console.error("Unexpected response structure from Ollama:",s),new Error("Invalid response format from Ollama");return{success:!0,data:s}}catch(o){console.error("Ollama API call failed (".concat(r,"):"),o);let e="Please make sure Ollama is running on your computer. Try running 'ollama serve' in your terminal.";return o.name==="AbortError"?e+=" The request timed out - your model might be too large or your computer too slow.":o.message.includes("Failed to fetch")?e+=" Your computer cannot connect to Ollama. Make sure it's running and not blocked by a firewall.":o.message.includes("Invalid response format")&&(e+=" Ollama returned an unexpected response format. You might need to update Ollama to a newer version."),{success:!1,error:o.message,details:o.stack,troubleshooting:e}}}chrome.runtime.onMessage.addListener((r,t,o)=>{if(console.log("Received message in background script:",r),r.action==="testOllama")return l().then(e=>{console.log("Sending test Ollama response:",e),o(e)}).catch(e=>{console.error("Error in test Ollama:",e),o({success:!1,error:e.message||"Unknown error",troubleshooting:"Error in background script"})}),!0;if(r.action==="callOllama"){let{endpoint:e,data:s}=r;return console.log("Making Ollama API call:",{endpoint:e,data:s}),a(e,s).then(n=>{console.log("Sending Ollama API response:",n),o(n)}).catch(n=>{console.error("Error in call Ollama API:",n),o({success:!1,error:n.message||"Unknown error",troubleshooting:"Error in background script"})}),!0}if(r.action==="getEmbeddings"){let{text:e}=r;return console.log("Getting embeddings for text"),c(e).then(s=>{console.log("Sending embeddings response"),o(s)}).catch(s=>{console.error("Error getting embeddings:",s),o({success:!1,error:s.message||"Unknown error",troubleshooting:"Error generating embeddings"})}),!0}});
